define(["./when-ae2e0b60","./Matrix2-59fd2efe","./ArcType-1275a14e","./arrayRemoveDuplicates-bce1b0dc","./Transforms-3bc98d07","./Color-9d5d2c3d","./ComponentDatatype-b7b5db18","./RuntimeError-24b14c10","./GeometryAttribute-dff85b2b","./GeometryAttributes-5ce4955a","./IndexDatatype-6902a37d","./PolylinePipeline-5ce4be00","./VertexFormat-1fc9746e","./combine-276652d0","./WebGLConstants-35626ea2","./EllipsoidGeodesic-640f147e","./EllipsoidRhumbLine-535d21cd","./IntersectionTests-d0a84f0f","./Plane-43337cee"],function(z,J,j,K,Q,X,Z,e,$,ee,te,re,y,t,r,o,a,n,i){"use strict";var oe=[];function m(e){var t=(e=z.defaultValue(e,z.defaultValue.EMPTY_OBJECT)).positions,r=e.colors,o=z.defaultValue(e.width,1),a=z.defaultValue(e.colorsPerVertex,!1),o=(this._positions=t,this._colors=r,this._width=o,this._colorsPerVertex=a,this._vertexFormat=y.VertexFormat.clone(z.defaultValue(e.vertexFormat,y.VertexFormat.DEFAULT)),this._arcType=z.defaultValue(e.arcType,j.ArcType.GEODESIC),this._granularity=z.defaultValue(e.granularity,Z.CesiumMath.RADIANS_PER_DEGREE),this._ellipsoid=J.Ellipsoid.clone(z.defaultValue(e.ellipsoid,J.Ellipsoid.WGS84)),this._workerName="createPolylineGeometry",1+t.length*J.Cartesian3.packedLength);o+=z.defined(r)?1+r.length*X.Color.packedLength:1,this.packedLength=o+J.Ellipsoid.packedLength+y.VertexFormat.packedLength+4}m.pack=function(e,t,r){r=z.defaultValue(r,0);var o,a=e._positions,n=a.length;for(t[r++]=n,o=0;o<n;++o,r+=J.Cartesian3.packedLength)J.Cartesian3.pack(a[o],t,r);var i=e._colors,n=z.defined(i)?i.length:0;for(t[r++]=n,o=0;o<n;++o,r+=X.Color.packedLength)X.Color.pack(i[o],t,r);return J.Ellipsoid.pack(e._ellipsoid,t,r),r+=J.Ellipsoid.packedLength,y.VertexFormat.pack(e._vertexFormat,t,r),r+=y.VertexFormat.packedLength,t[r++]=e._width,t[r++]=e._colorsPerVertex?1:0,t[r++]=e._arcType,t[r]=e._granularity,t};var f=J.Ellipsoid.clone(J.Ellipsoid.UNIT_SPHERE),h=new y.VertexFormat,C={positions:void 0,colors:void 0,ellipsoid:f,vertexFormat:h,width:void 0,colorsPerVertex:void 0,arcType:void 0,granularity:void 0},ae=(m.unpack=function(e,t,r){t=z.defaultValue(t,0);for(var o=e[t++],a=new Array(o),n=0;n<o;++n,t+=J.Cartesian3.packedLength)a[n]=J.Cartesian3.unpack(e,t);var i=0<(o=e[t++])?new Array(o):void 0;for(n=0;n<o;++n,t+=X.Color.packedLength)i[n]=X.Color.unpack(e,t);var l=J.Ellipsoid.unpack(e,t,f),s=(t+=J.Ellipsoid.packedLength,y.VertexFormat.unpack(e,t,h)),p=(t+=y.VertexFormat.packedLength,e[t++]),d=1===e[t++],c=e[t++],u=e[t];return z.defined(r)?(r._positions=a,r._colors=i,r._ellipsoid=J.Ellipsoid.clone(l,r._ellipsoid),r._vertexFormat=y.VertexFormat.clone(s,r._vertexFormat),r._width=p,r._colorsPerVertex=d,r._arcType=c,r._granularity=u,r):(C.positions=a,C.colors=i,C.width=p,C.colorsPerVertex=d,C.arcType=c,C.granularity=u,new m(C))},new J.Cartesian3),ne=new J.Cartesian3,ie=new J.Cartesian3,le=new J.Cartesian3;return m.createGeometry=function(e){var r,o,t=e._width,a=e._vertexFormat,n=e._colors,i=e._colorsPerVertex,l=e._arcType,s=e._granularity,p=e._ellipsoid,d=[],c=K.arrayRemoveDuplicates(e._positions,J.Cartesian3.equalsEpsilon,!1,d),u=(z.defined(n)&&0<d.length&&(o=d[r=0],n=n.filter(function(e,t){return(i?t!==o&&(0!==t||1!==o):t+1!==o)||(o=d[++r],!1)})),c.length);if(!(u<2||t<=0)){if(l===j.ArcType.GEODESIC||l===j.ArcType.RHUMB){var y,m=l===j.ArcType.GEODESIC?(y=Z.CesiumMath.chordLength(s,p.maximumRadius),re.PolylinePipeline.numberOfPoints):(y=s,re.PolylinePipeline.numberOfPointsRhumbLine),e=re.PolylinePipeline.extractHeights(c,p);if(z.defined(n)){for(var f=1,h=0;h<u-1;++h)f+=m(c[h],c[h+1],y);var C=new Array(f),v=0;for(h=0;h<u-1;++h){var I=c[h],S=c[h+1],g=n[h],_=m(I,S,y);if(i&&h<f)for(var b=function(e,t,r){var o=oe,a=(o.length=r,e.red),n=e.green,i=e.blue,l=e.alpha,s=t.red,p=t.green,d=t.blue,c=t.alpha;if(X.Color.equals(e,t))for(h=0;h<r;h++)o[h]=X.Color.clone(e);else for(var u=(s-a)/r,y=(p-n)/r,m=(d-i)/r,f=(c-l)/r,h=0;h<r;h++)o[h]=new X.Color(a+h*u,n+h*y,i+h*m,l+h*f);return o}(g,n[h+1],_),B=b.length,A=0;A<B;++A)C[v++]=b[A];else for(A=0;A<_;++A)C[v++]=X.Color.clone(g)}C[v]=X.Color.clone(n[n.length-1]),n=C,oe.length=0}c=l===j.ArcType.GEODESIC?re.PolylinePipeline.generateCartesianArc({positions:c,minDistance:y,ellipsoid:p,height:e}):re.PolylinePipeline.generateCartesianRhumbArc({positions:c,granularity:y,ellipsoid:p,height:e})}var E,P,U,s=4*(u=c.length)-4,N=new Float64Array(3*s),M=new Float64Array(3*s),H=new Float64Array(3*s),w=new Float32Array(2*s),x=a.st?new Float32Array(2*s):void 0,T=z.defined(n)?new Uint8Array(4*s):void 0,D=0,k=0,W=0,V=0;for(A=0;A<u;++A){0===A?(J.Cartesian3.subtract(c[0],c[1],E=ae),J.Cartesian3.add(c[0],E,E)):E=c[A-1],J.Cartesian3.clone(E,ie),J.Cartesian3.clone(c[A],ne),A===u-1?(J.Cartesian3.subtract(c[u-1],c[u-2],E=ae),J.Cartesian3.add(c[u-1],E,E)):E=c[A+1],J.Cartesian3.clone(E,le),z.defined(T)&&(P=0===A||i?n[A]:n[A-1],A!==u-1)&&(U=n[A]);for(var Y=A===u-1?2:4,L=0===A?2:0;L<Y;++L){J.Cartesian3.pack(ne,N,D),J.Cartesian3.pack(ie,M,D),J.Cartesian3.pack(le,H,D),D+=3;var F=L-2<0?-1:1;w[k++]=L%2*2-1,w[k++]=F*t,a.st&&(x[W++]=A/(u-1),x[W++]=Math.max(w[k-2],0)),z.defined(T)&&(T[V++]=X.Color.floatToByte((F=L<2?P:U).red),T[V++]=X.Color.floatToByte(F.green),T[V++]=X.Color.floatToByte(F.blue),T[V++]=X.Color.floatToByte(F.alpha))}}var l=new ee.GeometryAttributes,G=(l.position=new $.GeometryAttribute({componentDatatype:Z.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:N}),l.prevPosition=new $.GeometryAttribute({componentDatatype:Z.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:M}),l.nextPosition=new $.GeometryAttribute({componentDatatype:Z.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:H}),l.expandAndWidth=new $.GeometryAttribute({componentDatatype:Z.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:w}),a.st&&(l.st=new $.GeometryAttribute({componentDatatype:Z.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:x})),z.defined(T)&&(l.color=new $.GeometryAttribute({componentDatatype:Z.ComponentDatatype.UNSIGNED_BYTE,componentsPerAttribute:4,values:T,normalize:!0})),te.IndexDatatype.createTypedArray(s,6*u-6)),O=0,R=0,q=u-1;for(A=0;A<q;++A)G[R++]=O,G[R++]=O+2,G[R++]=O+1,G[R++]=O+1,G[R++]=O+2,G[R++]=O+3,O+=4;return new $.Geometry({attributes:l,indices:G,primitiveType:$.PrimitiveType.TRIANGLES,boundingSphere:Q.BoundingSphere.fromPoints(c),geometryType:$.GeometryType.POLYLINES})}},function(e,t){return(e=z.defined(t)?m.unpack(e,t):e)._ellipsoid=J.Ellipsoid.clone(e._ellipsoid),m.createGeometry(e)}});
