define(["exports","./Matrix2-59fd2efe","./RuntimeError-24b14c10","./when-ae2e0b60","./Transforms-3bc98d07"],function(t,h,e,c,a){"use strict";function f(t,e,i,n){this.x=c.defaultValue(t,0),this.y=c.defaultValue(e,0),this.width=c.defaultValue(i,0),this.height=c.defaultValue(n,0)}f.packedLength=4,f.pack=function(t,e,i){return i=c.defaultValue(i,0),e[i++]=t.x,e[i++]=t.y,e[i++]=t.width,e[i]=t.height,e},f.unpack=function(t,e,i){return e=c.defaultValue(e,0),(i=c.defined(i)?i:new f).x=t[e++],i.y=t[e++],i.width=t[e++],i.height=t[e],i},f.fromPoints=function(t,e){if(c.defined(e)||(e=new f),c.defined(t)&&0!==t.length){for(var i=t.length,n=t[0].x,h=t[0].y,r=t[0].x,a=t[0].y,d=1;d<i;d++)var u=t[d],o=u.x,u=u.y,n=Math.min(o,n),r=Math.max(o,r),h=Math.min(u,h),a=Math.max(u,a);e.x=n,e.y=h,e.width=r-n,e.height=a-h}else e.x=0,e.y=0,e.width=0,e.height=0;return e};var r=new a.GeographicProjection,d=new h.Cartographic,u=new h.Cartographic;f.fromRectangle=function(t,e,i){var n;return c.defined(i)||(i=new f),c.defined(t)?(n=(e=c.defaultValue(e,r)).project(h.Rectangle.southwest(t,d)),e=e.project(h.Rectangle.northeast(t,u)),h.Cartesian2.subtract(e,n,e),i.x=n.x,i.y=n.y,i.width=e.x,i.height=e.y):(i.x=0,i.y=0,i.width=0,i.height=0),i},f.clone=function(t,e){if(c.defined(t))return c.defined(e)?(e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e):new f(t.x,t.y,t.width,t.height)},f.union=function(t,e,i){c.defined(i)||(i=new f);var n=Math.min(t.x,e.x),h=Math.min(t.y,e.y),r=Math.max(t.x+t.width,e.x+e.width),t=Math.max(t.y+t.height,e.y+e.height);return i.x=n,i.y=h,i.width=r-n,i.height=t-h,i},f.expand=function(t,e,i){i=f.clone(t,i);var t=e.x-i.x,n=e.y-i.y;return t>i.width?i.width=t:t<0&&(i.width-=t,i.x=e.x),n>i.height?i.height=n:n<0&&(i.height-=n,i.y=e.y),i},f.intersect=function(t,e){var i=t.x,n=t.y,h=e.x,r=e.y;return i>h+e.width||i+t.width<h||n+t.height<r||n>r+e.height?a.Intersect.OUTSIDE:a.Intersect.INTERSECTING},f.equals=function(t,e){return t===e||c.defined(t)&&c.defined(e)&&t.x===e.x&&t.y===e.y&&t.width===e.width&&t.height===e.height},f.prototype.clone=function(t){return f.clone(this,t)},f.prototype.intersect=function(t){return f.intersect(this,t)},f.prototype.equals=function(t){return f.equals(this,t)},t.BoundingRectangle=f});
