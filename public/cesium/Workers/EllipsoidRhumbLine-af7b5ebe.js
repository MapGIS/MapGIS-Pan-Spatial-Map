define(["exports","./Cartesian2-38b35910","./Check-f996273c","./when-ae2e0b60","./Math-5bbcea10"],function(t,R,i,y,S){"use strict";function W(t,i,a){var e,n,s,h;return 0===t?i*a:i*((1-(i=t*t)/4-3*(t=i*i)/64-5*(e=t*i)/256-175*(n=e*i)/16384-441*(s=n*i)/65536-4851*(h=s*i)/1048576)*(a=a)-(3*i/8+3*t/32+45*e/1024+105*n/4096+2205*s/131072+6237*h/524288)*Math.sin(2*a)+(15*t/256+45*e/1024+525*n/16384+1575*s/65536+155925*h/8388608)*Math.sin(4*a)-(35*e/3072+175*n/12288+3675*s/262144+13475*h/1048576)*Math.sin(6*a)+(315*n/131072+2205*s/524288+43659*h/8388608)*Math.sin(8*a)-(693*s/1310720+6237*h/5242880)*Math.sin(10*a)+1001*h/8388608*Math.sin(12*a))}function b(t,i){var a;return 0===t?Math.log(Math.tan(.5*(S.CesiumMath.PI_OVER_TWO+i))):(a=t*Math.sin(i),Math.log(Math.tan(.5*(S.CesiumMath.PI_OVER_TWO+i)))-t/2*Math.log((1+a)/(1-a)))}var l=new R.Cartesian3,d=new R.Cartesian3;function e(t,i,a,e){R.Cartesian3.normalize(e.cartographicToCartesian(i,d),l),R.Cartesian3.normalize(e.cartographicToCartesian(a,d),d);var n,s,h,u=e.maximumRadius,o=e.minimumRadius,u=u*u;t._ellipticitySquared=(u-o*o)/u,t._ellipticity=Math.sqrt(t._ellipticitySquared),t._start=R.Cartographic.clone(i,t._start),t._start.height=0,t._end=R.Cartographic.clone(a,t._end),t._end.height=0,t._heading=(o=t,u=i.longitude,h=i.latitude,s=a.longitude,n=a.latitude,h=b(o._ellipticity,h),o=b(o._ellipticity,n),Math.atan2(S.CesiumMath.negativePiToPi(s-u),o-h)),t._distance=(n=t,s=e.maximumRadius,u=e.minimumRadius,o=i.longitude,h=i.latitude,t=a.longitude,e=a.latitude,i=n._heading,t-=o,o=0,o=S.CesiumMath.equalsEpsilon(Math.abs(i),S.CesiumMath.PI_OVER_TWO,S.CesiumMath.EPSILON8)?s===u?s*Math.cos(h)*S.CesiumMath.negativePiToPi(t):(u=Math.sin(h),s*Math.cos(h)*S.CesiumMath.negativePiToPi(t)/Math.sqrt(1-n._ellipticitySquared*u*u)):(t=W(n._ellipticity,s,h),(W(n._ellipticity,s,e)-t)/Math.cos(i)),Math.abs(o))}function o(t,i,a,e,n,s){var h,u,o,l,d,r,M,c,m,_,g,p,C,P,f,O,E,v,I,T;return 0===a?R.Cartographic.clone(t,s):(h=n*n,o=Math.abs(S.CesiumMath.PI_OVER_TWO-Math.abs(i))>S.CesiumMath.EPSILON8?(u=W(n,e,t.latitude),l=a*Math.cos(i),u=u+l,u/=l=e,C=0===(o=n)?u:(r=(d=(l=u*u)*u)*u,g=(_=(m=(c=(M=(o=o*o)*o)*o)*o)*o)*o,p=Math.sin(2*u),C=Math.cos(2*u),P=Math.sin(4*u),f=Math.cos(4*u),O=Math.sin(6*u),E=Math.cos(6*u),v=Math.sin(8*u),I=Math.cos(8*u),T=Math.sin(10*u),u+u*o/4+7*u*M/64+15*u*c/256+579*u*m/16384+1515*u*_/65536+16837*u*g/1048576+(3*u*M/16+45*u*c/256-u*(32*l-561)*m/4096-u*(232*l-1677)*_/16384+u*(399985-90560*l+512*r)*g/5242880)*C+(21*u*c/256+483*u*m/4096-u*(224*l-1969)*_/16384-u*(33152*l-112599)*g/1048576)*f+(151*u*m/4096+4681*u*_/65536+1479*u*g/16384-453*d*g/32768)*E+(1097*u*_/65536+42783*u*g/1048576)*I+8011*u*g/1048576*Math.cos(10*u)+(3*o/8+3*M/16+213*c/2048-3*l*c/64+255*m/4096-33*l*m/512+20861*_/524288-33*l*_/512+r*_/1024+28273*g/1048576-471*l*g/8192+9*r*g/4096)*p+(21*M/256+21*c/256+533*m/8192-21*l*m/512+197*_/4096-315*l*_/4096+584039*g/16777216-12517*l*g/131072+7*r*g/2048)*P+(151*c/6144+151*m/4096+5019*_/131072-453*l*_/16384+26965*g/786432-8607*l*g/131072)*O+(1097*m/131072+1097*_/65536+225797*g/10485760-1097*l*g/65536)*v+(8011*_/2621440+8011*g/1048576)*T+293393*g/251658240*Math.sin(12*u)),f=b(n,t.latitude),d=b(n,C),E=Math.tan(i)*(d-f),S.CesiumMath.negativePiToPi(t.longitude+E)):(C=t.latitude,E=a/(0===n?e*Math.cos(t.latitude):(I=Math.sin(t.latitude),e*Math.cos(t.latitude)/Math.sqrt(1-h*I*I))),0<i?S.CesiumMath.negativePiToPi(t.longitude+E):S.CesiumMath.negativePiToPi(t.longitude-E)),y.defined(s)?(s.longitude=o,s.latitude=C,s.height=0,s):new R.Cartographic(o,C,0))}function r(t,i,a){a=y.defaultValue(a,R.Ellipsoid.WGS84);this._ellipsoid=a,this._start=new R.Cartographic,this._end=new R.Cartographic,this._heading=void 0,this._distance=void 0,this._ellipticity=void 0,this._ellipticitySquared=void 0,y.defined(t)&&y.defined(i)&&e(this,t,i,a)}Object.defineProperties(r.prototype,{ellipsoid:{get:function(){return this._ellipsoid}},surfaceDistance:{get:function(){return this._distance}},start:{get:function(){return this._start}},end:{get:function(){return this._end}},heading:{get:function(){return this._heading}}}),r.fromStartHeadingDistance=function(t,i,a,e,n){var s=y.defaultValue(e,R.Ellipsoid.WGS84),h=s.maximumRadius,u=s.minimumRadius,h=h*h,u=Math.sqrt((h-u*u)/h),h=o(t,i=S.CesiumMath.negativePiToPi(i),a,s.maximumRadius,u);return!y.defined(n)||y.defined(e)&&!e.equals(n.ellipsoid)?new r(t,h,s):(n.setEndPoints(t,h),n)},r.prototype.setEndPoints=function(t,i){e(this,t,i,this._ellipsoid)},r.prototype.interpolateUsingFraction=function(t,i){return this.interpolateUsingSurfaceDistance(t*this._distance,i)},r.prototype.interpolateUsingSurfaceDistance=function(t,i){return o(this._start,this._heading,t,this._ellipsoid.maximumRadius,this._ellipticity,i)},r.prototype.findIntersectionWithLongitude=function(t,i){var a=this._ellipticity,e=this._heading,n=Math.abs(e),s=this._start;if(t=S.CesiumMath.negativePiToPi(t),S.CesiumMath.equalsEpsilon(Math.abs(t),Math.PI,S.CesiumMath.EPSILON14)&&(t=S.CesiumMath.sign(s.longitude)*Math.PI),y.defined(i)||(i=new R.Cartographic),Math.abs(S.CesiumMath.PI_OVER_TWO-n)<=S.CesiumMath.EPSILON8)i.longitude=t,i.latitude=s.latitude;else{if(S.CesiumMath.equalsEpsilon(Math.abs(S.CesiumMath.PI_OVER_TWO-n),S.CesiumMath.PI_OVER_TWO,S.CesiumMath.EPSILON8))return S.CesiumMath.equalsEpsilon(t,s.longitude,S.CesiumMath.EPSILON12)?void 0:(i.longitude=t,i.latitude=S.CesiumMath.PI_OVER_TWO*S.CesiumMath.sign(S.CesiumMath.PI_OVER_TWO-e),i.height=0,i);var n=s.latitude,h=a*Math.sin(n),u=Math.tan(.5*(S.CesiumMath.PI_OVER_TWO+n))*Math.exp((t-s.longitude)/Math.tan(e)),o=(1+h)/(1-h),l=s.latitude;do{var d=l,r=a*Math.sin(d),l=2*Math.atan(u*Math.pow((1+r)/(1-r)/o,a/2))-S.CesiumMath.PI_OVER_TWO}while(!S.CesiumMath.equalsEpsilon(l,d,S.CesiumMath.EPSILON12));i.longitude=t,i.latitude=l}return i.height=0,i},r.prototype.findIntersectionWithLatitude=function(t,i){var a,e=this._ellipticity,n=this._heading,s=this._start;if(!S.CesiumMath.equalsEpsilon(Math.abs(n),S.CesiumMath.PI_OVER_TWO,S.CesiumMath.EPSILON8))return a=b(e,s.latitude),e=b(e,t),n=Math.tan(n)*(e-a),e=S.CesiumMath.negativePiToPi(s.longitude+n),y.defined(i)?(i.longitude=e,i.latitude=t,i.height=0,i):new R.Cartographic(e,t,0)},t.EllipsoidRhumbLine=r});
