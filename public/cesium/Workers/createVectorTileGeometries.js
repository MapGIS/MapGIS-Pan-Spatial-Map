define(["./Transforms-3bc98d07","./BoxGeometry-8fcc76be","./Matrix2-59fd2efe","./Color-9d5d2c3d","./CylinderGeometry-7839e3a1","./when-ae2e0b60","./EllipsoidGeometry-1a31720e","./IndexDatatype-6902a37d","./createTaskProcessorWorker","./RuntimeError-24b14c10","./ComponentDatatype-b7b5db18","./WebGLConstants-35626ea2","./combine-276652d0","./GeometryOffsetAttribute-8c0bd3ce","./GeometryAttribute-dff85b2b","./GeometryAttributes-5ce4955a","./VertexFormat-1fc9746e","./CylinderGeometryLibrary-7afd8cad"],function(S,k,T,V,M,F,B,w,e,t,n,r,a,i,o,d,s,c){function R(e){this.offset=e.offset,this.count=e.count,this.color=e.color,this.batchIds=e.batchIds}var f=new T.Cartesian3,l=T.Matrix4.packedLength+T.Cartesian3.packedLength,u=T.Matrix4.packedLength+2,h=T.Matrix4.packedLength+T.Cartesian3.packedLength,b=T.Cartesian3.packedLength+1,p={modelMatrix:new T.Matrix4,boundingVolume:new S.BoundingSphere};function A(e,t){var t=t*l,n=T.Cartesian3.unpack(e,t,f),e=(t+=T.Cartesian3.packedLength,T.Matrix4.unpack(e,t,p.modelMatrix)),t=(T.Matrix4.multiplyByScale(e,n,e),p.boundingVolume);return T.Cartesian3.clone(T.Cartesian3.ZERO,t.center),t.radius=Math.sqrt(3),p}function O(e,t){var t=t*u,n=e[t++],r=e[t++],n=T.Cartesian3.fromElements(n,n,r,f),r=T.Matrix4.unpack(e,t,p.modelMatrix),e=(T.Matrix4.multiplyByScale(r,n,r),p.boundingVolume);return T.Cartesian3.clone(T.Cartesian3.ZERO,e.center),e.radius=Math.sqrt(2),p}function L(e,t){var t=t*h,n=T.Cartesian3.unpack(e,t,f),e=(t+=T.Cartesian3.packedLength,T.Matrix4.unpack(e,t,p.modelMatrix)),t=(T.Matrix4.multiplyByScale(e,n,e),p.boundingVolume);return T.Cartesian3.clone(T.Cartesian3.ZERO,t.center),t.radius=1,p}function E(e,t){var t=t*b,n=e[t++],e=T.Cartesian3.unpack(e,t,f),t=T.Matrix4.fromTranslation(e,p.modelMatrix),e=(T.Matrix4.multiplyByUniformScale(t,n,t),p.boundingVolume);return T.Cartesian3.clone(T.Cartesian3.ZERO,e.center),e.radius=1,p}var Z=new T.Cartesian3;function U(e,t,n,r,a){if(F.defined(t)){for(var i=n.length,o=r.attributes.position.values,d=r.indices,s=e.positions,c=e.vertexBatchIds,f=e.indices,l=e.batchIds,u=e.batchTableColors,h=e.batchedIndices,b=e.indexOffsets,p=e.indexCounts,y=e.boundingVolumes,x=e.modelMatrix,g=e.center,m=e.positionOffset,C=e.batchIdIndex,v=e.indexOffset,I=e.batchedIndicesOffset,k=0;k<i;++k){for(var M=a(t,k),B=M.modelMatrix,w=(T.Matrix4.multiply(x,B,B),n[k]),A=o.length,O=0;O<A;O+=3){var L=T.Cartesian3.unpack(o,O,Z);T.Matrix4.multiplyByPoint(B,L,L),T.Cartesian3.subtract(L,g,L),T.Cartesian3.pack(L,s,3*m+O),c[C++]=w}for(var E=d.length,U=0;U<E;++U)f[v+U]=d[U]+m;var G=k+I;h[G]=new R({offset:v,count:E,color:V.Color.fromRgba(u[w]),batchIds:[w]}),l[G]=w,b[G]=v,p[G]=E,y[G]=S.BoundingSphere.transform(M.boundingVolume,B),m+=A/3,v+=E}e.positionOffset=m,e.batchIdIndex=C,e.indexOffset=v,e.batchedIndicesOffset+=i}}var G=new T.Cartesian3,D=new T.Matrix4;function P(e,t,n){var r=n.length,a=2+r*S.BoundingSphere.packedLength+1+function(e){for(var t=e.length,n=0,r=0;r<t;++r)n+=V.Color.packedLength+3+e[r].batchIds.length;return n}(t),i=new Float64Array(a),o=0;i[o++]=e,i[o++]=r;for(var d=0;d<r;++d)S.BoundingSphere.pack(n[d],i,o),o+=S.BoundingSphere.packedLength;var s=t.length;i[o++]=s;for(var c=0;c<s;++c){var f=t[c],l=(V.Color.pack(f.color,i,o),o+=V.Color.packedLength,i[o++]=f.offset,i[o++]=f.count,f.batchIds),u=l.length;i[o++]=u;for(var h=0;h<u;++h)i[o++]=l[h]}return i}return e(function(e,t){var n=F.defined(e.boxes)?new Float32Array(e.boxes):void 0,r=F.defined(e.boxBatchIds)?new Uint16Array(e.boxBatchIds):void 0,a=F.defined(e.cylinders)?new Float32Array(e.cylinders):void 0,i=F.defined(e.cylinderBatchIds)?new Uint16Array(e.cylinderBatchIds):void 0,o=F.defined(e.ellipsoids)?new Float32Array(e.ellipsoids):void 0,d=F.defined(e.ellipsoidBatchIds)?new Uint16Array(e.ellipsoidBatchIds):void 0,s=F.defined(e.spheres)?new Float32Array(e.spheres):void 0,c=F.defined(e.sphereBatchIds)?new Uint16Array(e.sphereBatchIds):void 0,f=F.defined(n)?r.length:0,l=F.defined(a)?i.length:0,u=F.defined(o)?d.length:0,h=F.defined(s)?c.length:0,b=k.BoxGeometry.getUnitBox(),p=M.CylinderGeometry.getUnitCylinder(),y=B.EllipsoidGeometry.getUnitEllipsoid(),x=b.attributes.position.values,g=p.attributes.position.values,m=y.attributes.position.values,x=x.length*f,g=(x=(x+=g.length*l)+m.length*(u+h),b.indices),m=p.indices,g=g.length*f,m=(g=(g+=m.length*l)+y.indices.length*(u+h),new Float32Array(x)),C=new Uint16Array(x/3),x=w.IndexDatatype.createTypedArray(x/3,g),g=f+l+u+h,f=new Uint16Array(g),l=new Array(g),u=new Uint32Array(g),h=new Uint32Array(g),g=new Array(g);v=e.packedBuffer,v=new Float64Array(v),I=0,T.Cartesian3.unpack(v,0,G),I+=T.Cartesian3.packedLength,T.Matrix4.unpack(v,I,D);U(v={batchTableColors:new Uint32Array(e.batchTableColors),positions:m,vertexBatchIds:C,indices:x,batchIds:f,batchedIndices:l,indexOffsets:u,indexCounts:h,boundingVolumes:g,positionOffset:0,batchIdIndex:0,indexOffset:0,batchedIndicesOffset:0,modelMatrix:D,center:G},n,r,b,A),U(v,a,i,p,O),U(v,o,d,y,L),U(v,s,c,y,E);var v,I=P(x.BYTES_PER_ELEMENT,l,g);return t.push(m.buffer,C.buffer,x.buffer),t.push(f.buffer,u.buffer,h.buffer),t.push(I.buffer),{positions:m.buffer,vertexBatchIds:C.buffer,indices:x.buffer,indexOffsets:u.buffer,indexCounts:h.buffer,batchIds:f.buffer,packedBuffer:I.buffer}})});
