define(["./when-ae2e0b60","./Matrix2-59fd2efe","./Transforms-3bc98d07","./ComponentDatatype-b7b5db18","./RuntimeError-24b14c10","./GeometryAttribute-dff85b2b","./GeometryAttributes-5ce4955a","./IndexDatatype-6902a37d","./VertexFormat-1fc9746e","./WallGeometryLibrary-0f486ee4","./combine-276652d0","./WebGLConstants-35626ea2","./arrayRemoveDuplicates-bce1b0dc","./PolylinePipeline-5ce4be00","./EllipsoidGeodesic-640f147e","./EllipsoidRhumbLine-535d21cd","./IntersectionTests-d0a84f0f","./Plane-43337cee"],function(O,R,S,I,e,N,M,W,u,B,t,a,i,n,r,o,s,m){var U=new R.Cartesian3,q=new R.Cartesian3,J=new R.Cartesian3,Y=new R.Cartesian3,Z=new R.Cartesian3,j=new R.Cartesian3,K=new R.Cartesian3;function d(e){var t=(e=O.defaultValue(e,O.defaultValue.EMPTY_OBJECT)).positions,a=e.maximumHeights,i=e.minimumHeights,n=O.defaultValue(e.vertexFormat,u.VertexFormat.DEFAULT),r=O.defaultValue(e.granularity,I.CesiumMath.RADIANS_PER_DEGREE),e=O.defaultValue(e.ellipsoid,R.Ellipsoid.WGS84),n=(this._positions=t,this._minimumHeights=i,this._maximumHeights=a,this._vertexFormat=u.VertexFormat.clone(n),this._granularity=r,this._ellipsoid=R.Ellipsoid.clone(e),this._workerName="createWallGeometry",1+t.length*R.Cartesian3.packedLength+2);O.defined(i)&&(n+=i.length),O.defined(a)&&(n+=a.length),this.packedLength=n+R.Ellipsoid.packedLength+u.VertexFormat.packedLength+1}d.pack=function(e,t,a){a=O.defaultValue(a,0);var i,n=e._positions,r=n.length;for(t[a++]=r,i=0;i<r;++i,a+=R.Cartesian3.packedLength)R.Cartesian3.pack(n[i],t,a);var o=e._minimumHeights,r=O.defined(o)?o.length:0;if(t[a++]=r,O.defined(o))for(i=0;i<r;++i)t[a++]=o[i];var s=e._maximumHeights;if(r=O.defined(s)?s.length:0,t[a++]=r,O.defined(s))for(i=0;i<r;++i)t[a++]=s[i];return R.Ellipsoid.pack(e._ellipsoid,t,a),a+=R.Ellipsoid.packedLength,u.VertexFormat.pack(e._vertexFormat,t,a),t[a+=u.VertexFormat.packedLength]=e._granularity,t};var c=R.Ellipsoid.clone(R.Ellipsoid.UNIT_SPHERE),y=new u.VertexFormat,f={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:c,vertexFormat:y,granularity:void 0};return d.unpack=function(e,t,a){t=O.defaultValue(t,0);for(var i,n,r=e[t++],o=new Array(r),s=0;s<r;++s,t+=R.Cartesian3.packedLength)o[s]=R.Cartesian3.unpack(e,t);if(0<(r=e[t++]))for(i=new Array(r),s=0;s<r;++s)i[s]=e[t++];if(0<(r=e[t++]))for(n=new Array(r),s=0;s<r;++s)n[s]=e[t++];var m=R.Ellipsoid.unpack(e,t,c),l=(t+=R.Ellipsoid.packedLength,u.VertexFormat.unpack(e,t,y)),p=e[t+=u.VertexFormat.packedLength];return O.defined(a)?(a._positions=o,a._minimumHeights=i,a._maximumHeights=n,a._ellipsoid=R.Ellipsoid.clone(m,a._ellipsoid),a._vertexFormat=u.VertexFormat.clone(l,a._vertexFormat),a._granularity=p,a):(f.positions=o,f.minimumHeights=i,f.maximumHeights=n,f.granularity=p,new d(f))},d.fromConstantHeights=function(e){var t=(e=O.defaultValue(e,O.defaultValue.EMPTY_OBJECT)).positions,a=e.minimumHeight,i=e.maximumHeight,n=O.defined(a),r=O.defined(i);if(n||r)for(var o=t.length,s=n?new Array(o):void 0,m=r?new Array(o):void 0,l=0;l<o;++l)n&&(s[l]=a),r&&(m[l]=i);return new d({positions:t,maximumHeights:m,minimumHeights:s,ellipsoid:e.ellipsoid,vertexFormat:e.vertexFormat})},d.createGeometry=function(e){var t=e._positions,a=e._vertexFormat,i=e._ellipsoid,t=B.WallGeometryLibrary.computePositions(i,t,e._maximumHeights,e._minimumHeights,e._granularity,!0);if(O.defined(t)){for(var n=t.bottomPositions,r=t.topPositions,e=t.numCorners,o=r.length,t=2*o,s=a.position?new Float64Array(t):void 0,m=a.normal?new Float32Array(t):void 0,l=a.tangent?new Float32Array(t):void 0,p=a.bitangent?new Float32Array(t):void 0,u=a.st?new Float32Array(t/3*2):void 0,d=0,c=0,y=0,f=0,g=0,h=K,C=j,v=Z,b=!0,x=0,A=1/((o/=3)-e-1),_=0;_<o;++_){var E,w=3*_,F=R.Cartesian3.fromArray(r,w,U),L=R.Cartesian3.fromArray(n,w,q);a.position&&(s[d++]=L.x,s[d++]=L.y,s[d++]=L.z,s[d++]=F.x,s[d++]=F.y,s[d++]=F.z),a.st&&(u[g++]=x,u[g++]=0,u[g++]=x,u[g++]=1),(a.normal||a.tangent||a.bitangent)&&(L=R.Cartesian3.clone(R.Cartesian3.ZERO,Y),E=R.Cartesian3.subtract(F,i.geodeticSurfaceNormal(F,q),q),_+1<o&&(L=R.Cartesian3.fromArray(r,3+w,Y)),b&&(w=R.Cartesian3.subtract(L,F,J),E=R.Cartesian3.subtract(E,F,U),h=R.Cartesian3.normalize(R.Cartesian3.cross(E,w,h),h),b=!1),R.Cartesian3.equalsEpsilon(F,L,I.CesiumMath.EPSILON10)?b=!0:(x+=A,a.tangent&&(C=R.Cartesian3.normalize(R.Cartesian3.subtract(L,F,C),C)),a.bitangent&&(v=R.Cartesian3.normalize(R.Cartesian3.cross(h,C,v),v))),a.normal&&(m[c++]=h.x,m[c++]=h.y,m[c++]=h.z,m[c++]=h.x,m[c++]=h.y,m[c++]=h.z),a.tangent&&(l[f++]=C.x,l[f++]=C.y,l[f++]=C.z,l[f++]=C.x,l[f++]=C.y,l[f++]=C.z),a.bitangent)&&(p[y++]=v.x,p[y++]=v.y,p[y++]=v.z,p[y++]=v.x,p[y++]=v.y,p[y++]=v.z)}var k=new M.GeometryAttributes,H=(a.position&&(k.position=new N.GeometryAttribute({componentDatatype:I.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:s})),a.normal&&(k.normal=new N.GeometryAttribute({componentDatatype:I.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:m})),a.tangent&&(k.tangent=new N.GeometryAttribute({componentDatatype:I.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:l})),a.bitangent&&(k.bitangent=new N.GeometryAttribute({componentDatatype:I.ComponentDatatype.FLOAT,componentsPerAttribute:3,values:p})),a.st&&(k.st=new N.GeometryAttribute({componentDatatype:I.ComponentDatatype.FLOAT,componentsPerAttribute:2,values:u})),t/3),V=W.IndexDatatype.createTypedArray(H,t-=6*(e+1)),G=0;for(_=0;_<H-2;_+=2){var D=_,P=_+2,T=R.Cartesian3.fromArray(s,3*D,U),z=R.Cartesian3.fromArray(s,3*P,q);R.Cartesian3.equalsEpsilon(T,z,I.CesiumMath.EPSILON10)||(T=_+3,V[G++]=_+1,V[G++]=D,V[G++]=T,V[G++]=T,V[G++]=D,V[G++]=P)}return new N.Geometry({attributes:k,indices:V,primitiveType:N.PrimitiveType.TRIANGLES,boundingSphere:new S.BoundingSphere.fromVertices(s)})}},function(e,t){return(e=O.defined(t)?d.unpack(e,t):e)._ellipsoid=R.Ellipsoid.clone(e._ellipsoid),d.createGeometry(e)}});
