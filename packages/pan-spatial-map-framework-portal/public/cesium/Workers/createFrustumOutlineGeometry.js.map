{"version":3,"file":"createFrustumOutlineGeometry.js","sources":["../../../../Source/Core/FrustumOutlineGeometry.js","../../../../Source/WorkersES6/createFrustumOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport FrustumGeometry from './FrustumGeometry.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport OrthographicFrustum from './OrthographicFrustum.js';\r\nimport PerspectiveFrustum from './PerspectiveFrustum.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\nimport Quaternion from './Quaternion.js';\r\n\r\nvar PERSPECTIVE = 0;\r\nvar ORTHOGRAPHIC = 1;\r\n\r\n/**\r\n * A description of the outline of a frustum with the given the origin and orientation.\r\n *\r\n * @alias FrustumOutlineGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {PerspectiveFrustum|OrthographicFrustum} options.frustum The frustum.\r\n * @param {Cartesian3} options.origin The origin of the frustum.\r\n * @param {Quaternion} options.orientation The orientation of the frustum.\r\n */\r\nfunction FrustumOutlineGeometry(options) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('options', options);\r\n    Check.typeOf.object('options.frustum', options.frustum);\r\n    Check.typeOf.object('options.origin', options.origin);\r\n    Check.typeOf.object('options.orientation', options.orientation);\r\n    //>>includeEnd('debug');\r\n\r\n    var frustum = options.frustum;\r\n    var orientation = options.orientation;\r\n    var origin = options.origin;\r\n\r\n    // This is private because it is used by DebugCameraPrimitive to draw a multi-frustum by\r\n    // creating multiple FrustumOutlineGeometrys. This way the near plane of one frustum doesn't overlap\r\n    // the far plane of another.\r\n    var drawNearPlane = defaultValue(options._drawNearPlane, true);\r\n\r\n    var frustumType;\r\n    var frustumPackedLength;\r\n    if (frustum instanceof PerspectiveFrustum) {\r\n        frustumType = PERSPECTIVE;\r\n        frustumPackedLength = PerspectiveFrustum.packedLength;\r\n    } else if (frustum instanceof OrthographicFrustum) {\r\n        frustumType = ORTHOGRAPHIC;\r\n        frustumPackedLength = OrthographicFrustum.packedLength;\r\n    }\r\n\r\n    this._frustumType = frustumType;\r\n    this._frustum = frustum.clone();\r\n    this._origin = Cartesian3.clone(origin);\r\n    this._orientation = Quaternion.clone(orientation);\r\n    this._drawNearPlane = drawNearPlane;\r\n    this._workerName = 'createFrustumOutlineGeometry';\r\n\r\n    /**\r\n     * The number of elements used to pack the object into an array.\r\n     * @type {Number}\r\n     */\r\n    this.packedLength = 2 + frustumPackedLength + Cartesian3.packedLength + Quaternion.packedLength;\r\n}\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {FrustumOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nFrustumOutlineGeometry.pack = function (value, array, startingIndex) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('value', value);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    var frustumType = value._frustumType;\r\n    var frustum = value._frustum;\r\n\r\n    array[startingIndex++] = frustumType;\r\n\r\n    if (frustumType === PERSPECTIVE) {\r\n        PerspectiveFrustum.pack(frustum, array, startingIndex);\r\n        startingIndex += PerspectiveFrustum.packedLength;\r\n    } else {\r\n        OrthographicFrustum.pack(frustum, array, startingIndex);\r\n        startingIndex += OrthographicFrustum.packedLength;\r\n    }\r\n\r\n    Cartesian3.pack(value._origin, array, startingIndex);\r\n    startingIndex += Cartesian3.packedLength;\r\n    Quaternion.pack(value._orientation, array, startingIndex);\r\n    startingIndex += Quaternion.packedLength;\r\n    array[startingIndex] = value._drawNearPlane ? 1.0 : 0.0;\r\n\r\n    return array;\r\n};\r\n\r\nvar scratchPackPerspective = new PerspectiveFrustum();\r\nvar scratchPackOrthographic = new OrthographicFrustum();\r\nvar scratchPackQuaternion = new Quaternion();\r\nvar scratchPackorigin = new Cartesian3();\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {FrustumOutlineGeometry} [result] The object into which to store the result.\r\n */\r\nFrustumOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    var frustumType = array[startingIndex++];\r\n\r\n    var frustum;\r\n    if (frustumType === PERSPECTIVE) {\r\n        frustum = PerspectiveFrustum.unpack(array, startingIndex, scratchPackPerspective);\r\n        startingIndex += PerspectiveFrustum.packedLength;\r\n    } else {\r\n        frustum = OrthographicFrustum.unpack(array, startingIndex, scratchPackOrthographic);\r\n        startingIndex += OrthographicFrustum.packedLength;\r\n    }\r\n\r\n    var origin = Cartesian3.unpack(array, startingIndex, scratchPackorigin);\r\n    startingIndex += Cartesian3.packedLength;\r\n    var orientation = Quaternion.unpack(array, startingIndex, scratchPackQuaternion);\r\n    startingIndex += Quaternion.packedLength;\r\n    var drawNearPlane = array[startingIndex] === 1.0;\r\n\r\n    if (!defined(result)) {\r\n        return new FrustumOutlineGeometry({\r\n            frustum: frustum,\r\n            origin: origin,\r\n            orientation: orientation,\r\n            _drawNearPlane: drawNearPlane\r\n        });\r\n    }\r\n\r\n    var frustumResult = frustumType === result._frustumType ? result._frustum : undefined;\r\n    result._frustum = frustum.clone(frustumResult);\r\n\r\n    result._frustumType = frustumType;\r\n    result._origin = Cartesian3.clone(origin, result._origin);\r\n    result._orientation = Quaternion.clone(orientation, result._orientation);\r\n    result._drawNearPlane = drawNearPlane;\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the geometric representation of a frustum outline, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {FrustumOutlineGeometry} frustumGeometry A description of the frustum.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nFrustumOutlineGeometry.createGeometry = function (frustumGeometry) {\r\n    var frustumType = frustumGeometry._frustumType;\r\n    var frustum = frustumGeometry._frustum;\r\n    var origin = frustumGeometry._origin;\r\n    var orientation = frustumGeometry._orientation;\r\n    var drawNearPlane = frustumGeometry._drawNearPlane;\r\n\r\n    var positions = new Float64Array(3 * 4 * 2);\r\n    FrustumGeometry._computeNearFarPlanes(origin, orientation, frustumType, frustum, positions);\r\n\r\n    var attributes = new GeometryAttributes({\r\n        position: new GeometryAttribute({\r\n            componentDatatype: ComponentDatatype.DOUBLE,\r\n            componentsPerAttribute: 3,\r\n            values: positions\r\n        })\r\n    });\r\n\r\n    var offset;\r\n    var index;\r\n\r\n    var numberOfPlanes = drawNearPlane ? 2 : 1;\r\n    var indices = new Uint16Array(8 * (numberOfPlanes + 1));\r\n\r\n    // Build the near/far planes\r\n    var i = drawNearPlane ? 0 : 1;\r\n    for (; i < 2; ++i) {\r\n        offset = drawNearPlane ? i * 8 : 0;\r\n        index = i * 4;\r\n\r\n        indices[offset] = index;\r\n        indices[offset + 1] = index + 1;\r\n        indices[offset + 2] = index + 1;\r\n        indices[offset + 3] = index + 2;\r\n        indices[offset + 4] = index + 2;\r\n        indices[offset + 5] = index + 3;\r\n        indices[offset + 6] = index + 3;\r\n        indices[offset + 7] = index;\r\n    }\r\n\r\n    // Build the sides of the frustums\r\n    for (i = 0; i < 2; ++i) {\r\n        offset = (numberOfPlanes + i) * 8;\r\n        index = i * 4;\r\n\r\n        indices[offset] = index;\r\n        indices[offset + 1] = index + 4;\r\n        indices[offset + 2] = index + 1;\r\n        indices[offset + 3] = index + 5;\r\n        indices[offset + 4] = index + 2;\r\n        indices[offset + 5] = index + 6;\r\n        indices[offset + 6] = index + 3;\r\n        indices[offset + 7] = index + 7;\r\n    }\r\n\r\n    return new Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingSphere: BoundingSphere.fromVertices(positions)\r\n    });\r\n};\r\nexport default FrustumOutlineGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport FrustumOutlineGeometry from '../Core/FrustumOutlineGeometry.js';\r\n\r\nfunction createFrustumOutlineGeometry(frustumGeometry, offset) {\r\n    if (defined(offset)) {\r\n        frustumGeometry = FrustumOutlineGeometry.unpack(frustumGeometry, offset);\r\n    }\r\n    return FrustumOutlineGeometry.createGeometry(frustumGeometry);\r\n}\r\nexport default createFrustumOutlineGeometry;\r\n"],"names":["Check","defaultValue","PerspectiveFrustum","OrthographicFrustum","Cartesian3","Quaternion","defined","FrustumGeometry","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAeA,IAAI,WAAW,GAAG,CAAC,CAAC;IACpB,IAAI,YAAY,GAAG,CAAC,CAAC;AACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,sBAAsB,CAAC,OAAO,EAAE;IACzC;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IAC5C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,iBAAiB,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;IAC5D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;IAC1D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,qBAAqB,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;IACpE;AACA;IACA,IAAI,IAAI,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;IAClC,IAAI,IAAI,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IAC1C,IAAI,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;AAChC;IACA;IACA;IACA;IACA,IAAI,IAAI,aAAa,GAAGC,iBAAY,CAAC,OAAO,CAAC,cAAc,EAAE,IAAI,CAAC,CAAC;AACnE;IACA,IAAI,IAAI,WAAW,CAAC;IACpB,IAAI,IAAI,mBAAmB,CAAC;IAC5B,IAAI,IAAI,OAAO,YAAYC,kCAAkB,EAAE;IAC/C,QAAQ,WAAW,GAAG,WAAW,CAAC;IAClC,QAAQ,mBAAmB,GAAGA,kCAAkB,CAAC,YAAY,CAAC;IAC9D,KAAK,MAAM,IAAI,OAAO,YAAYC,mCAAmB,EAAE;IACvD,QAAQ,WAAW,GAAG,YAAY,CAAC;IACnC,QAAQ,mBAAmB,GAAGA,mCAAmB,CAAC,YAAY,CAAC;IAC/D,KAAK;AACL;IACA,IAAI,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IACpC,IAAI,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,EAAE,CAAC;IACpC,IAAI,IAAI,CAAC,OAAO,GAAGC,qBAAU,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAC5C,IAAI,IAAI,CAAC,YAAY,GAAGC,qBAAU,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACtD,IAAI,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC;IACxC,IAAI,IAAI,CAAC,WAAW,GAAG,8BAA8B,CAAC;AACtD;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,GAAG,mBAAmB,GAAGD,qBAAU,CAAC,YAAY,GAAGC,qBAAU,CAAC,YAAY,CAAC;IACpG,CAAC;AACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,sBAAsB,CAAC,IAAI,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;IACrE;IACA,IAAIL,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,IAAIA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC;AACA;IACA,IAAI,aAAa,GAAGC,iBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC;IACzC,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,QAAQ,CAAC;AACjC;IACA,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,WAAW,CAAC;AACzC;IACA,IAAI,IAAI,WAAW,KAAK,WAAW,EAAE;IACrC,QAAQC,kCAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IAC/D,QAAQ,aAAa,IAAIA,kCAAkB,CAAC,YAAY,CAAC;IACzD,KAAK,MAAM;IACX,QAAQC,mCAAmB,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IAChE,QAAQ,aAAa,IAAIA,mCAAmB,CAAC,YAAY,CAAC;IAC1D,KAAK;AACL;IACA,IAAIC,qBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IACzD,IAAI,aAAa,IAAIA,qBAAU,CAAC,YAAY,CAAC;IAC7C,IAAIC,qBAAU,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;IAC9D,IAAI,aAAa,IAAIA,qBAAU,CAAC,YAAY,CAAC;IAC7C,IAAI,KAAK,CAAC,aAAa,CAAC,GAAG,KAAK,CAAC,cAAc,GAAG,GAAG,GAAG,GAAG,CAAC;AAC5D;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;AACF;IACA,IAAI,sBAAsB,GAAG,IAAIH,kCAAkB,EAAE,CAAC;IACtD,IAAI,uBAAuB,GAAG,IAAIC,mCAAmB,EAAE,CAAC;IACxD,IAAI,qBAAqB,GAAG,IAAIE,qBAAU,EAAE,CAAC;IAC7C,IAAI,iBAAiB,GAAG,IAAID,qBAAU,EAAE,CAAC;AACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,sBAAsB,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;IACxE;IACA,IAAIJ,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC;AACA;IACA,IAAI,aAAa,GAAGC,iBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,IAAI,WAAW,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;AAC7C;IACA,IAAI,IAAI,OAAO,CAAC;IAChB,IAAI,IAAI,WAAW,KAAK,WAAW,EAAE;IACrC,QAAQ,OAAO,GAAGC,kCAAkB,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,sBAAsB,CAAC,CAAC;IAC1F,QAAQ,aAAa,IAAIA,kCAAkB,CAAC,YAAY,CAAC;IACzD,KAAK,MAAM;IACX,QAAQ,OAAO,GAAGC,mCAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,uBAAuB,CAAC,CAAC;IAC5F,QAAQ,aAAa,IAAIA,mCAAmB,CAAC,YAAY,CAAC;IAC1D,KAAK;AACL;IACA,IAAI,IAAI,MAAM,GAAGC,qBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,iBAAiB,CAAC,CAAC;IAC5E,IAAI,aAAa,IAAIA,qBAAU,CAAC,YAAY,CAAC;IAC7C,IAAI,IAAI,WAAW,GAAGC,qBAAU,CAAC,MAAM,CAAC,KAAK,EAAE,aAAa,EAAE,qBAAqB,CAAC,CAAC;IACrF,IAAI,aAAa,IAAIA,qBAAU,CAAC,YAAY,CAAC;IAC7C,IAAI,IAAI,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC;AACrD;IACA,IAAI,IAAI,CAACC,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,sBAAsB,CAAC;IAC1C,YAAY,OAAO,EAAE,OAAO;IAC5B,YAAY,MAAM,EAAE,MAAM;IAC1B,YAAY,WAAW,EAAE,WAAW;IACpC,YAAY,cAAc,EAAE,aAAa;IACzC,SAAS,CAAC,CAAC;IACX,KAAK;AACL;IACA,IAAI,IAAI,aAAa,GAAG,WAAW,KAAK,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC1F,IAAI,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;AACnD;IACA,IAAI,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC;IACtC,IAAI,MAAM,CAAC,OAAO,GAAGF,qBAAU,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9D,IAAI,MAAM,CAAC,YAAY,GAAGC,qBAAU,CAAC,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;IAC7E,IAAI,MAAM,CAAC,cAAc,GAAG,aAAa,CAAC;AAC1C;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,sBAAsB,CAAC,cAAc,GAAG,UAAU,eAAe,EAAE;IACnE,IAAI,IAAI,WAAW,GAAG,eAAe,CAAC,YAAY,CAAC;IACnD,IAAI,IAAI,OAAO,GAAG,eAAe,CAAC,QAAQ,CAAC;IAC3C,IAAI,IAAI,MAAM,GAAG,eAAe,CAAC,OAAO,CAAC;IACzC,IAAI,IAAI,WAAW,GAAG,eAAe,CAAC,YAAY,CAAC;IACnD,IAAI,IAAI,aAAa,GAAG,eAAe,CAAC,cAAc,CAAC;AACvD;IACA,IAAI,IAAI,SAAS,GAAG,IAAI,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAChD,IAAIE,+BAAe,CAAC,qBAAqB,CAAC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;AAChG;IACA,IAAI,IAAI,UAAU,GAAG,IAAIC,qCAAkB,CAAC;IAC5C,QAAQ,QAAQ,EAAE,IAAIC,mCAAiB,CAAC;IACxC,YAAY,iBAAiB,EAAEC,mCAAiB,CAAC,MAAM;IACvD,YAAY,sBAAsB,EAAE,CAAC;IACrC,YAAY,MAAM,EAAE,SAAS;IAC7B,SAAS,CAAC;IACV,KAAK,CAAC,CAAC;AACP;IACA,IAAI,IAAI,MAAM,CAAC;IACf,IAAI,IAAI,KAAK,CAAC;AACd;IACA,IAAI,IAAI,cAAc,GAAG,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;IAC/C,IAAI,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC,CAAC,IAAI,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC;AAC5D;IACA;IACA,IAAI,IAAI,CAAC,GAAG,aAAa,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IACvB,QAAQ,MAAM,GAAG,aAAa,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAC3C,QAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB;IACA,QAAQ,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IAChC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;IACpC,KAAK;AACL;IACA;IACA,IAAI,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE;IAC5B,QAAQ,MAAM,GAAG,CAAC,cAAc,GAAG,CAAC,IAAI,CAAC,CAAC;IAC1C,QAAQ,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AACtB;IACA,QAAQ,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC;IAChC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,QAAQ,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACxC,KAAK;AACL;IACA,IAAI,OAAO,IAAIC,0BAAQ,CAAC;IACxB,QAAQ,UAAU,EAAE,UAAU;IAC9B,QAAQ,OAAO,EAAE,OAAO;IACxB,QAAQ,aAAa,EAAEC,+BAAa,CAAC,KAAK;IAC1C,QAAQ,cAAc,EAAEC,yBAAc,CAAC,YAAY,CAAC,SAAS,CAAC;IAC9D,KAAK,CAAC,CAAC;IACP,CAAC;;ICrOD,SAAS,4BAA4B,CAAC,eAAe,EAAE,MAAM,EAAE;IAC/D,IAAI,IAAIP,YAAO,CAAC,MAAM,CAAC,EAAE;IACzB,QAAQ,eAAe,GAAG,sBAAsB,CAAC,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC,CAAC;IACjF,KAAK;IACL,IAAI,OAAO,sBAAsB,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;IAClE;;;;;;;;"}