{"version":3,"file":"VertexFormat-69b61abe.js","sources":["../../../../Source/Core/VertexFormat.js"],"sourcesContent":["import defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\n\r\n/**\r\n * A vertex format defines what attributes make up a vertex.  A VertexFormat can be provided\r\n * to a {@link Geometry} to request that certain properties be computed, e.g., just position,\r\n * position and normal, etc.\r\n *\r\n * @param {Object} [options] An object with boolean properties corresponding to VertexFormat properties as shown in the code example.\r\n *\r\n * @alias VertexFormat\r\n * @constructor\r\n *\r\n * @example\r\n * // Create a vertex format with position and 2D texture coordinate attributes.\r\n * var format = new Cesium.VertexFormat({\r\n *   position : true,\r\n *   st : true\r\n * });\r\n *\r\n * @see Geometry#attributes\r\n * @see Packable\r\n */\r\nfunction VertexFormat(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    /**\r\n     * When <code>true</code>, the vertex has a 3D position attribute.\r\n     * <p>\r\n     * 64-bit floating-point (for precision).  3 components per attribute.\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     */\r\n    this.position = defaultValue(options.position, false);\r\n\r\n    /**\r\n     * When <code>true</code>, the vertex has a normal attribute (normalized), which is commonly used for lighting.\r\n     * <p>\r\n     * 32-bit floating-point.  3 components per attribute.\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     */\r\n    this.normal = defaultValue(options.normal, false);\r\n\r\n    /**\r\n     * When <code>true</code>, the vertex has a 2D texture coordinate attribute.\r\n     * <p>\r\n     * 32-bit floating-point.  2 components per attribute\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     */\r\n    this.st = defaultValue(options.st, false);\r\n\r\n    /**\r\n     * When <code>true</code>, the vertex has a bitangent attribute (normalized), which is used for tangent-space effects like bump mapping.\r\n     * <p>\r\n     * 32-bit floating-point.  3 components per attribute.\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     */\r\n    this.bitangent = defaultValue(options.bitangent, false);\r\n\r\n    /**\r\n     * When <code>true</code>, the vertex has a tangent attribute (normalized), which is used for tangent-space effects like bump mapping.\r\n     * <p>\r\n     * 32-bit floating-point.  3 components per attribute.\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     */\r\n    this.tangent = defaultValue(options.tangent, false);\r\n\r\n    /**\r\n     * When <code>true</code>, the vertex has an RGB color attribute.\r\n     * <p>\r\n     * 8-bit unsigned byte.  3 components per attribute.\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     */\r\n    this.color = defaultValue(options.color, false);\r\n}\r\n\r\n/**\r\n * An immutable vertex format with only a position attribute.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n */\r\nVertexFormat.POSITION_ONLY = Object.freeze(\r\n    new VertexFormat({\r\n        position: true\r\n    })\r\n);\r\n\r\n/**\r\n * An immutable vertex format with position and normal attributes.\r\n * This is compatible with per-instance color appearances like {@link PerInstanceColorAppearance}.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n * @see VertexFormat#normal\r\n */\r\nVertexFormat.POSITION_AND_NORMAL = Object.freeze(\r\n    new VertexFormat({\r\n        position: true,\r\n        normal: true\r\n    })\r\n);\r\n\r\n/**\r\n * An immutable vertex format with position, normal, and st attributes.\r\n * This is compatible with {@link MaterialAppearance} when {@link MaterialAppearance#materialSupport}\r\n * is <code>TEXTURED/code>.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n * @see VertexFormat#normal\r\n * @see VertexFormat#st\r\n */\r\nVertexFormat.POSITION_NORMAL_AND_ST = Object.freeze(\r\n    new VertexFormat({\r\n        position: true,\r\n        normal: true,\r\n        st: true\r\n    })\r\n);\r\n\r\n/**\r\n * An immutable vertex format with position and st attributes.\r\n * This is compatible with {@link EllipsoidSurfaceAppearance}.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n * @see VertexFormat#st\r\n */\r\nVertexFormat.POSITION_AND_ST = Object.freeze(\r\n    new VertexFormat({\r\n        position: true,\r\n        st: true\r\n    })\r\n);\r\n\r\n/**\r\n * An immutable vertex format with position and color attributes.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n * @see VertexFormat#color\r\n */\r\nVertexFormat.POSITION_AND_COLOR = Object.freeze(\r\n    new VertexFormat({\r\n        position: true,\r\n        color: true\r\n    })\r\n);\r\n\r\n/**\r\n * An immutable vertex format with well-known attributes: position, normal, st, tangent, and bitangent.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n * @see VertexFormat#normal\r\n * @see VertexFormat#st\r\n * @see VertexFormat#tangent\r\n * @see VertexFormat#bitangent\r\n */\r\nVertexFormat.ALL = Object.freeze(\r\n    new VertexFormat({\r\n        position: true,\r\n        normal: true,\r\n        st: true,\r\n        tangent: true,\r\n        bitangent: true\r\n    })\r\n);\r\n\r\n/**\r\n * An immutable vertex format with position, normal, and st attributes.\r\n * This is compatible with most appearances and materials; however\r\n * normal and st attributes are not always required.  When this is\r\n * known in advance, another <code>VertexFormat</code> should be used.\r\n *\r\n * @type {VertexFormat}\r\n * @constant\r\n *\r\n * @see VertexFormat#position\r\n * @see VertexFormat#normal\r\n */\r\nVertexFormat.DEFAULT = VertexFormat.POSITION_NORMAL_AND_ST;\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nVertexFormat.packedLength = 6;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {VertexFormat} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nVertexFormat.pack = function (value, array, startingIndex) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (!defined(value)) {\r\n        throw new DeveloperError('value is required');\r\n    }\r\n    if (!defined(array)) {\r\n        throw new DeveloperError('array is required');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    array[startingIndex++] = value.position ? 1.0 : 0.0;\r\n    array[startingIndex++] = value.normal ? 1.0 : 0.0;\r\n    array[startingIndex++] = value.st ? 1.0 : 0.0;\r\n    array[startingIndex++] = value.tangent ? 1.0 : 0.0;\r\n    array[startingIndex++] = value.bitangent ? 1.0 : 0.0;\r\n    array[startingIndex] = value.color ? 1.0 : 0.0;\r\n\r\n    return array;\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {VertexFormat} [result] The object into which to store the result.\r\n * @returns {VertexFormat} The modified result parameter or a new VertexFormat instance if one was not provided.\r\n */\r\nVertexFormat.unpack = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (!defined(array)) {\r\n        throw new DeveloperError('array is required');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    if (!defined(result)) {\r\n        result = new VertexFormat();\r\n    }\r\n\r\n    result.position = array[startingIndex++] === 1.0;\r\n    result.normal = array[startingIndex++] === 1.0;\r\n    result.st = array[startingIndex++] === 1.0;\r\n    result.tangent = array[startingIndex++] === 1.0;\r\n    result.bitangent = array[startingIndex++] === 1.0;\r\n    result.color = array[startingIndex] === 1.0;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Duplicates a VertexFormat instance.\r\n *\r\n * @param {VertexFormat} vertexFormat The vertex format to duplicate.\r\n * @param {VertexFormat} [result] The object onto which to store the result.\r\n * @returns {VertexFormat} The modified result parameter or a new VertexFormat instance if one was not provided. (Returns undefined if vertexFormat is undefined)\r\n */\r\nVertexFormat.clone = function (vertexFormat, result) {\r\n    if (!defined(vertexFormat)) {\r\n        return undefined;\r\n    }\r\n    if (!defined(result)) {\r\n        result = new VertexFormat();\r\n    }\r\n\r\n    result.position = vertexFormat.position;\r\n    result.normal = vertexFormat.normal;\r\n    result.st = vertexFormat.st;\r\n    result.tangent = vertexFormat.tangent;\r\n    result.bitangent = vertexFormat.bitangent;\r\n    result.color = vertexFormat.color;\r\n    return result;\r\n};\r\nexport default VertexFormat;\r\n"],"names":["defaultValue","defined","DeveloperError"],"mappings":"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"}