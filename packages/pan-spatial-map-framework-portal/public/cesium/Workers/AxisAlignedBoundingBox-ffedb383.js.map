{"version":3,"file":"AxisAlignedBoundingBox-ffedb383.js","sources":["../../../../Source/Core/AxisAlignedBoundingBox.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport Intersect from './Intersect.js';\r\n\r\n/**\r\n * Creates an instance of an AxisAlignedBoundingBox from the minimum and maximum points along the x, y, and z axes.\r\n * @alias AxisAlignedBoundingBox\r\n * @constructor\r\n *\r\n * @param {Cartesian3} [minimum=Cartesian3.ZERO] The minimum point along the x, y, and z axes.\r\n * @param {Cartesian3} [maximum=Cartesian3.ZERO] The maximum point along the x, y, and z axes.\r\n * @param {Cartesian3} [center] The center of the box; automatically computed if not supplied.\r\n *\r\n * @see BoundingSphere\r\n * @see BoundingRectangle\r\n */\r\nfunction AxisAlignedBoundingBox(minimum, maximum, center) {\r\n    /**\r\n     * The minimum point defining the bounding box.\r\n     * @type {Cartesian3}\r\n     * @default {@link Cartesian3.ZERO}\r\n     */\r\n    this.minimum = Cartesian3.clone(defaultValue(minimum, Cartesian3.ZERO));\r\n\r\n    /**\r\n     * The maximum point defining the bounding box.\r\n     * @type {Cartesian3}\r\n     * @default {@link Cartesian3.ZERO}\r\n     */\r\n    this.maximum = Cartesian3.clone(defaultValue(maximum, Cartesian3.ZERO));\r\n\r\n    //If center was not defined, compute it.\r\n    if (!defined(center)) {\r\n        center = Cartesian3.midpoint(this.minimum, this.maximum, new Cartesian3());\r\n    } else {\r\n        center = Cartesian3.clone(center);\r\n    }\r\n\r\n    /**\r\n     * The center point of the bounding box.\r\n     * @type {Cartesian3}\r\n     */\r\n    this.center = center;\r\n}\r\n\r\n/**\r\n * Computes an instance of an AxisAlignedBoundingBox. The box is determined by\r\n * finding the points spaced the farthest apart on the x, y, and z axes.\r\n *\r\n * @param {Cartesian3[]} positions List of points that the bounding box will enclose.  Each point must have a <code>x</code>, <code>y</code>, and <code>z</code> properties.\r\n * @param {AxisAlignedBoundingBox} [result] The object onto which to store the result.\r\n * @returns {AxisAlignedBoundingBox} The modified result parameter or a new AxisAlignedBoundingBox instance if one was not provided.\r\n *\r\n * @example\r\n * // Compute an axis aligned bounding box enclosing two points.\r\n * var box = Cesium.AxisAlignedBoundingBox.fromPoints([new Cesium.Cartesian3(2, 0, 0), new Cesium.Cartesian3(-2, 0, 0)]);\r\n */\r\nAxisAlignedBoundingBox.fromPoints = function (positions, result) {\r\n    if (!defined(result)) {\r\n        result = new AxisAlignedBoundingBox();\r\n    }\r\n\r\n    if (!defined(positions) || positions.length === 0) {\r\n        result.minimum = Cartesian3.clone(Cartesian3.ZERO, result.minimum);\r\n        result.maximum = Cartesian3.clone(Cartesian3.ZERO, result.maximum);\r\n        result.center = Cartesian3.clone(Cartesian3.ZERO, result.center);\r\n        return result;\r\n    }\r\n\r\n    var minimumX = positions[0].x;\r\n    var minimumY = positions[0].y;\r\n    var minimumZ = positions[0].z;\r\n\r\n    var maximumX = positions[0].x;\r\n    var maximumY = positions[0].y;\r\n    var maximumZ = positions[0].z;\r\n\r\n    var length = positions.length;\r\n    for (var i = 1; i < length; i++) {\r\n        var p = positions[i];\r\n        var x = p.x;\r\n        var y = p.y;\r\n        var z = p.z;\r\n\r\n        minimumX = Math.min(x, minimumX);\r\n        maximumX = Math.max(x, maximumX);\r\n        minimumY = Math.min(y, minimumY);\r\n        maximumY = Math.max(y, maximumY);\r\n        minimumZ = Math.min(z, minimumZ);\r\n        maximumZ = Math.max(z, maximumZ);\r\n    }\r\n\r\n    var minimum = result.minimum;\r\n    minimum.x = minimumX;\r\n    minimum.y = minimumY;\r\n    minimum.z = minimumZ;\r\n\r\n    var maximum = result.maximum;\r\n    maximum.x = maximumX;\r\n    maximum.y = maximumY;\r\n    maximum.z = maximumZ;\r\n\r\n    result.center = Cartesian3.midpoint(minimum, maximum, result.center);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Duplicates a AxisAlignedBoundingBox instance.\r\n *\r\n * @param {AxisAlignedBoundingBox} box The bounding box to duplicate.\r\n * @param {AxisAlignedBoundingBox} [result] The object onto which to store the result.\r\n * @returns {AxisAlignedBoundingBox} The modified result parameter or a new AxisAlignedBoundingBox instance if none was provided. (Returns undefined if box is undefined)\r\n */\r\nAxisAlignedBoundingBox.clone = function (box, result) {\r\n    if (!defined(box)) {\r\n        return undefined;\r\n    }\r\n\r\n    if (!defined(result)) {\r\n        return new AxisAlignedBoundingBox(box.minimum, box.maximum, box.center);\r\n    }\r\n\r\n    result.minimum = Cartesian3.clone(box.minimum, result.minimum);\r\n    result.maximum = Cartesian3.clone(box.maximum, result.maximum);\r\n    result.center = Cartesian3.clone(box.center, result.center);\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares the provided AxisAlignedBoundingBox componentwise and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {AxisAlignedBoundingBox} [left] The first AxisAlignedBoundingBox.\r\n * @param {AxisAlignedBoundingBox} [right] The second AxisAlignedBoundingBox.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nAxisAlignedBoundingBox.equals = function (left, right) {\r\n    return (\r\n        left === right ||\r\n        (defined(left) &&\r\n            defined(right) &&\r\n            Cartesian3.equals(left.center, right.center) &&\r\n            Cartesian3.equals(left.minimum, right.minimum) &&\r\n            Cartesian3.equals(left.maximum, right.maximum))\r\n    );\r\n};\r\n\r\nvar intersectScratch = new Cartesian3();\r\n/**\r\n * Determines which side of a plane a box is located.\r\n *\r\n * @param {AxisAlignedBoundingBox} box The bounding box to test.\r\n * @param {Plane} plane The plane to test against.\r\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire box is on the side of the plane\r\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire box is\r\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the box\r\n *                      intersects the plane.\r\n */\r\nAxisAlignedBoundingBox.intersectPlane = function (box, plane) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('box', box);\r\n    Check.defined('plane', plane);\r\n    //>>includeEnd('debug');\r\n\r\n    intersectScratch = Cartesian3.subtract(box.maximum, box.minimum, intersectScratch);\r\n    var h = Cartesian3.multiplyByScalar(intersectScratch, 0.5, intersectScratch); //The positive half diagonal\r\n    var normal = plane.normal;\r\n    var e = h.x * Math.abs(normal.x) + h.y * Math.abs(normal.y) + h.z * Math.abs(normal.z);\r\n    var s = Cartesian3.dot(box.center, normal) + plane.distance; //signed distance from center\r\n\r\n    if (s - e > 0) {\r\n        return Intersect.INSIDE;\r\n    }\r\n\r\n    if (s + e < 0) {\r\n        //Not in front because normals point inward\r\n        return Intersect.OUTSIDE;\r\n    }\r\n\r\n    return Intersect.INTERSECTING;\r\n};\r\n\r\n/**\r\n * Duplicates this AxisAlignedBoundingBox instance.\r\n *\r\n * @param {AxisAlignedBoundingBox} [result] The object onto which to store the result.\r\n * @returns {AxisAlignedBoundingBox} The modified result parameter or a new AxisAlignedBoundingBox instance if one was not provided.\r\n */\r\nAxisAlignedBoundingBox.prototype.clone = function (result) {\r\n    return AxisAlignedBoundingBox.clone(this, result);\r\n};\r\n\r\n/**\r\n * Determines which side of a plane this box is located.\r\n *\r\n * @param {Plane} plane The plane to test against.\r\n * @returns {Intersect} {@link Intersect.INSIDE} if the entire box is on the side of the plane\r\n *                      the normal is pointing, {@link Intersect.OUTSIDE} if the entire box is\r\n *                      on the opposite side, and {@link Intersect.INTERSECTING} if the box\r\n *                      intersects the plane.\r\n */\r\nAxisAlignedBoundingBox.prototype.intersectPlane = function (plane) {\r\n    return AxisAlignedBoundingBox.intersectPlane(this, plane);\r\n};\r\n\r\n/**\r\n * Compares this AxisAlignedBoundingBox against the provided AxisAlignedBoundingBox componentwise and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {AxisAlignedBoundingBox} [right] The right hand side AxisAlignedBoundingBox.\r\n * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\r\n */\r\nAxisAlignedBoundingBox.prototype.equals = function (right) {\r\n    return AxisAlignedBoundingBox.equals(this, right);\r\n};\r\nexport default AxisAlignedBoundingBox;\r\n"],"names":["Cartesian3","defaultValue","defined","Check","Intersect"],"mappings":"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"}