{"version":3,"file":"EllipsoidGeodesic-cb933765.js","sources":["../../../../Source/Core/EllipsoidGeodesic.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\r\nimport Cartographic from './Cartographic.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport Ellipsoid from './Ellipsoid.js';\r\nimport CesiumMath from './Math.js';\r\n\r\nfunction setConstants(ellipsoidGeodesic) {\r\n    var uSquared = ellipsoidGeodesic._uSquared;\r\n    var a = ellipsoidGeodesic._ellipsoid.maximumRadius;\r\n    var b = ellipsoidGeodesic._ellipsoid.minimumRadius;\r\n    var f = (a - b) / a;\r\n\r\n    var cosineHeading = Math.cos(ellipsoidGeodesic._startHeading);\r\n    var sineHeading = Math.sin(ellipsoidGeodesic._startHeading);\r\n\r\n    var tanU = (1 - f) * Math.tan(ellipsoidGeodesic._start.latitude);\r\n\r\n    var cosineU = 1.0 / Math.sqrt(1.0 + tanU * tanU);\r\n    var sineU = cosineU * tanU;\r\n\r\n    var sigma = Math.atan2(tanU, cosineHeading);\r\n\r\n    var sineAlpha = cosineU * sineHeading;\r\n    var sineSquaredAlpha = sineAlpha * sineAlpha;\r\n\r\n    var cosineSquaredAlpha = 1.0 - sineSquaredAlpha;\r\n    var cosineAlpha = Math.sqrt(cosineSquaredAlpha);\r\n\r\n    var u2Over4 = uSquared / 4.0;\r\n    var u4Over16 = u2Over4 * u2Over4;\r\n    var u6Over64 = u4Over16 * u2Over4;\r\n    var u8Over256 = u4Over16 * u4Over16;\r\n\r\n    var a0 = 1.0 + u2Over4 - (3.0 * u4Over16) / 4.0 + (5.0 * u6Over64) / 4.0 - (175.0 * u8Over256) / 64.0;\r\n    var a1 = 1.0 - u2Over4 + (15.0 * u4Over16) / 8.0 - (35.0 * u6Over64) / 8.0;\r\n    var a2 = 1.0 - 3.0 * u2Over4 + (35.0 * u4Over16) / 4.0;\r\n    var a3 = 1.0 - 5.0 * u2Over4;\r\n\r\n    var distanceRatio =\r\n        a0 * sigma -\r\n        (a1 * Math.sin(2.0 * sigma) * u2Over4) / 2.0 -\r\n        (a2 * Math.sin(4.0 * sigma) * u4Over16) / 16.0 -\r\n        (a3 * Math.sin(6.0 * sigma) * u6Over64) / 48.0 -\r\n        (Math.sin(8.0 * sigma) * 5.0 * u8Over256) / 512;\r\n\r\n    var constants = ellipsoidGeodesic._constants;\r\n\r\n    constants.a = a;\r\n    constants.b = b;\r\n    constants.f = f;\r\n    constants.cosineHeading = cosineHeading;\r\n    constants.sineHeading = sineHeading;\r\n    constants.tanU = tanU;\r\n    constants.cosineU = cosineU;\r\n    constants.sineU = sineU;\r\n    constants.sigma = sigma;\r\n    constants.sineAlpha = sineAlpha;\r\n    constants.sineSquaredAlpha = sineSquaredAlpha;\r\n    constants.cosineSquaredAlpha = cosineSquaredAlpha;\r\n    constants.cosineAlpha = cosineAlpha;\r\n    constants.u2Over4 = u2Over4;\r\n    constants.u4Over16 = u4Over16;\r\n    constants.u6Over64 = u6Over64;\r\n    constants.u8Over256 = u8Over256;\r\n    constants.a0 = a0;\r\n    constants.a1 = a1;\r\n    constants.a2 = a2;\r\n    constants.a3 = a3;\r\n    constants.distanceRatio = distanceRatio;\r\n}\r\n\r\nfunction computeC(f, cosineSquaredAlpha) {\r\n    return (f * cosineSquaredAlpha * (4.0 + f * (4.0 - 3.0 * cosineSquaredAlpha))) / 16.0;\r\n}\r\n\r\nfunction computeDeltaLambda(f, sineAlpha, cosineSquaredAlpha, sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint) {\r\n    var C = computeC(f, cosineSquaredAlpha);\r\n\r\n    return (1.0 - C) * f * sineAlpha * (sigma + C * sineSigma * (cosineTwiceSigmaMidpoint + C * cosineSigma * (2.0 * cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint - 1.0)));\r\n}\r\n\r\nfunction vincentyInverseFormula(ellipsoidGeodesic, major, minor, firstLongitude, firstLatitude, secondLongitude, secondLatitude) {\r\n    var eff = (major - minor) / major;\r\n    var l = secondLongitude - firstLongitude;\r\n\r\n    var u1 = Math.atan((1 - eff) * Math.tan(firstLatitude));\r\n    var u2 = Math.atan((1 - eff) * Math.tan(secondLatitude));\r\n\r\n    var cosineU1 = Math.cos(u1);\r\n    var sineU1 = Math.sin(u1);\r\n    var cosineU2 = Math.cos(u2);\r\n    var sineU2 = Math.sin(u2);\r\n\r\n    var cc = cosineU1 * cosineU2;\r\n    var cs = cosineU1 * sineU2;\r\n    var ss = sineU1 * sineU2;\r\n    var sc = sineU1 * cosineU2;\r\n\r\n    var lambda = l;\r\n    var lambdaDot = CesiumMath.TWO_PI;\r\n\r\n    var cosineLambda = Math.cos(lambda);\r\n    var sineLambda = Math.sin(lambda);\r\n\r\n    var sigma;\r\n    var cosineSigma;\r\n    var sineSigma;\r\n    var cosineSquaredAlpha;\r\n    var cosineTwiceSigmaMidpoint;\r\n\r\n    do {\r\n        cosineLambda = Math.cos(lambda);\r\n        sineLambda = Math.sin(lambda);\r\n\r\n        var temp = cs - sc * cosineLambda;\r\n        sineSigma = Math.sqrt(cosineU2 * cosineU2 * sineLambda * sineLambda + temp * temp);\r\n        cosineSigma = ss + cc * cosineLambda;\r\n\r\n        sigma = Math.atan2(sineSigma, cosineSigma);\r\n\r\n        var sineAlpha;\r\n\r\n        if (sineSigma === 0.0) {\r\n            sineAlpha = 0.0;\r\n            cosineSquaredAlpha = 1.0;\r\n        } else {\r\n            sineAlpha = (cc * sineLambda) / sineSigma;\r\n            cosineSquaredAlpha = 1.0 - sineAlpha * sineAlpha;\r\n        }\r\n\r\n        lambdaDot = lambda;\r\n\r\n        cosineTwiceSigmaMidpoint = cosineSigma - (2.0 * ss) / cosineSquaredAlpha;\r\n\r\n        if (!isFinite(cosineTwiceSigmaMidpoint)) {\r\n            cosineTwiceSigmaMidpoint = 0.0;\r\n        }\r\n\r\n        lambda = l + computeDeltaLambda(eff, sineAlpha, cosineSquaredAlpha, sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint);\r\n    } while (Math.abs(lambda - lambdaDot) > CesiumMath.EPSILON12);\r\n\r\n    var uSquared = (cosineSquaredAlpha * (major * major - minor * minor)) / (minor * minor);\r\n    var A = 1.0 + (uSquared * (4096.0 + uSquared * (uSquared * (320.0 - 175.0 * uSquared) - 768.0))) / 16384.0;\r\n    var B = (uSquared * (256.0 + uSquared * (uSquared * (74.0 - 47.0 * uSquared) - 128.0))) / 1024.0;\r\n\r\n    var cosineSquaredTwiceSigmaMidpoint = cosineTwiceSigmaMidpoint * cosineTwiceSigmaMidpoint;\r\n    var deltaSigma =\r\n        B *\r\n        sineSigma *\r\n        (cosineTwiceSigmaMidpoint +\r\n            (B *\r\n                (cosineSigma * (2.0 * cosineSquaredTwiceSigmaMidpoint - 1.0) -\r\n                    (B * cosineTwiceSigmaMidpoint * (4.0 * sineSigma * sineSigma - 3.0) * (4.0 * cosineSquaredTwiceSigmaMidpoint - 3.0)) / 6.0)) /\r\n                4.0);\r\n\r\n    var distance = minor * A * (sigma - deltaSigma);\r\n\r\n    var startHeading = Math.atan2(cosineU2 * sineLambda, cs - sc * cosineLambda);\r\n    var endHeading = Math.atan2(cosineU1 * sineLambda, cs * cosineLambda - sc);\r\n\r\n    ellipsoidGeodesic._distance = distance;\r\n    ellipsoidGeodesic._startHeading = startHeading;\r\n    ellipsoidGeodesic._endHeading = endHeading;\r\n    ellipsoidGeodesic._uSquared = uSquared;\r\n}\r\n\r\nvar scratchCart1 = new Cartesian3();\r\nvar scratchCart2 = new Cartesian3();\r\nfunction computeProperties(ellipsoidGeodesic, start, end, ellipsoid) {\r\n    var firstCartesian = Cartesian3.normalize(ellipsoid.cartographicToCartesian(start, scratchCart2), scratchCart1);\r\n    var lastCartesian = Cartesian3.normalize(ellipsoid.cartographicToCartesian(end, scratchCart2), scratchCart2);\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number.greaterThanOrEquals('value', Math.abs(Math.abs(Cartesian3.angleBetween(firstCartesian, lastCartesian)) - Math.PI), 0.0125);\r\n    //>>includeEnd('debug');\r\n\r\n    vincentyInverseFormula(ellipsoidGeodesic, ellipsoid.maximumRadius, ellipsoid.minimumRadius, start.longitude, start.latitude, end.longitude, end.latitude);\r\n\r\n    ellipsoidGeodesic._start = Cartographic.clone(start, ellipsoidGeodesic._start);\r\n    ellipsoidGeodesic._end = Cartographic.clone(end, ellipsoidGeodesic._end);\r\n    ellipsoidGeodesic._start.height = 0;\r\n    ellipsoidGeodesic._end.height = 0;\r\n\r\n    setConstants(ellipsoidGeodesic);\r\n}\r\n\r\n/**\r\n * Initializes a geodesic on the ellipsoid connecting the two provided planetodetic points.\r\n *\r\n * @alias EllipsoidGeodesic\r\n * @constructor\r\n *\r\n * @param {Cartographic} [start] The initial planetodetic point on the path.\r\n * @param {Cartographic} [end] The final planetodetic point on the path.\r\n * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid on which the geodesic lies.\r\n */\r\nfunction EllipsoidGeodesic(start, end, ellipsoid) {\r\n    var e = defaultValue(ellipsoid, Ellipsoid.WGS84);\r\n    this._ellipsoid = e;\r\n    this._start = new Cartographic();\r\n    this._end = new Cartographic();\r\n\r\n    this._constants = {};\r\n    this._startHeading = undefined;\r\n    this._endHeading = undefined;\r\n    this._distance = undefined;\r\n    this._uSquared = undefined;\r\n\r\n    if (defined(start) && defined(end)) {\r\n        computeProperties(this, start, end, e);\r\n    }\r\n}\r\n\r\nObject.defineProperties(EllipsoidGeodesic.prototype, {\r\n    /**\r\n     * Gets the ellipsoid.\r\n     * @memberof EllipsoidGeodesic.prototype\r\n     * @type {Ellipsoid}\r\n     * @readonly\r\n     */\r\n    ellipsoid: {\r\n        get: function () {\r\n            return this._ellipsoid;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the surface distance between the start and end point\r\n     * @memberof EllipsoidGeodesic.prototype\r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    surfaceDistance: {\r\n        get: function () {\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.defined('distance', this._distance);\r\n            //>>includeEnd('debug');\r\n\r\n            return this._distance;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the initial planetodetic point on the path.\r\n     * @memberof EllipsoidGeodesic.prototype\r\n     * @type {Cartographic}\r\n     * @readonly\r\n     */\r\n    start: {\r\n        get: function () {\r\n            return this._start;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the final planetodetic point on the path.\r\n     * @memberof EllipsoidGeodesic.prototype\r\n     * @type {Cartographic}\r\n     * @readonly\r\n     */\r\n    end: {\r\n        get: function () {\r\n            return this._end;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the heading at the initial point.\r\n     * @memberof EllipsoidGeodesic.prototype\r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    startHeading: {\r\n        get: function () {\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.defined('distance', this._distance);\r\n            //>>includeEnd('debug');\r\n\r\n            return this._startHeading;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the heading at the final point.\r\n     * @memberof EllipsoidGeodesic.prototype\r\n     * @type {Number}\r\n     * @readonly\r\n     */\r\n    endHeading: {\r\n        get: function () {\r\n            //>>includeStart('debug', pragmas.debug);\r\n            Check.defined('distance', this._distance);\r\n            //>>includeEnd('debug');\r\n\r\n            return this._endHeading;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Sets the start and end points of the geodesic\r\n *\r\n * @param {Cartographic} start The initial planetodetic point on the path.\r\n * @param {Cartographic} end The final planetodetic point on the path.\r\n */\r\nEllipsoidGeodesic.prototype.setEndPoints = function (start, end) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('start', start);\r\n    Check.defined('end', end);\r\n    //>>includeEnd('debug');\r\n\r\n    computeProperties(this, start, end, this._ellipsoid);\r\n};\r\n\r\n/**\r\n * Provides the location of a point at the indicated portion along the geodesic.\r\n *\r\n * @param {Number} fraction The portion of the distance between the initial and final points.\r\n * @param {Cartographic} [result] The object in which to store the result.\r\n * @returns {Cartographic} The location of the point along the geodesic.\r\n */\r\nEllipsoidGeodesic.prototype.interpolateUsingFraction = function (fraction, result) {\r\n    return this.interpolateUsingSurfaceDistance(this._distance * fraction, result);\r\n};\r\n\r\n/**\r\n * Provides the location of a point at the indicated distance along the geodesic.\r\n *\r\n * @param {Number} distance The distance from the inital point to the point of interest along the geodesic\r\n * @param {Cartographic} [result] The object in which to store the result.\r\n * @returns {Cartographic} The location of the point along the geodesic.\r\n *\r\n * @exception {DeveloperError} start and end must be set before calling function interpolateUsingSurfaceDistance\r\n */\r\nEllipsoidGeodesic.prototype.interpolateUsingSurfaceDistance = function (distance, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('distance', this._distance);\r\n    //>>includeEnd('debug');\r\n\r\n    var constants = this._constants;\r\n\r\n    var s = constants.distanceRatio + distance / constants.b;\r\n\r\n    var cosine2S = Math.cos(2.0 * s);\r\n    var cosine4S = Math.cos(4.0 * s);\r\n    var cosine6S = Math.cos(6.0 * s);\r\n    var sine2S = Math.sin(2.0 * s);\r\n    var sine4S = Math.sin(4.0 * s);\r\n    var sine6S = Math.sin(6.0 * s);\r\n    var sine8S = Math.sin(8.0 * s);\r\n\r\n    var s2 = s * s;\r\n    var s3 = s * s2;\r\n\r\n    var u8Over256 = constants.u8Over256;\r\n    var u2Over4 = constants.u2Over4;\r\n    var u6Over64 = constants.u6Over64;\r\n    var u4Over16 = constants.u4Over16;\r\n    var sigma =\r\n        (2.0 * s3 * u8Over256 * cosine2S) / 3.0 +\r\n        s *\r\n            (1.0 -\r\n                u2Over4 +\r\n                (7.0 * u4Over16) / 4.0 -\r\n                (15.0 * u6Over64) / 4.0 +\r\n                (579.0 * u8Over256) / 64.0 -\r\n                (u4Over16 - (15.0 * u6Over64) / 4.0 + (187.0 * u8Over256) / 16.0) * cosine2S -\r\n                ((5.0 * u6Over64) / 4.0 - (115.0 * u8Over256) / 16.0) * cosine4S -\r\n                (29.0 * u8Over256 * cosine6S) / 16.0) +\r\n        (u2Over4 / 2.0 - u4Over16 + (71.0 * u6Over64) / 32.0 - (85.0 * u8Over256) / 16.0) * sine2S +\r\n        ((5.0 * u4Over16) / 16.0 - (5.0 * u6Over64) / 4.0 + (383.0 * u8Over256) / 96.0) * sine4S -\r\n        s2 * ((u6Over64 - (11.0 * u8Over256) / 2.0) * sine2S + (5.0 * u8Over256 * sine4S) / 2.0) +\r\n        ((29.0 * u6Over64) / 96.0 - (29.0 * u8Over256) / 16.0) * sine6S +\r\n        (539.0 * u8Over256 * sine8S) / 1536.0;\r\n\r\n    var theta = Math.asin(Math.sin(sigma) * constants.cosineAlpha);\r\n    var latitude = Math.atan((constants.a / constants.b) * Math.tan(theta));\r\n\r\n    // Redefine in terms of relative argument of latitude.\r\n    sigma = sigma - constants.sigma;\r\n\r\n    var cosineTwiceSigmaMidpoint = Math.cos(2.0 * constants.sigma + sigma);\r\n\r\n    var sineSigma = Math.sin(sigma);\r\n    var cosineSigma = Math.cos(sigma);\r\n\r\n    var cc = constants.cosineU * cosineSigma;\r\n    var ss = constants.sineU * sineSigma;\r\n\r\n    var lambda = Math.atan2(sineSigma * constants.sineHeading, cc - ss * constants.cosineHeading);\r\n\r\n    var l = lambda - computeDeltaLambda(constants.f, constants.sineAlpha, constants.cosineSquaredAlpha, sigma, sineSigma, cosineSigma, cosineTwiceSigmaMidpoint);\r\n\r\n    if (defined(result)) {\r\n        result.longitude = this._start.longitude + l;\r\n        result.latitude = latitude;\r\n        result.height = 0.0;\r\n        return result;\r\n    }\r\n\r\n    return new Cartographic(this._start.longitude + l, latitude, 0.0);\r\n};\r\nexport default EllipsoidGeodesic;\r\n"],"names":["CesiumMath","Cartesian3","Check","Cartographic","defaultValue","Ellipsoid","defined"],"mappings":"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"}