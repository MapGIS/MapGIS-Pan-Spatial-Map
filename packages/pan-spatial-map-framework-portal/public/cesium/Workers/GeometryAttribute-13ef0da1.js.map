{"version":3,"file":"GeometryAttribute-13ef0da1.js","sources":["../../../../Source/Core/GeometryType.js","../../../../Source/Core/Matrix2.js","../../../../Source/Core/PrimitiveType.js","../../../../Source/Core/Geometry.js","../../../../Source/Core/GeometryAttribute.js"],"sourcesContent":["/**\r\n * @private\r\n */\r\nvar GeometryType = {\r\n    NONE: 0,\r\n    TRIANGLES: 1,\r\n    LINES: 2,\r\n    POLYLINES: 3\r\n};\r\nexport default Object.freeze(GeometryType);\r\n","import Cartesian2 from './Cartesian2.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\n\r\n/**\r\n * A 2x2 matrix, indexable as a column-major order array.\r\n * Constructor parameters are in row-major order for code readability.\r\n * @alias Matrix2\r\n * @constructor\r\n * @implements {ArrayLike<number>}\r\n *\r\n * @param {Number} [column0Row0=0.0] The value for column 0, row 0.\r\n * @param {Number} [column1Row0=0.0] The value for column 1, row 0.\r\n * @param {Number} [column0Row1=0.0] The value for column 0, row 1.\r\n * @param {Number} [column1Row1=0.0] The value for column 1, row 1.\r\n *\r\n * @see Matrix2.fromColumnMajorArray\r\n * @see Matrix2.fromRowMajorArray\r\n * @see Matrix2.fromScale\r\n * @see Matrix2.fromUniformScale\r\n * @see Matrix3\r\n * @see Matrix4\r\n */\r\nfunction Matrix2(column0Row0, column1Row0, column0Row1, column1Row1) {\r\n    this[0] = defaultValue(column0Row0, 0.0);\r\n    this[1] = defaultValue(column0Row1, 0.0);\r\n    this[2] = defaultValue(column1Row0, 0.0);\r\n    this[3] = defaultValue(column1Row1, 0.0);\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nMatrix2.packedLength = 4;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {Matrix2} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nMatrix2.pack = function (value, array, startingIndex) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('value', value);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    array[startingIndex++] = value[0];\r\n    array[startingIndex++] = value[1];\r\n    array[startingIndex++] = value[2];\r\n    array[startingIndex++] = value[3];\r\n\r\n    return array;\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {Matrix2} [result] The object into which to store the result.\r\n * @returns {Matrix2} The modified result parameter or a new Matrix2 instance if one was not provided.\r\n */\r\nMatrix2.unpack = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    if (!defined(result)) {\r\n        result = new Matrix2();\r\n    }\r\n\r\n    result[0] = array[startingIndex++];\r\n    result[1] = array[startingIndex++];\r\n    result[2] = array[startingIndex++];\r\n    result[3] = array[startingIndex++];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Duplicates a Matrix2 instance.\r\n *\r\n * @param {Matrix2} matrix The matrix to duplicate.\r\n * @param {Matrix2} [result] The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter or a new Matrix2 instance if one was not provided. (Returns undefined if matrix is undefined)\r\n */\r\nMatrix2.clone = function (matrix, result) {\r\n    if (!defined(matrix)) {\r\n        return undefined;\r\n    }\r\n    if (!defined(result)) {\r\n        return new Matrix2(matrix[0], matrix[2], matrix[1], matrix[3]);\r\n    }\r\n    result[0] = matrix[0];\r\n    result[1] = matrix[1];\r\n    result[2] = matrix[2];\r\n    result[3] = matrix[3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Creates a Matrix2 from 4 consecutive elements in an array.\r\n *\r\n * @param {Number[]} array The array whose 4 consecutive elements correspond to the positions of the matrix.  Assumes column-major order.\r\n * @param {Number} [startingIndex=0] The offset into the array of the first element, which corresponds to first column first row position in the matrix.\r\n * @param {Matrix2} [result] The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter or a new Matrix2 instance if one was not provided.\r\n *\r\n * @example\r\n * // Create the Matrix2:\r\n * // [1.0, 2.0]\r\n * // [1.0, 2.0]\r\n *\r\n * var v = [1.0, 1.0, 2.0, 2.0];\r\n * var m = Cesium.Matrix2.fromArray(v);\r\n *\r\n * // Create same Matrix2 with using an offset into an array\r\n * var v2 = [0.0, 0.0, 1.0, 1.0, 2.0, 2.0];\r\n * var m2 = Cesium.Matrix2.fromArray(v2, 2);\r\n */\r\nMatrix2.fromArray = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    if (!defined(result)) {\r\n        result = new Matrix2();\r\n    }\r\n\r\n    result[0] = array[startingIndex];\r\n    result[1] = array[startingIndex + 1];\r\n    result[2] = array[startingIndex + 2];\r\n    result[3] = array[startingIndex + 3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Creates a Matrix2 instance from a column-major order array.\r\n *\r\n * @param {Number[]} values The column-major order array.\r\n * @param {Matrix2} [result] The object in which the result will be stored, if undefined a new instance will be created.\r\n * @returns {Matrix2} The modified result parameter, or a new Matrix2 instance if one was not provided.\r\n */\r\nMatrix2.fromColumnMajorArray = function (values, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('values', values);\r\n    //>>includeEnd('debug');\r\n\r\n    return Matrix2.clone(values, result);\r\n};\r\n\r\n/**\r\n * Creates a Matrix2 instance from a row-major order array.\r\n * The resulting matrix will be in column-major order.\r\n *\r\n * @param {Number[]} values The row-major order array.\r\n * @param {Matrix2} [result] The object in which the result will be stored, if undefined a new instance will be created.\r\n * @returns {Matrix2} The modified result parameter, or a new Matrix2 instance if one was not provided.\r\n */\r\nMatrix2.fromRowMajorArray = function (values, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('values', values);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        return new Matrix2(values[0], values[1], values[2], values[3]);\r\n    }\r\n    result[0] = values[0];\r\n    result[1] = values[2];\r\n    result[2] = values[1];\r\n    result[3] = values[3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a Matrix2 instance representing a non-uniform scale.\r\n *\r\n * @param {Cartesian2} scale The x and y scale factors.\r\n * @param {Matrix2} [result] The object in which the result will be stored, if undefined a new instance will be created.\r\n * @returns {Matrix2} The modified result parameter, or a new Matrix2 instance if one was not provided.\r\n *\r\n * @example\r\n * // Creates\r\n * //   [7.0, 0.0]\r\n * //   [0.0, 8.0]\r\n * var m = Cesium.Matrix2.fromScale(new Cesium.Cartesian2(7.0, 8.0));\r\n */\r\nMatrix2.fromScale = function (scale, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('scale', scale);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        return new Matrix2(scale.x, 0.0, 0.0, scale.y);\r\n    }\r\n\r\n    result[0] = scale.x;\r\n    result[1] = 0.0;\r\n    result[2] = 0.0;\r\n    result[3] = scale.y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a Matrix2 instance representing a uniform scale.\r\n *\r\n * @param {Number} scale The uniform scale factor.\r\n * @param {Matrix2} [result] The object in which the result will be stored, if undefined a new instance will be created.\r\n * @returns {Matrix2} The modified result parameter, or a new Matrix2 instance if one was not provided.\r\n *\r\n * @example\r\n * // Creates\r\n * //   [2.0, 0.0]\r\n * //   [0.0, 2.0]\r\n * var m = Cesium.Matrix2.fromUniformScale(2.0);\r\n */\r\nMatrix2.fromUniformScale = function (scale, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number('scale', scale);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        return new Matrix2(scale, 0.0, 0.0, scale);\r\n    }\r\n\r\n    result[0] = scale;\r\n    result[1] = 0.0;\r\n    result[2] = 0.0;\r\n    result[3] = scale;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Creates a rotation matrix.\r\n *\r\n * @param {Number} angle The angle, in radians, of the rotation.  Positive angles are counterclockwise.\r\n * @param {Matrix2} [result] The object in which the result will be stored, if undefined a new instance will be created.\r\n * @returns {Matrix2} The modified result parameter, or a new Matrix2 instance if one was not provided.\r\n *\r\n * @example\r\n * // Rotate a point 45 degrees counterclockwise.\r\n * var p = new Cesium.Cartesian2(5, 6);\r\n * var m = Cesium.Matrix2.fromRotation(Cesium.Math.toRadians(45.0));\r\n * var rotated = Cesium.Matrix2.multiplyByVector(m, p, new Cesium.Cartesian2());\r\n */\r\nMatrix2.fromRotation = function (angle, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number('angle', angle);\r\n    //>>includeEnd('debug');\r\n\r\n    var cosAngle = Math.cos(angle);\r\n    var sinAngle = Math.sin(angle);\r\n\r\n    if (!defined(result)) {\r\n        return new Matrix2(cosAngle, -sinAngle, sinAngle, cosAngle);\r\n    }\r\n    result[0] = cosAngle;\r\n    result[1] = sinAngle;\r\n    result[2] = -sinAngle;\r\n    result[3] = cosAngle;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Creates an Array from the provided Matrix2 instance.\r\n * The array will be in column-major order.\r\n *\r\n * @param {Matrix2} matrix The matrix to use..\r\n * @param {Number[]} [result] The Array onto which to store the result.\r\n * @returns {Number[]} The modified Array parameter or a new Array instance if one was not provided.\r\n */\r\nMatrix2.toArray = function (matrix, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        return [matrix[0], matrix[1], matrix[2], matrix[3]];\r\n    }\r\n    result[0] = matrix[0];\r\n    result[1] = matrix[1];\r\n    result[2] = matrix[2];\r\n    result[3] = matrix[3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the array index of the element at the provided row and column.\r\n *\r\n * @param {Number} row The zero-based index of the row.\r\n * @param {Number} column The zero-based index of the column.\r\n * @returns {Number} The index of the element at the provided row and column.\r\n *\r\n * @exception {DeveloperError} row must be 0 or 1.\r\n * @exception {DeveloperError} column must be 0 or 1.\r\n *\r\n * @example\r\n * var myMatrix = new Cesium.Matrix2();\r\n * var column1Row0Index = Cesium.Matrix2.getElementIndex(1, 0);\r\n * var column1Row0 = myMatrix[column1Row0Index]\r\n * myMatrix[column1Row0Index] = 10.0;\r\n */\r\nMatrix2.getElementIndex = function (column, row) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number.greaterThanOrEquals('row', row, 0);\r\n    Check.typeOf.number.lessThanOrEquals('row', row, 1);\r\n\r\n    Check.typeOf.number.greaterThanOrEquals('column', column, 0);\r\n    Check.typeOf.number.lessThanOrEquals('column', column, 1);\r\n    //>>includeEnd('debug');\r\n\r\n    return column * 2 + row;\r\n};\r\n\r\n/**\r\n * Retrieves a copy of the matrix column at the provided index as a Cartesian2 instance.\r\n *\r\n * @param {Matrix2} matrix The matrix to use.\r\n * @param {Number} index The zero-based index of the column to retrieve.\r\n * @param {Cartesian2} result The object onto which to store the result.\r\n * @returns {Cartesian2} The modified result parameter.\r\n *\r\n * @exception {DeveloperError} index must be 0 or 1.\r\n */\r\nMatrix2.getColumn = function (matrix, index, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n\r\n    Check.typeOf.number.greaterThanOrEquals('index', index, 0);\r\n    Check.typeOf.number.lessThanOrEquals('index', index, 1);\r\n\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    var startIndex = index * 2;\r\n    var x = matrix[startIndex];\r\n    var y = matrix[startIndex + 1];\r\n\r\n    result.x = x;\r\n    result.y = y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a new matrix that replaces the specified column in the provided matrix with the provided Cartesian2 instance.\r\n *\r\n * @param {Matrix2} matrix The matrix to use.\r\n * @param {Number} index The zero-based index of the column to set.\r\n * @param {Cartesian2} cartesian The Cartesian whose values will be assigned to the specified column.\r\n * @param {Cartesian2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n *\r\n * @exception {DeveloperError} index must be 0 or 1.\r\n */\r\nMatrix2.setColumn = function (matrix, index, cartesian, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n\r\n    Check.typeOf.number.greaterThanOrEquals('index', index, 0);\r\n    Check.typeOf.number.lessThanOrEquals('index', index, 1);\r\n\r\n    Check.typeOf.object('cartesian', cartesian);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result = Matrix2.clone(matrix, result);\r\n    var startIndex = index * 2;\r\n    result[startIndex] = cartesian.x;\r\n    result[startIndex + 1] = cartesian.y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Retrieves a copy of the matrix row at the provided index as a Cartesian2 instance.\r\n *\r\n * @param {Matrix2} matrix The matrix to use.\r\n * @param {Number} index The zero-based index of the row to retrieve.\r\n * @param {Cartesian2} result The object onto which to store the result.\r\n * @returns {Cartesian2} The modified result parameter.\r\n *\r\n * @exception {DeveloperError} index must be 0 or 1.\r\n */\r\nMatrix2.getRow = function (matrix, index, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n\r\n    Check.typeOf.number.greaterThanOrEquals('index', index, 0);\r\n    Check.typeOf.number.lessThanOrEquals('index', index, 1);\r\n\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    var x = matrix[index];\r\n    var y = matrix[index + 2];\r\n\r\n    result.x = x;\r\n    result.y = y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a new matrix that replaces the specified row in the provided matrix with the provided Cartesian2 instance.\r\n *\r\n * @param {Matrix2} matrix The matrix to use.\r\n * @param {Number} index The zero-based index of the row to set.\r\n * @param {Cartesian2} cartesian The Cartesian whose values will be assigned to the specified row.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n *\r\n * @exception {DeveloperError} index must be 0 or 1.\r\n */\r\nMatrix2.setRow = function (matrix, index, cartesian, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n\r\n    Check.typeOf.number.greaterThanOrEquals('index', index, 0);\r\n    Check.typeOf.number.lessThanOrEquals('index', index, 1);\r\n\r\n    Check.typeOf.object('cartesian', cartesian);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result = Matrix2.clone(matrix, result);\r\n    result[index] = cartesian.x;\r\n    result[index + 2] = cartesian.y;\r\n    return result;\r\n};\r\n\r\nvar scratchColumn = new Cartesian2();\r\n\r\n/**\r\n * Extracts the non-uniform scale assuming the matrix is an affine transformation.\r\n *\r\n * @param {Matrix2} matrix The matrix.\r\n * @param {Cartesian2} result The object onto which to store the result.\r\n * @returns {Cartesian2} The modified result parameter.\r\n */\r\nMatrix2.getScale = function (matrix, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result.x = Cartesian2.magnitude(Cartesian2.fromElements(matrix[0], matrix[1], scratchColumn));\r\n    result.y = Cartesian2.magnitude(Cartesian2.fromElements(matrix[2], matrix[3], scratchColumn));\r\n    return result;\r\n};\r\n\r\nvar scratchScale = new Cartesian2();\r\n\r\n/**\r\n * Computes the maximum scale assuming the matrix is an affine transformation.\r\n * The maximum scale is the maximum length of the column vectors.\r\n *\r\n * @param {Matrix2} matrix The matrix.\r\n * @returns {Number} The maximum scale.\r\n */\r\nMatrix2.getMaximumScale = function (matrix) {\r\n    Matrix2.getScale(matrix, scratchScale);\r\n    return Cartesian2.maximumComponent(scratchScale);\r\n};\r\n\r\n/**\r\n * Computes the product of two matrices.\r\n *\r\n * @param {Matrix2} left The first matrix.\r\n * @param {Matrix2} right The second matrix.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.multiply = function (left, right, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('left', left);\r\n    Check.typeOf.object('right', right);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    var column0Row0 = left[0] * right[0] + left[2] * right[1];\r\n    var column1Row0 = left[0] * right[2] + left[2] * right[3];\r\n    var column0Row1 = left[1] * right[0] + left[3] * right[1];\r\n    var column1Row1 = left[1] * right[2] + left[3] * right[3];\r\n\r\n    result[0] = column0Row0;\r\n    result[1] = column0Row1;\r\n    result[2] = column1Row0;\r\n    result[3] = column1Row1;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the sum of two matrices.\r\n *\r\n * @param {Matrix2} left The first matrix.\r\n * @param {Matrix2} right The second matrix.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.add = function (left, right, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('left', left);\r\n    Check.typeOf.object('right', right);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result[0] = left[0] + right[0];\r\n    result[1] = left[1] + right[1];\r\n    result[2] = left[2] + right[2];\r\n    result[3] = left[3] + right[3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the difference of two matrices.\r\n *\r\n * @param {Matrix2} left The first matrix.\r\n * @param {Matrix2} right The second matrix.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.subtract = function (left, right, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('left', left);\r\n    Check.typeOf.object('right', right);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result[0] = left[0] - right[0];\r\n    result[1] = left[1] - right[1];\r\n    result[2] = left[2] - right[2];\r\n    result[3] = left[3] - right[3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the product of a matrix and a column vector.\r\n *\r\n * @param {Matrix2} matrix The matrix.\r\n * @param {Cartesian2} cartesian The column.\r\n * @param {Cartesian2} result The object onto which to store the result.\r\n * @returns {Cartesian2} The modified result parameter.\r\n */\r\nMatrix2.multiplyByVector = function (matrix, cartesian, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.object('cartesian', cartesian);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    var x = matrix[0] * cartesian.x + matrix[2] * cartesian.y;\r\n    var y = matrix[1] * cartesian.x + matrix[3] * cartesian.y;\r\n\r\n    result.x = x;\r\n    result.y = y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the product of a matrix and a scalar.\r\n *\r\n * @param {Matrix2} matrix The matrix.\r\n * @param {Number} scalar The number to multiply by.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.multiplyByScalar = function (matrix, scalar, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.number('scalar', scalar);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result[0] = matrix[0] * scalar;\r\n    result[1] = matrix[1] * scalar;\r\n    result[2] = matrix[2] * scalar;\r\n    result[3] = matrix[3] * scalar;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the product of a matrix times a (non-uniform) scale, as if the scale were a scale matrix.\r\n *\r\n * @param {Matrix2} matrix The matrix on the left-hand side.\r\n * @param {Cartesian2} scale The non-uniform scale on the right-hand side.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n *\r\n *\r\n * @example\r\n * // Instead of Cesium.Matrix2.multiply(m, Cesium.Matrix2.fromScale(scale), m);\r\n * Cesium.Matrix2.multiplyByScale(m, scale, m);\r\n *\r\n * @see Matrix2.fromScale\r\n * @see Matrix2.multiplyByUniformScale\r\n */\r\nMatrix2.multiplyByScale = function (matrix, scale, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.object('scale', scale);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result[0] = matrix[0] * scale.x;\r\n    result[1] = matrix[1] * scale.x;\r\n    result[2] = matrix[2] * scale.y;\r\n    result[3] = matrix[3] * scale.y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Creates a negated copy of the provided matrix.\r\n *\r\n * @param {Matrix2} matrix The matrix to negate.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.negate = function (matrix, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result[0] = -matrix[0];\r\n    result[1] = -matrix[1];\r\n    result[2] = -matrix[2];\r\n    result[3] = -matrix[3];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the transpose of the provided matrix.\r\n *\r\n * @param {Matrix2} matrix The matrix to transpose.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.transpose = function (matrix, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    var column0Row0 = matrix[0];\r\n    var column0Row1 = matrix[2];\r\n    var column1Row0 = matrix[1];\r\n    var column1Row1 = matrix[3];\r\n\r\n    result[0] = column0Row0;\r\n    result[1] = column0Row1;\r\n    result[2] = column1Row0;\r\n    result[3] = column1Row1;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a matrix, which contains the absolute (unsigned) values of the provided matrix's elements.\r\n *\r\n * @param {Matrix2} matrix The matrix with signed elements.\r\n * @param {Matrix2} result The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter.\r\n */\r\nMatrix2.abs = function (matrix, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('matrix', matrix);\r\n    Check.typeOf.object('result', result);\r\n    //>>includeEnd('debug');\r\n\r\n    result[0] = Math.abs(matrix[0]);\r\n    result[1] = Math.abs(matrix[1]);\r\n    result[2] = Math.abs(matrix[2]);\r\n    result[3] = Math.abs(matrix[3]);\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compares the provided matrices componentwise and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Matrix2} [left] The first matrix.\r\n * @param {Matrix2} [right] The second matrix.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nMatrix2.equals = function (left, right) {\r\n    return left === right || (defined(left) && defined(right) && left[0] === right[0] && left[1] === right[1] && left[2] === right[2] && left[3] === right[3]);\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nMatrix2.equalsArray = function (matrix, array, offset) {\r\n    return matrix[0] === array[offset] && matrix[1] === array[offset + 1] && matrix[2] === array[offset + 2] && matrix[3] === array[offset + 3];\r\n};\r\n\r\n/**\r\n * Compares the provided matrices componentwise and returns\r\n * <code>true</code> if they are within the provided epsilon,\r\n * <code>false</code> otherwise.\r\n *\r\n * @param {Matrix2} [left] The first matrix.\r\n * @param {Matrix2} [right] The second matrix.\r\n * @param {Number} [epsilon=0] The epsilon to use for equality testing.\r\n * @returns {Boolean} <code>true</code> if left and right are within the provided epsilon, <code>false</code> otherwise.\r\n */\r\nMatrix2.equalsEpsilon = function (left, right, epsilon) {\r\n    epsilon = defaultValue(epsilon, 0);\r\n    return (\r\n        left === right ||\r\n        (defined(left) &&\r\n            defined(right) &&\r\n            Math.abs(left[0] - right[0]) <= epsilon &&\r\n            Math.abs(left[1] - right[1]) <= epsilon &&\r\n            Math.abs(left[2] - right[2]) <= epsilon &&\r\n            Math.abs(left[3] - right[3]) <= epsilon)\r\n    );\r\n};\r\n\r\n/**\r\n * An immutable Matrix2 instance initialized to the identity matrix.\r\n *\r\n * @type {Matrix2}\r\n * @constant\r\n */\r\nMatrix2.IDENTITY = Object.freeze(new Matrix2(1.0, 0.0, 0.0, 1.0));\r\n\r\n/**\r\n * An immutable Matrix2 instance initialized to the zero matrix.\r\n *\r\n * @type {Matrix2}\r\n * @constant\r\n */\r\nMatrix2.ZERO = Object.freeze(new Matrix2(0.0, 0.0, 0.0, 0.0));\r\n\r\n/**\r\n * The index into Matrix2 for column 0, row 0.\r\n *\r\n * @type {Number}\r\n * @constant\r\n *\r\n * @example\r\n * var matrix = new Cesium.Matrix2();\r\n * matrix[Cesium.Matrix2.COLUMN0ROW0] = 5.0; // set column 0, row 0 to 5.0\r\n */\r\nMatrix2.COLUMN0ROW0 = 0;\r\n\r\n/**\r\n * The index into Matrix2 for column 0, row 1.\r\n *\r\n * @type {Number}\r\n * @constant\r\n *\r\n * @example\r\n * var matrix = new Cesium.Matrix2();\r\n * matrix[Cesium.Matrix2.COLUMN0ROW1] = 5.0; // set column 0, row 1 to 5.0\r\n */\r\nMatrix2.COLUMN0ROW1 = 1;\r\n\r\n/**\r\n * The index into Matrix2 for column 1, row 0.\r\n *\r\n * @type {Number}\r\n * @constant\r\n *\r\n * @example\r\n * var matrix = new Cesium.Matrix2();\r\n * matrix[Cesium.Matrix2.COLUMN1ROW0] = 5.0; // set column 1, row 0 to 5.0\r\n */\r\nMatrix2.COLUMN1ROW0 = 2;\r\n\r\n/**\r\n * The index into Matrix2 for column 1, row 1.\r\n *\r\n * @type {Number}\r\n * @constant\r\n *\r\n * @example\r\n * var matrix = new Cesium.Matrix2();\r\n * matrix[Cesium.Matrix2.COLUMN1ROW1] = 5.0; // set column 1, row 1 to 5.0\r\n */\r\nMatrix2.COLUMN1ROW1 = 3;\r\n\r\nObject.defineProperties(Matrix2.prototype, {\r\n    /**\r\n     * Gets the number of items in the collection.\r\n     * @memberof Matrix2.prototype\r\n     *\r\n     * @type {Number}\r\n     */\r\n    length: {\r\n        get: function () {\r\n            return Matrix2.packedLength;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Duplicates the provided Matrix2 instance.\r\n *\r\n * @param {Matrix2} [result] The object onto which to store the result.\r\n * @returns {Matrix2} The modified result parameter or a new Matrix2 instance if one was not provided.\r\n */\r\nMatrix2.prototype.clone = function (result) {\r\n    return Matrix2.clone(this, result);\r\n};\r\n\r\n/**\r\n * Compares this matrix to the provided matrix componentwise and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {Matrix2} [right] The right hand side matrix.\r\n * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\r\n */\r\nMatrix2.prototype.equals = function (right) {\r\n    return Matrix2.equals(this, right);\r\n};\r\n\r\n/**\r\n * Compares this matrix to the provided matrix componentwise and returns\r\n * <code>true</code> if they are within the provided epsilon,\r\n * <code>false</code> otherwise.\r\n *\r\n * @param {Matrix2} [right] The right hand side matrix.\r\n * @param {Number} [epsilon=0] The epsilon to use for equality testing.\r\n * @returns {Boolean} <code>true</code> if they are within the provided epsilon, <code>false</code> otherwise.\r\n */\r\nMatrix2.prototype.equalsEpsilon = function (right, epsilon) {\r\n    return Matrix2.equalsEpsilon(this, right, epsilon);\r\n};\r\n\r\n/**\r\n * Creates a string representing this Matrix with each row being\r\n * on a separate line and in the format '(column0, column1)'.\r\n *\r\n * @returns {String} A string representing the provided Matrix with each row being on a separate line and in the format '(column0, column1)'.\r\n */\r\nMatrix2.prototype.toString = function () {\r\n    return '(' + this[0] + ', ' + this[2] + ')\\n' + '(' + this[1] + ', ' + this[3] + ')';\r\n};\r\nexport default Matrix2;\r\n","import WebGLConstants from './WebGLConstants.js';\r\n\r\n/**\r\n * The type of a geometric primitive, i.e., points, lines, and triangles.\r\n *\r\n * @enum {Number}\r\n */\r\nvar PrimitiveType = {\r\n    /**\r\n     * Points primitive where each vertex (or index) is a separate point.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    POINTS: WebGLConstants.POINTS,\r\n\r\n    /**\r\n     * Lines primitive where each two vertices (or indices) is a line segment.  Line segments are not necessarily connected.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    LINES: WebGLConstants.LINES,\r\n\r\n    /**\r\n     * Line loop primitive where each vertex (or index) after the first connects a line to\r\n     * the previous vertex, and the last vertex implicitly connects to the first.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    LINE_LOOP: WebGLConstants.LINE_LOOP,\r\n\r\n    /**\r\n     * Line strip primitive where each vertex (or index) after the first connects a line to the previous vertex.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    LINE_STRIP: WebGLConstants.LINE_STRIP,\r\n\r\n    /**\r\n     * Triangles primitive where each three vertices (or indices) is a triangle.  Triangles do not necessarily share edges.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    TRIANGLES: WebGLConstants.TRIANGLES,\r\n\r\n    /**\r\n     * Triangle strip primitive where each vertex (or index) after the first two connect to\r\n     * the previous two vertices forming a triangle.  For example, this can be used to model a wall.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    TRIANGLE_STRIP: WebGLConstants.TRIANGLE_STRIP,\r\n\r\n    /**\r\n     * Triangle fan primitive where each vertex (or index) after the first two connect to\r\n     * the previous vertex and the first vertex forming a triangle.  For example, this can be used\r\n     * to model a cone or circle.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    TRIANGLE_FAN: WebGLConstants.TRIANGLE_FAN\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitiveType.validate = function (primitiveType) {\r\n    return (\r\n        primitiveType === PrimitiveType.POINTS ||\r\n        primitiveType === PrimitiveType.LINES ||\r\n        primitiveType === PrimitiveType.LINE_LOOP ||\r\n        primitiveType === PrimitiveType.LINE_STRIP ||\r\n        primitiveType === PrimitiveType.TRIANGLES ||\r\n        primitiveType === PrimitiveType.TRIANGLE_STRIP ||\r\n        primitiveType === PrimitiveType.TRIANGLE_FAN\r\n    );\r\n};\r\n\r\nexport default Object.freeze(PrimitiveType);\r\n","import Cartesian2 from './Cartesian2.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Cartographic from './Cartographic.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport GeometryType from './GeometryType.js';\r\nimport Matrix2 from './Matrix2.js';\r\nimport Matrix3 from './Matrix3.js';\r\nimport Matrix4 from './Matrix4.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\nimport Quaternion from './Quaternion.js';\r\nimport Rectangle from './Rectangle.js';\r\nimport Transforms from './Transforms.js';\r\n\r\n/**\r\n * A geometry representation with attributes forming vertices and optional index data\r\n * defining primitives.  Geometries and an {@link Appearance}, which describes the shading,\r\n * can be assigned to a {@link Primitive} for visualization.  A <code>Primitive</code> can\r\n * be created from many heterogeneous - in many cases - geometries for performance.\r\n * <p>\r\n * Geometries can be transformed and optimized using functions in {@link GeometryPipeline}.\r\n * </p>\r\n *\r\n * @alias Geometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {GeometryAttributes} options.attributes Attributes, which make up the geometry's vertices.\r\n * @param {PrimitiveType} [options.primitiveType=PrimitiveType.TRIANGLES] The type of primitives in the geometry.\r\n * @param {Uint16Array|Uint32Array} [options.indices] Optional index data that determines the primitives in the geometry.\r\n * @param {BoundingSphere} [options.boundingSphere] An optional bounding sphere that fully enclosed the geometry.\r\n *\r\n * @see PolygonGeometry\r\n * @see RectangleGeometry\r\n * @see EllipseGeometry\r\n * @see CircleGeometry\r\n * @see WallGeometry\r\n * @see SimplePolylineGeometry\r\n * @see BoxGeometry\r\n * @see EllipsoidGeometry\r\n *\r\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Geometry%20and%20Appearances.html|Geometry and Appearances Demo}\r\n *\r\n * @example\r\n * // Create geometry with a position attribute and indexed lines.\r\n * var positions = new Float64Array([\r\n *   0.0, 0.0, 0.0,\r\n *   7500000.0, 0.0, 0.0,\r\n *   0.0, 7500000.0, 0.0\r\n * ]);\r\n *\r\n * var geometry = new Cesium.Geometry({\r\n *   attributes : {\r\n *     position : new Cesium.GeometryAttribute({\r\n *       componentDatatype : Cesium.ComponentDatatype.DOUBLE,\r\n *       componentsPerAttribute : 3,\r\n *       values : positions\r\n *     })\r\n *   },\r\n *   indices : new Uint16Array([0, 1, 1, 2, 2, 0]),\r\n *   primitiveType : Cesium.PrimitiveType.LINES,\r\n *   boundingSphere : Cesium.BoundingSphere.fromVertices(positions)\r\n * });\r\n */\r\nfunction Geometry(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('options.attributes', options.attributes);\r\n    //>>includeEnd('debug');\r\n\r\n    /**\r\n     * Attributes, which make up the geometry's vertices.  Each property in this object corresponds to a\r\n     * {@link GeometryAttribute} containing the attribute's data.\r\n     * <p>\r\n     * Attributes are always stored non-interleaved in a Geometry.\r\n     * </p>\r\n     * <p>\r\n     * There are reserved attribute names with well-known semantics.  The following attributes\r\n     * are created by a Geometry (depending on the provided {@link VertexFormat}.\r\n     * <ul>\r\n     *    <li><code>position</code> - 3D vertex position.  64-bit floating-point (for precision).  3 components per attribute.  See {@link VertexFormat#position}.</li>\r\n     *    <li><code>normal</code> - Normal (normalized), commonly used for lighting.  32-bit floating-point.  3 components per attribute.  See {@link VertexFormat#normal}.</li>\r\n     *    <li><code>st</code> - 2D texture coordinate.  32-bit floating-point.  2 components per attribute.  See {@link VertexFormat#st}.</li>\r\n     *    <li><code>bitangent</code> - Bitangent (normalized), used for tangent-space effects like bump mapping.  32-bit floating-point.  3 components per attribute.  See {@link VertexFormat#bitangent}.</li>\r\n     *    <li><code>tangent</code> - Tangent (normalized), used for tangent-space effects like bump mapping.  32-bit floating-point.  3 components per attribute.  See {@link VertexFormat#tangent}.</li>\r\n     * </ul>\r\n     * </p>\r\n     * <p>\r\n     * The following attribute names are generally not created by a Geometry, but are added\r\n     * to a Geometry by a {@link Primitive} or {@link GeometryPipeline} functions to prepare\r\n     * the geometry for rendering.\r\n     * <ul>\r\n     *    <li><code>position3DHigh</code> - High 32 bits for encoded 64-bit position computed with {@link GeometryPipeline.encodeAttribute}.  32-bit floating-point.  4 components per attribute.</li>\r\n     *    <li><code>position3DLow</code> - Low 32 bits for encoded 64-bit position computed with {@link GeometryPipeline.encodeAttribute}.  32-bit floating-point.  4 components per attribute.</li>\r\n     *    <li><code>position3DHigh</code> - High 32 bits for encoded 64-bit 2D (Columbus view) position computed with {@link GeometryPipeline.encodeAttribute}.  32-bit floating-point.  4 components per attribute.</li>\r\n     *    <li><code>position2DLow</code> - Low 32 bits for encoded 64-bit 2D (Columbus view) position computed with {@link GeometryPipeline.encodeAttribute}.  32-bit floating-point.  4 components per attribute.</li>\r\n     *    <li><code>color</code> - RGBA color (normalized) usually from {@link GeometryInstance#color}.  32-bit floating-point.  4 components per attribute.</li>\r\n     *    <li><code>pickColor</code> - RGBA color used for picking.  32-bit floating-point.  4 components per attribute.</li>\r\n     * </ul>\r\n     * </p>\r\n     *\r\n     * @type GeometryAttributes\r\n     *\r\n     * @default undefined\r\n     *\r\n     *\r\n     * @example\r\n     * geometry.attributes.position = new Cesium.GeometryAttribute({\r\n     *   componentDatatype : Cesium.ComponentDatatype.FLOAT,\r\n     *   componentsPerAttribute : 3,\r\n     *   values : new Float32Array(0)\r\n     * });\r\n     *\r\n     * @see GeometryAttribute\r\n     * @see VertexFormat\r\n     */\r\n    this.attributes = options.attributes;\r\n\r\n    /**\r\n     * Optional index data that - along with {@link Geometry#primitiveType} -\r\n     * determines the primitives in the geometry.\r\n     *\r\n     * @type Array\r\n     *\r\n     * @default undefined\r\n     */\r\n    this.indices = options.indices;\r\n\r\n    /**\r\n     * The type of primitives in the geometry.  This is most often {@link PrimitiveType.TRIANGLES},\r\n     * but can varying based on the specific geometry.\r\n     *\r\n     * @type PrimitiveType\r\n     *\r\n     * @default undefined\r\n     */\r\n    this.primitiveType = defaultValue(options.primitiveType, PrimitiveType.TRIANGLES);\r\n\r\n    /**\r\n     * An optional bounding sphere that fully encloses the geometry.  This is\r\n     * commonly used for culling.\r\n     *\r\n     * @type BoundingSphere\r\n     *\r\n     * @default undefined\r\n     */\r\n    this.boundingSphere = options.boundingSphere;\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.geometryType = defaultValue(options.geometryType, GeometryType.NONE);\r\n\r\n    /**\r\n     * @private\r\n     */\r\n    this.boundingSphereCV = options.boundingSphereCV;\r\n\r\n    /**\r\n     * Used for computing the bounding sphere for geometry using the applyOffset vertex attribute\r\n     * @private\r\n     */\r\n    this.offsetAttribute = options.offsetAttribute;\r\n}\r\n\r\n/**\r\n * Computes the number of vertices in a geometry.  The runtime is linear with\r\n * respect to the number of attributes in a vertex, not the number of vertices.\r\n *\r\n * @param {Geometry} geometry The geometry.\r\n * @returns {Number} The number of vertices in the geometry.\r\n *\r\n * @example\r\n * var numVertices = Cesium.Geometry.computeNumberOfVertices(geometry);\r\n */\r\nGeometry.computeNumberOfVertices = function (geometry) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('geometry', geometry);\r\n    //>>includeEnd('debug');\r\n\r\n    var numberOfVertices = -1;\r\n    for (var property in geometry.attributes) {\r\n        if (geometry.attributes.hasOwnProperty(property) && defined(geometry.attributes[property]) && defined(geometry.attributes[property].values)) {\r\n            var attribute = geometry.attributes[property];\r\n            var num = attribute.values.length / attribute.componentsPerAttribute;\r\n            //>>includeStart('debug', pragmas.debug);\r\n            if (numberOfVertices !== num && numberOfVertices !== -1) {\r\n                throw new DeveloperError('All attribute lists must have the same number of attributes.');\r\n            }\r\n            //>>includeEnd('debug');\r\n            numberOfVertices = num;\r\n        }\r\n    }\r\n\r\n    return numberOfVertices;\r\n};\r\n\r\nvar rectangleCenterScratch = new Cartographic();\r\nvar enuCenterScratch = new Cartesian3();\r\nvar fixedFrameToEnuScratch = new Matrix4();\r\nvar boundingRectanglePointsCartographicScratch = [new Cartographic(), new Cartographic(), new Cartographic()];\r\nvar boundingRectanglePointsEnuScratch = [new Cartesian2(), new Cartesian2(), new Cartesian2()];\r\nvar points2DScratch = [new Cartesian2(), new Cartesian2(), new Cartesian2()];\r\nvar pointEnuScratch = new Cartesian3();\r\nvar enuRotationScratch = new Quaternion();\r\nvar enuRotationMatrixScratch = new Matrix4();\r\nvar rotation2DScratch = new Matrix2();\r\n\r\n/**\r\n * For remapping texture coordinates when rendering GroundPrimitives with materials.\r\n * GroundPrimitive texture coordinates are computed to align with the cartographic coordinate system on the globe.\r\n * However, EllipseGeometry, RectangleGeometry, and PolygonGeometry all bake rotations to per-vertex texture coordinates\r\n * using different strategies.\r\n *\r\n * This method is used by EllipseGeometry and PolygonGeometry to approximate the same visual effect.\r\n * We encapsulate rotation and scale by computing a \"transformed\" texture coordinate system and computing\r\n * a set of reference points from which \"cartographic\" texture coordinates can be remapped to the \"transformed\"\r\n * system using distances to lines in 2D.\r\n *\r\n * This approximation becomes less accurate as the covered area increases, especially for GroundPrimitives near the poles,\r\n * but is generally reasonable for polygons and ellipses around the size of USA states.\r\n *\r\n * RectangleGeometry has its own version of this method that computes remapping coordinates using cartographic space\r\n * as an intermediary instead of local ENU, which is more accurate for large-area rectangles.\r\n *\r\n * @param {Cartesian3[]} positions Array of positions outlining the geometry\r\n * @param {Number} stRotation Texture coordinate rotation.\r\n * @param {Ellipsoid} ellipsoid Ellipsoid for projecting and generating local vectors.\r\n * @param {Rectangle} boundingRectangle Bounding rectangle around the positions.\r\n * @returns {Number[]} An array of 6 numbers specifying [minimum point, u extent, v extent] as points in the \"cartographic\" system.\r\n * @private\r\n */\r\nGeometry._textureCoordinateRotationPoints = function (positions, stRotation, ellipsoid, boundingRectangle) {\r\n    var i;\r\n\r\n    // Create a local east-north-up coordinate system centered on the polygon's bounding rectangle.\r\n    // Project the southwest, northwest, and southeast corners of the bounding rectangle into the plane of ENU as 2D points.\r\n    // These are the equivalents of (0,0), (0,1), and (1,0) in the texture coordiante system computed in ShadowVolumeAppearanceFS,\r\n    // aka \"ENU texture space.\"\r\n    var rectangleCenter = Rectangle.center(boundingRectangle, rectangleCenterScratch);\r\n    var enuCenter = Cartographic.toCartesian(rectangleCenter, ellipsoid, enuCenterScratch);\r\n    var enuToFixedFrame = Transforms.eastNorthUpToFixedFrame(enuCenter, ellipsoid, fixedFrameToEnuScratch);\r\n    var fixedFrameToEnu = Matrix4.inverse(enuToFixedFrame, fixedFrameToEnuScratch);\r\n\r\n    var boundingPointsEnu = boundingRectanglePointsEnuScratch;\r\n    var boundingPointsCarto = boundingRectanglePointsCartographicScratch;\r\n\r\n    boundingPointsCarto[0].longitude = boundingRectangle.west;\r\n    boundingPointsCarto[0].latitude = boundingRectangle.south;\r\n\r\n    boundingPointsCarto[1].longitude = boundingRectangle.west;\r\n    boundingPointsCarto[1].latitude = boundingRectangle.north;\r\n\r\n    boundingPointsCarto[2].longitude = boundingRectangle.east;\r\n    boundingPointsCarto[2].latitude = boundingRectangle.south;\r\n\r\n    var posEnu = pointEnuScratch;\r\n\r\n    for (i = 0; i < 3; i++) {\r\n        Cartographic.toCartesian(boundingPointsCarto[i], ellipsoid, posEnu);\r\n        posEnu = Matrix4.multiplyByPointAsVector(fixedFrameToEnu, posEnu, posEnu);\r\n        boundingPointsEnu[i].x = posEnu.x;\r\n        boundingPointsEnu[i].y = posEnu.y;\r\n    }\r\n\r\n    // Rotate each point in the polygon around the up vector in the ENU by -stRotation and project into ENU as 2D.\r\n    // Compute the bounding box of these rotated points in the 2D ENU plane.\r\n    // Rotate the corners back by stRotation, then compute their equivalents in the ENU texture space using the corners computed earlier.\r\n    var rotation = Quaternion.fromAxisAngle(Cartesian3.UNIT_Z, -stRotation, enuRotationScratch);\r\n    var textureMatrix = Matrix3.fromQuaternion(rotation, enuRotationMatrixScratch);\r\n\r\n    var positionsLength = positions.length;\r\n    var enuMinX = Number.POSITIVE_INFINITY;\r\n    var enuMinY = Number.POSITIVE_INFINITY;\r\n    var enuMaxX = Number.NEGATIVE_INFINITY;\r\n    var enuMaxY = Number.NEGATIVE_INFINITY;\r\n    for (i = 0; i < positionsLength; i++) {\r\n        posEnu = Matrix4.multiplyByPointAsVector(fixedFrameToEnu, positions[i], posEnu);\r\n        posEnu = Matrix3.multiplyByVector(textureMatrix, posEnu, posEnu);\r\n\r\n        enuMinX = Math.min(enuMinX, posEnu.x);\r\n        enuMinY = Math.min(enuMinY, posEnu.y);\r\n        enuMaxX = Math.max(enuMaxX, posEnu.x);\r\n        enuMaxY = Math.max(enuMaxY, posEnu.y);\r\n    }\r\n\r\n    var toDesiredInComputed = Matrix2.fromRotation(stRotation, rotation2DScratch);\r\n\r\n    var points2D = points2DScratch;\r\n    points2D[0].x = enuMinX;\r\n    points2D[0].y = enuMinY;\r\n\r\n    points2D[1].x = enuMinX;\r\n    points2D[1].y = enuMaxY;\r\n\r\n    points2D[2].x = enuMaxX;\r\n    points2D[2].y = enuMinY;\r\n\r\n    var boundingEnuMin = boundingPointsEnu[0];\r\n    var boundingPointsWidth = boundingPointsEnu[2].x - boundingEnuMin.x;\r\n    var boundingPointsHeight = boundingPointsEnu[1].y - boundingEnuMin.y;\r\n\r\n    for (i = 0; i < 3; i++) {\r\n        var point2D = points2D[i];\r\n        // rotate back\r\n        Matrix2.multiplyByVector(toDesiredInComputed, point2D, point2D);\r\n\r\n        // Convert point into east-north texture coordinate space\r\n        point2D.x = (point2D.x - boundingEnuMin.x) / boundingPointsWidth;\r\n        point2D.y = (point2D.y - boundingEnuMin.y) / boundingPointsHeight;\r\n    }\r\n\r\n    var minXYCorner = points2D[0];\r\n    var maxYCorner = points2D[1];\r\n    var maxXCorner = points2D[2];\r\n    var result = new Array(6);\r\n    Cartesian2.pack(minXYCorner, result);\r\n    Cartesian2.pack(maxYCorner, result, 2);\r\n    Cartesian2.pack(maxXCorner, result, 4);\r\n\r\n    return result;\r\n};\r\nexport default Geometry;\r\n","import defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\n\r\n/**\r\n * Values and type information for geometry attributes.  A {@link Geometry}\r\n * generally contains one or more attributes.  All attributes together form\r\n * the geometry's vertices.\r\n *\r\n * @alias GeometryAttribute\r\n * @constructor\r\n *\r\n * @param {Object} [options] Object with the following properties:\r\n * @param {ComponentDatatype} [options.componentDatatype] The datatype of each component in the attribute, e.g., individual elements in values.\r\n * @param {Number} [options.componentsPerAttribute] A number between 1 and 4 that defines the number of components in an attributes.\r\n * @param {Boolean} [options.normalize=false] When <code>true</code> and <code>componentDatatype</code> is an integer format, indicate that the components should be mapped to the range [0, 1] (unsigned) or [-1, 1] (signed) when they are accessed as floating-point for rendering.\r\n * @param {number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array} [options.values] The values for the attributes stored in a typed array.\r\n *\r\n * @exception {DeveloperError} options.componentsPerAttribute must be between 1 and 4.\r\n *\r\n *\r\n * @example\r\n * var geometry = new Cesium.Geometry({\r\n *   attributes : {\r\n *     position : new Cesium.GeometryAttribute({\r\n *       componentDatatype : Cesium.ComponentDatatype.FLOAT,\r\n *       componentsPerAttribute : 3,\r\n *       values : new Float32Array([\r\n *         0.0, 0.0, 0.0,\r\n *         7500000.0, 0.0, 0.0,\r\n *         0.0, 7500000.0, 0.0\r\n *       ])\r\n *     })\r\n *   },\r\n *   primitiveType : Cesium.PrimitiveType.LINE_LOOP\r\n * });\r\n *\r\n * @see Geometry\r\n */\r\nfunction GeometryAttribute(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (!defined(options.componentDatatype)) {\r\n        throw new DeveloperError('options.componentDatatype is required.');\r\n    }\r\n    if (!defined(options.componentsPerAttribute)) {\r\n        throw new DeveloperError('options.componentsPerAttribute is required.');\r\n    }\r\n    if (options.componentsPerAttribute < 1 || options.componentsPerAttribute > 4) {\r\n        throw new DeveloperError('options.componentsPerAttribute must be between 1 and 4.');\r\n    }\r\n    if (!defined(options.values)) {\r\n        throw new DeveloperError('options.values is required.');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    /**\r\n     * The datatype of each component in the attribute, e.g., individual elements in\r\n     * {@link GeometryAttribute#values}.\r\n     *\r\n     * @type ComponentDatatype\r\n     *\r\n     * @default undefined\r\n     */\r\n    this.componentDatatype = options.componentDatatype;\r\n\r\n    /**\r\n     * A number between 1 and 4 that defines the number of components in an attributes.\r\n     * For example, a position attribute with x, y, and z components would have 3 as\r\n     * shown in the code example.\r\n     *\r\n     * @type Number\r\n     *\r\n     * @default undefined\r\n     *\r\n     * @example\r\n     * attribute.componentDatatype = Cesium.ComponentDatatype.FLOAT;\r\n     * attribute.componentsPerAttribute = 3;\r\n     * attribute.values = new Float32Array([\r\n     *   0.0, 0.0, 0.0,\r\n     *   7500000.0, 0.0, 0.0,\r\n     *   0.0, 7500000.0, 0.0\r\n     * ]);\r\n     */\r\n    this.componentsPerAttribute = options.componentsPerAttribute;\r\n\r\n    /**\r\n     * When <code>true</code> and <code>componentDatatype</code> is an integer format,\r\n     * indicate that the components should be mapped to the range [0, 1] (unsigned)\r\n     * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\r\n     * <p>\r\n     * This is commonly used when storing colors using {@link ComponentDatatype.UNSIGNED_BYTE}.\r\n     * </p>\r\n     *\r\n     * @type Boolean\r\n     *\r\n     * @default false\r\n     *\r\n     * @example\r\n     * attribute.componentDatatype = Cesium.ComponentDatatype.UNSIGNED_BYTE;\r\n     * attribute.componentsPerAttribute = 4;\r\n     * attribute.normalize = true;\r\n     * attribute.values = new Uint8Array([\r\n     *   Cesium.Color.floatToByte(color.red),\r\n     *   Cesium.Color.floatToByte(color.green),\r\n     *   Cesium.Color.floatToByte(color.blue),\r\n     *   Cesium.Color.floatToByte(color.alpha)\r\n     * ]);\r\n     */\r\n    this.normalize = defaultValue(options.normalize, false);\r\n\r\n    /**\r\n     * The values for the attributes stored in a typed array.  In the code example,\r\n     * every three elements in <code>values</code> defines one attributes since\r\n     * <code>componentsPerAttribute</code> is 3.\r\n     *\r\n     * @type {number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Float32Array|Float64Array}\r\n     *\r\n     * @default undefined\r\n     *\r\n     * @example\r\n     * attribute.componentDatatype = Cesium.ComponentDatatype.FLOAT;\r\n     * attribute.componentsPerAttribute = 3;\r\n     * attribute.values = new Float32Array([\r\n     *   0.0, 0.0, 0.0,\r\n     *   7500000.0, 0.0, 0.0,\r\n     *   0.0, 7500000.0, 0.0\r\n     * ]);\r\n     */\r\n    this.values = options.values;\r\n}\r\nexport default GeometryAttribute;\r\n"],"names":["defaultValue","Check","defined","Cartesian2","WebGLConstants","PrimitiveType","GeometryType","DeveloperError","Cartographic","Cartesian3","Matrix4","Quaternion","Rectangle","Transforms","Matrix3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAA;IACA;IACA;IACA,IAAI,YAAY,GAAG;IACnB,IAAI,IAAI,EAAE,CAAC;IACX,IAAI,SAAS,EAAE,CAAC;IAChB,IAAI,KAAK,EAAE,CAAC;IACZ,IAAI,SAAS,EAAE,CAAC;IAChB,CAAC,CAAC;AACF,yBAAe,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC;;ICJ1C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,OAAO,CAAC,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE;IACrE,IAAI,IAAI,CAAC,CAAC,CAAC,GAAGA,iBAAY,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,IAAI,CAAC,CAAC,CAAC,GAAGA,iBAAY,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,IAAI,CAAC,CAAC,CAAC,GAAGA,iBAAY,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAC7C,IAAI,IAAI,CAAC,CAAC,CAAC,GAAGA,iBAAY,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC;IAC7C,CAAC;AACD;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC;AACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,IAAI,GAAG,UAAU,KAAK,EAAE,KAAK,EAAE,aAAa,EAAE;IACtD;IACA,IAAIC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,IAAIA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC;AACA;IACA,IAAI,aAAa,GAAGD,iBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACtC;IACA,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;IACzD;IACA,IAAIC,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC;AACA;IACA,IAAI,aAAa,GAAGD,iBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,IAAI,CAACE,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;IAC/B,KAAK;AACL;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IACvC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IACvC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IACvC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,EAAE,CAAC,CAAC;IACvC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IAC1C,IAAI,IAAI,CAACA,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;IACL,IAAI,IAAI,CAACA,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,KAAK;IACL,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE,aAAa,EAAE,MAAM,EAAE;IAC5D;IACA,IAAID,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC;AACA;IACA,IAAI,aAAa,GAAGD,iBAAY,CAAC,aAAa,EAAE,CAAC,CAAC,CAAC;AACnD;IACA,IAAI,IAAI,CAACE,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,MAAM,GAAG,IAAI,OAAO,EAAE,CAAC;IAC/B,KAAK;AACL;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;IACrC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;IACzC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;IACzC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;IACzC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,oBAAoB,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IACzD;IACA,IAAID,WAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpC;AACA;IACA,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,iBAAiB,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IACtD;IACA,IAAIA,WAAK,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACpC;AACA;IACA,IAAI,IAAI,CAACC,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACvE,KAAK;IACL,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE;IAC7C;IACA,IAAID,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC;AACA;IACA,IAAI,IAAI,CAACC,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACvD,KAAK;AACL;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACxB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACxB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,gBAAgB,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE;IACpD;IACA,IAAID,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC;AACA;IACA,IAAI,IAAI,CAACC,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;IACnD,KAAK;AACL;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACpB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACtB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,YAAY,GAAG,UAAU,KAAK,EAAE,MAAM,EAAE;IAChD;IACA,IAAID,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC;AACA;IACA,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IACnC,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACnC;IACA,IAAI,IAAI,CAACC,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACpE,KAAK;IACL,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzB,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC;IACzB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,OAAO,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IAC5C;IACA,IAAID,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,IAAI,CAACC,YAAO,CAAC,MAAM,CAAC,EAAE;IAC1B,QAAQ,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5D,KAAK;IACL,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC1B,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,eAAe,GAAG,UAAU,MAAM,EAAE,GAAG,EAAE;IACjD;IACA,IAAID,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC3D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AACxD;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IACjE,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC,CAAC;IAC9D;AACA;IACA,IAAI,OAAO,MAAM,GAAG,CAAC,GAAG,GAAG,CAAC;IAC5B,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IACrD;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC1C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;IAC/B,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;IAC/B,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AACnC;IACA,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE;IAChE;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC1C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAChD,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI,IAAI,UAAU,GAAG,KAAK,GAAG,CAAC,CAAC;IAC/B,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IACrC,IAAI,MAAM,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IACzC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IAClD;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC1C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IAC1B,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;AAC9B;IACA,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE;IAC7D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;AAC1C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/D,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAChD,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC3C,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IAChC,IAAI,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IACpC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA,IAAI,aAAa,GAAG,IAAIE,qBAAU,EAAE,CAAC;AACrC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IAC7C;IACA,IAAIF,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,GAAGE,qBAAU,CAAC,SAAS,CAACA,qBAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;IAClG,IAAI,MAAM,CAAC,CAAC,GAAGA,qBAAU,CAAC,SAAS,CAACA,qBAAU,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;IAClG,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA,IAAI,YAAY,GAAG,IAAIA,qBAAU,EAAE,CAAC;AACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,eAAe,GAAG,UAAU,MAAM,EAAE;IAC5C,IAAI,OAAO,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC;IAC3C,IAAI,OAAOA,qBAAU,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;IACrD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAClD;IACA,IAAIF,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAC9D,IAAI,IAAI,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9D;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,GAAG,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAC7C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,QAAQ,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE;IAClD;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IAChE;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAChD,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;IAC9D,IAAI,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;AAC9D;IACA,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IACjB,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,gBAAgB,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE;IAC7D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IACnC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC;IACnC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,eAAe,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IAC3D;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IACxC,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;IACpC,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,MAAM,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IAC3C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3B,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IAC9C;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,IAAI,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,IAAI,IAAI,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,IAAI,IAAI,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,IAAI,IAAI,WAAW,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAChC;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC;IAC5B,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,GAAG,GAAG,UAAU,MAAM,EAAE,MAAM,EAAE;IACxC;IACA,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C,IAAIA,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC1C;AACA;IACA,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,IAAI,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC;IACA,IAAI,OAAO,MAAM,CAAC;IAClB,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,MAAM,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE;IACxC,IAAI,OAAO,IAAI,KAAK,KAAK,KAAKC,YAAO,CAAC,IAAI,CAAC,IAAIA,YAAO,CAAC,KAAK,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC/J,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,OAAO,CAAC,WAAW,GAAG,UAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE;IACvD,IAAI,OAAO,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IAChJ,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,aAAa,GAAG,UAAU,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;IACxD,IAAI,OAAO,GAAGF,iBAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;IACvC,IAAI;IACJ,QAAQ,IAAI,KAAK,KAAK;IACtB,SAASE,YAAO,CAAC,IAAI,CAAC;IACtB,YAAYA,YAAO,CAAC,KAAK,CAAC;IAC1B,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO;IACnD,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO;IACnD,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO;IACnD,YAAY,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;IACpD,MAAM;IACN,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAClE;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;AAC9D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;AACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;AACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;AACxB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC;AACxB;IACA,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAS,EAAE;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,EAAE;IACZ,QAAQ,GAAG,EAAE,YAAY;IACzB,YAAY,OAAO,OAAO,CAAC,YAAY,CAAC;IACxC,SAAS;IACT,KAAK;IACL,CAAC,CAAC,CAAC;AACH;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,UAAU,MAAM,EAAE;IAC5C,IAAI,OAAO,OAAO,CAAC,KAAK,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IACvC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE;IAC5C,IAAI,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,KAAK,EAAE,OAAO,EAAE;IAC5D,IAAI,OAAO,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,SAAS,CAAC,QAAQ,GAAG,YAAY;IACzC,IAAI,OAAO,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;IACzF,CAAC;;IC70BD;IACA;IACA;IACA;IACA;IACA,IAAI,aAAa,GAAG;IACpB;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,EAAEE,6BAAc,CAAC,MAAM;AACjC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,KAAK,EAAEA,6BAAc,CAAC,KAAK;AAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,EAAEA,6BAAc,CAAC,SAAS;AACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,UAAU,EAAEA,6BAAc,CAAC,UAAU;AACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,SAAS,EAAEA,6BAAc,CAAC,SAAS;AACvC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,cAAc,EAAEA,6BAAc,CAAC,cAAc;AACjD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,YAAY,EAAEA,6BAAc,CAAC,YAAY;IAC7C,CAAC,CAAC;AACF;IACA;IACA;IACA;IACA,aAAa,CAAC,QAAQ,GAAG,UAAU,aAAa,EAAE;IAClD,IAAI;IACJ,QAAQ,aAAa,KAAK,aAAa,CAAC,MAAM;IAC9C,QAAQ,aAAa,KAAK,aAAa,CAAC,KAAK;IAC7C,QAAQ,aAAa,KAAK,aAAa,CAAC,SAAS;IACjD,QAAQ,aAAa,KAAK,aAAa,CAAC,UAAU;IAClD,QAAQ,aAAa,KAAK,aAAa,CAAC,SAAS;IACjD,QAAQ,aAAa,KAAK,aAAa,CAAC,cAAc;IACtD,QAAQ,aAAa,KAAK,aAAa,CAAC,YAAY;IACpD,MAAM;IACN,CAAC,CAAC;AACF;AACA,0BAAe,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC;;ICpE3C;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,QAAQ,CAAC,OAAO,EAAE;IAC3B,IAAI,OAAO,GAAGJ,iBAAY,CAAC,OAAO,EAAEA,iBAAY,CAAC,YAAY,CAAC,CAAC;AAC/D;IACA;IACA,IAAIC,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,oBAAoB,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC;IAClE;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AACzC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AACnC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,aAAa,GAAGD,iBAAY,CAAC,OAAO,CAAC,aAAa,EAAEK,eAAa,CAAC,SAAS,CAAC,CAAC;AACtF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,CAAC;AACjD;IACA;IACA;IACA;IACA,IAAI,IAAI,CAAC,YAAY,GAAGL,iBAAY,CAAC,OAAO,CAAC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"}