{"version":3,"file":"combine-e8814f60.js","sources":["../../../../Source/Core/combine.js"],"sourcesContent":["import defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\n\r\n/**\r\n * Merges two objects, copying their properties onto a new combined object. When two objects have the same\r\n * property, the value of the property on the first object is used.  If either object is undefined,\r\n * it will be treated as an empty object.\r\n *\r\n * @example\r\n * var object1 = {\r\n *     propOne : 1,\r\n *     propTwo : {\r\n *         value1 : 10\r\n *     }\r\n * }\r\n * var object2 = {\r\n *     propTwo : 2\r\n * }\r\n * var final = Cesium.combine(object1, object2);\r\n *\r\n * // final === {\r\n * //     propOne : 1,\r\n * //     propTwo : {\r\n * //         value1 : 10\r\n * //     }\r\n * // }\r\n *\r\n * @param {Object} [object1] The first object to merge.\r\n * @param {Object} [object2] The second object to merge.\r\n * @param {Boolean} [deep=false] Perform a recursive merge.\r\n * @returns {Object} The combined object containing all properties from both objects.\r\n *\r\n * @function\r\n */\r\nfunction combine(object1, object2, deep) {\r\n    deep = defaultValue(deep, false);\r\n\r\n    var result = {};\r\n\r\n    var object1Defined = defined(object1);\r\n    var object2Defined = defined(object2);\r\n    var property;\r\n    var object1Value;\r\n    var object2Value;\r\n    if (object1Defined) {\r\n        for (property in object1) {\r\n            if (object1.hasOwnProperty(property)) {\r\n                object1Value = object1[property];\r\n                if (object2Defined && deep && typeof object1Value === 'object' && object2.hasOwnProperty(property)) {\r\n                    object2Value = object2[property];\r\n                    if (typeof object2Value === 'object') {\r\n                        result[property] = combine(object1Value, object2Value, deep);\r\n                    } else {\r\n                        result[property] = object1Value;\r\n                    }\r\n                } else {\r\n                    result[property] = object1Value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (object2Defined) {\r\n        for (property in object2) {\r\n            if (object2.hasOwnProperty(property) && !result.hasOwnProperty(property)) {\r\n                object2Value = object2[property];\r\n                result[property] = object2Value;\r\n            }\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport default combine;\r\n"],"names":["defaultValue","defined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAGA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;IACzC,IAAI,IAAI,GAAGA,iBAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACrC;IACA,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;AACpB;IACA,IAAI,IAAI,cAAc,GAAGC,YAAO,CAAC,OAAO,CAAC,CAAC;IAC1C,IAAI,IAAI,cAAc,GAAGA,YAAO,CAAC,OAAO,CAAC,CAAC;IAC1C,IAAI,IAAI,QAAQ,CAAC;IACjB,IAAI,IAAI,YAAY,CAAC;IACrB,IAAI,IAAI,YAAY,CAAC;IACrB,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQ,KAAK,QAAQ,IAAI,OAAO,EAAE;IAClC,YAAY,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;IAClD,gBAAgB,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjD,gBAAgB,IAAI,cAAc,IAAI,IAAI,IAAI,OAAO,YAAY,KAAK,QAAQ,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;IACpH,oBAAoB,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IACrD,oBAAoB,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;IAC1D,wBAAwB,MAAM,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,YAAY,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;IACrF,qBAAqB,MAAM;IAC3B,wBAAwB,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;IACxD,qBAAqB;IACrB,iBAAiB,MAAM;IACvB,oBAAoB,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;IACpD,iBAAiB;IACjB,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,IAAI,cAAc,EAAE;IACxB,QAAQ,KAAK,QAAQ,IAAI,OAAO,EAAE;IAClC,YAAY,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;IACtF,gBAAgB,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;IACjD,gBAAgB,MAAM,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC;IAChD,aAAa;IACb,SAAS;IACT,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB;;;;;;;;"}