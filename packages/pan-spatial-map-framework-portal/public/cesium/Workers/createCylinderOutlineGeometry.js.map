{"version":3,"file":"createCylinderOutlineGeometry.js","sources":["../../../../Source/Core/CylinderOutlineGeometry.js","../../../../Source/WorkersES6/createCylinderOutlineGeometry.js"],"sourcesContent":["import arrayFill from './arrayFill.js';\r\nimport BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian2 from './Cartesian2.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport CylinderGeometryLibrary from './CylinderGeometryLibrary.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport GeometryOffsetAttribute from './GeometryOffsetAttribute.js';\r\nimport IndexDatatype from './IndexDatatype.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\n\r\nvar radiusScratch = new Cartesian2();\r\n\r\n/**\r\n * A description of the outline of a cylinder.\r\n *\r\n * @alias CylinderOutlineGeometry\r\n * @constructor\r\n *\r\n * @param {Object} options Object with the following properties:\r\n * @param {Number} options.length The length of the cylinder.\r\n * @param {Number} options.topRadius The radius of the top of the cylinder.\r\n * @param {Number} options.bottomRadius The radius of the bottom of the cylinder.\r\n * @param {Number} [options.slices=128] The number of edges around the perimeter of the cylinder.\r\n * @param {Number} [options.numberOfVerticalLines=16] Number of lines to draw between the top and bottom surfaces of the cylinder.\r\n *\r\n * @exception {DeveloperError} options.length must be greater than 0.\r\n * @exception {DeveloperError} options.topRadius must be greater than 0.\r\n * @exception {DeveloperError} options.bottomRadius must be greater than 0.\r\n * @exception {DeveloperError} bottomRadius and topRadius cannot both equal 0.\r\n * @exception {DeveloperError} options.slices must be greater than or equal to 3.\r\n *\r\n * @see CylinderOutlineGeometry.createGeometry\r\n *\r\n * @example\r\n * // create cylinder geometry\r\n * var cylinder = new Cesium.CylinderOutlineGeometry({\r\n *     length: 200000,\r\n *     topRadius: 80000,\r\n *     bottomRadius: 200000,\r\n * });\r\n * var geometry = Cesium.CylinderOutlineGeometry.createGeometry(cylinder);\r\n */\r\nfunction CylinderOutlineGeometry(options) {\r\n    options = defaultValue(options, defaultValue.EMPTY_OBJECT);\r\n\r\n    var length = options.length;\r\n    var topRadius = options.topRadius;\r\n    var bottomRadius = options.bottomRadius;\r\n    var slices = defaultValue(options.slices, 128);\r\n    var numberOfVerticalLines = Math.max(defaultValue(options.numberOfVerticalLines, 16), 0);\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number('options.positions', length);\r\n    Check.typeOf.number('options.topRadius', topRadius);\r\n    Check.typeOf.number('options.bottomRadius', bottomRadius);\r\n    Check.typeOf.number.greaterThanOrEquals('options.slices', slices, 3);\r\n    if (defined(options.offsetAttribute) && options.offsetAttribute === GeometryOffsetAttribute.TOP) {\r\n        throw new DeveloperError('GeometryOffsetAttribute.TOP is not a supported options.offsetAttribute for this geometry.');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    this._length = length;\r\n    this._topRadius = topRadius;\r\n    this._bottomRadius = bottomRadius;\r\n    this._slices = slices;\r\n    this._numberOfVerticalLines = numberOfVerticalLines;\r\n    this._offsetAttribute = options.offsetAttribute;\r\n    this._workerName = 'createCylinderOutlineGeometry';\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nCylinderOutlineGeometry.packedLength = 6;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {CylinderOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nCylinderOutlineGeometry.pack = function (value, array, startingIndex) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('value', value);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    array[startingIndex++] = value._length;\r\n    array[startingIndex++] = value._topRadius;\r\n    array[startingIndex++] = value._bottomRadius;\r\n    array[startingIndex++] = value._slices;\r\n    array[startingIndex++] = value._numberOfVerticalLines;\r\n    array[startingIndex] = defaultValue(value._offsetAttribute, -1);\r\n\r\n    return array;\r\n};\r\n\r\nvar scratchOptions = {\r\n    length: undefined,\r\n    topRadius: undefined,\r\n    bottomRadius: undefined,\r\n    slices: undefined,\r\n    numberOfVerticalLines: undefined,\r\n    offsetAttribute: undefined\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {CylinderOutlineGeometry} [result] The object into which to store the result.\r\n * @returns {CylinderOutlineGeometry} The modified result parameter or a new CylinderOutlineGeometry instance if one was not provided.\r\n */\r\nCylinderOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    var length = array[startingIndex++];\r\n    var topRadius = array[startingIndex++];\r\n    var bottomRadius = array[startingIndex++];\r\n    var slices = array[startingIndex++];\r\n    var numberOfVerticalLines = array[startingIndex++];\r\n    var offsetAttribute = array[startingIndex];\r\n\r\n    if (!defined(result)) {\r\n        scratchOptions.length = length;\r\n        scratchOptions.topRadius = topRadius;\r\n        scratchOptions.bottomRadius = bottomRadius;\r\n        scratchOptions.slices = slices;\r\n        scratchOptions.numberOfVerticalLines = numberOfVerticalLines;\r\n        scratchOptions.offsetAttribute = offsetAttribute === -1 ? undefined : offsetAttribute;\r\n        return new CylinderOutlineGeometry(scratchOptions);\r\n    }\r\n\r\n    result._length = length;\r\n    result._topRadius = topRadius;\r\n    result._bottomRadius = bottomRadius;\r\n    result._slices = slices;\r\n    result._numberOfVerticalLines = numberOfVerticalLines;\r\n    result._offsetAttribute = offsetAttribute === -1 ? undefined : offsetAttribute;\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes the geometric representation of an outline of a cylinder, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @param {CylinderOutlineGeometry} cylinderGeometry A description of the cylinder outline.\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nCylinderOutlineGeometry.createGeometry = function (cylinderGeometry) {\r\n    var length = cylinderGeometry._length;\r\n    var topRadius = cylinderGeometry._topRadius;\r\n    var bottomRadius = cylinderGeometry._bottomRadius;\r\n    var slices = cylinderGeometry._slices;\r\n    var numberOfVerticalLines = cylinderGeometry._numberOfVerticalLines;\r\n\r\n    if (length <= 0 || topRadius < 0 || bottomRadius < 0 || (topRadius === 0 && bottomRadius === 0)) {\r\n        return;\r\n    }\r\n\r\n    var numVertices = slices * 2;\r\n\r\n    var positions = CylinderGeometryLibrary.computePositions(length, topRadius, bottomRadius, slices, false);\r\n    var numIndices = slices * 2;\r\n    var numSide;\r\n    if (numberOfVerticalLines > 0) {\r\n        var numSideLines = Math.min(numberOfVerticalLines, slices);\r\n        numSide = Math.round(slices / numSideLines);\r\n        numIndices += numSideLines;\r\n    }\r\n\r\n    var indices = IndexDatatype.createTypedArray(numVertices, numIndices * 2);\r\n    var index = 0;\r\n    var i;\r\n    for (i = 0; i < slices - 1; i++) {\r\n        indices[index++] = i;\r\n        indices[index++] = i + 1;\r\n        indices[index++] = i + slices;\r\n        indices[index++] = i + 1 + slices;\r\n    }\r\n\r\n    indices[index++] = slices - 1;\r\n    indices[index++] = 0;\r\n    indices[index++] = slices + slices - 1;\r\n    indices[index++] = slices;\r\n\r\n    if (numberOfVerticalLines > 0) {\r\n        for (i = 0; i < slices; i += numSide) {\r\n            indices[index++] = i;\r\n            indices[index++] = i + slices;\r\n        }\r\n    }\r\n\r\n    var attributes = new GeometryAttributes();\r\n    attributes.position = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.DOUBLE,\r\n        componentsPerAttribute: 3,\r\n        values: positions\r\n    });\r\n\r\n    radiusScratch.x = length * 0.5;\r\n    radiusScratch.y = Math.max(bottomRadius, topRadius);\r\n\r\n    var boundingSphere = new BoundingSphere(Cartesian3.ZERO, Cartesian2.magnitude(radiusScratch));\r\n\r\n    if (defined(cylinderGeometry._offsetAttribute)) {\r\n        length = positions.length;\r\n        var applyOffset = new Uint8Array(length / 3);\r\n        var offsetValue = cylinderGeometry._offsetAttribute === GeometryOffsetAttribute.NONE ? 0 : 1;\r\n        arrayFill(applyOffset, offsetValue);\r\n        attributes.applyOffset = new GeometryAttribute({\r\n            componentDatatype: ComponentDatatype.UNSIGNED_BYTE,\r\n            componentsPerAttribute: 1,\r\n            values: applyOffset\r\n        });\r\n    }\r\n\r\n    return new Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingSphere: boundingSphere,\r\n        offsetAttribute: cylinderGeometry._offsetAttribute\r\n    });\r\n};\r\nexport default CylinderOutlineGeometry;\r\n","import CylinderOutlineGeometry from '../Core/CylinderOutlineGeometry.js';\r\nimport defined from '../Core/defined.js';\r\n\r\nfunction createCylinderOutlineGeometry(cylinderGeometry, offset) {\r\n    if (defined(offset)) {\r\n        cylinderGeometry = CylinderOutlineGeometry.unpack(cylinderGeometry, offset);\r\n    }\r\n    return CylinderOutlineGeometry.createGeometry(cylinderGeometry);\r\n}\r\nexport default createCylinderOutlineGeometry;\r\n"],"names":["Cartesian2","defaultValue","Check","defined","GeometryOffsetAttribute","DeveloperError","CylinderGeometryLibrary","IndexDatatype","GeometryAttributes","GeometryAttribute","ComponentDatatype","BoundingSphere","Cartesian3","arrayFill","Geometry","PrimitiveType"],"mappings":"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"}