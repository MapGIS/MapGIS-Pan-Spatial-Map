define(["./AttributeCompression-25f42564","./Cartesian2-38b35910","./combine-276652d0","./IndexDatatype-516320ea","./Math-5bbcea10","./createTaskProcessorWorker","./Check-f996273c","./when-ae2e0b60","./WebGLConstants-35626ea2"],function(oa,aa,da,ea,ta,a,e,t,r){"use strict";var ra=32767,o=Math.cos(ta.CesiumMath.toRadians(150)),la=new aa.Cartographic,fa=new aa.Cartesian3;var ca=new aa.Cartographic,ha=new aa.Cartographic;function sa(a){var e=8*a,t=3*e,r=4*e;this.startEllipsoidNormals=new Float32Array(t),this.endEllipsoidNormals=new Float32Array(t),this.startPositionAndHeights=new Float32Array(r),this.startFaceNormalAndVertexCornerIds=new Float32Array(r),this.endPositionAndHeights=new Float32Array(r),this.endFaceNormalAndHalfWidths=new Float32Array(r),this.vertexBatchIds=new Uint16Array(e),this.indices=ea.IndexDatatype.createTypedArray(e,36*a),this.vec3Offset=0,this.vec4Offset=0,this.batchIdOffset=0,this.indexOffset=0,this.volumeStartIndex=0}var i=new aa.Cartesian3,d=new aa.Cartesian3;function H(a,e,t,r,s){var t=aa.Cartesian3.subtract(t,e,d),n=aa.Cartesian3.subtract(e,a,i);return aa.Cartesian3.normalize(t,t),aa.Cartesian3.normalize(n,n),aa.Cartesian3.dot(t,n)<o&&(n=aa.Cartesian3.multiplyByScalar(n,-1,i)),aa.Cartesian3.add(t,n,s),aa.Cartesian3.equals(s,aa.Cartesian3.ZERO)&&(s=aa.Cartesian3.subtract(a,e)),aa.Cartesian3.cross(s,r,s),aa.Cartesian3.cross(r,s,s),aa.Cartesian3.normalize(s,s),s}var O=[0,2,6,0,6,4,0,1,3,0,3,2,0,4,5,0,5,1,5,3,1,5,7,3,7,5,4,7,4,6,7,6,2,7,2,3],P=O.length,D=new aa.Cartesian3,S=new aa.Cartesian3,M=new aa.Cartesian3,U=new aa.Cartesian3,B=new aa.Cartesian3,ua=(sa.prototype.addVolume=function(f,a,e,c,h,u,C,p,t,r){for(var s=aa.Cartesian3.add(a,t,D),n=r.geodeticSurfaceNormal(s,S),s=aa.Cartesian3.add(e,t,D),i=r.geodeticSurfaceNormal(s,U),m=H(f,a,e,n,M),b=H(c,e,a,i,B),A=this.startEllipsoidNormals,w=this.endEllipsoidNormals,g=this.startPositionAndHeights,v=this.startFaceNormalAndVertexCornerIds,y=this.endPositionAndHeights,N=this.endFaceNormalAndHalfWidths,k=this.vertexBatchIds,I=this.batchIdOffset,o=this.vec3Offset,d=this.vec4Offset,l=0;l<8;l++)aa.Cartesian3.pack(n,A,o),aa.Cartesian3.pack(i,w,o),aa.Cartesian3.pack(a,g,d),g[d+3]=h,aa.Cartesian3.pack(e,y,d),y[d+3]=u,aa.Cartesian3.pack(m,v,d),v[d+3]=l,aa.Cartesian3.pack(b,N,d),N[d+3]=C,k[I++]=p,o+=3,d+=4;this.batchIdOffset=I,this.vec3Offset=o,this.vec4Offset=d;var x=this.indices,E=this.volumeStartIndex,F=this.indexOffset;for(l=0;l<P;l++)x[F+l]=O[l]+E;this.volumeStartIndex+=8,this.indexOffset+=P},new aa.Rectangle),Ca=new aa.Ellipsoid,pa=new aa.Cartesian3,na=new aa.Cartesian3,ma=new aa.Cartesian3,ba=new aa.Cartesian3,ia=new aa.Cartesian3;return a(function(a,e){for(var t=new Uint16Array(a.positions),f=new Uint16Array(a.widths),c=new Uint32Array(a.counts),h=new Uint16Array(a.batchIds),u=ua,C=Ca,p=pa,r=new Float64Array(a.packedBuffer),s=0,m=r[s++],b=r[s++],n=(aa.Rectangle.unpack(r,2,u),s+=aa.Rectangle.packedLength,aa.Ellipsoid.unpack(r,s,C),s+=aa.Ellipsoid.packedLength,aa.Cartesian3.unpack(r,s,p),t.length/3),r=t.subarray(0,n),s=t.subarray(n,2*n),A=t.subarray(2*n,3*n),w=(oa.AttributeCompression.zigZagDeltaDecode(r,s,A),r),g=s,v=A,y=c,N=y.length,k=w.length,I=new Uint8Array(k),x=ca,E=ha,F=0,H=0;H<N;H++){for(var O=y[H],P=O,D=1;D<O;D++){var S=F+D,M=S-1;E.longitude=w[S],E.latitude=g[S],x.longitude=w[M],x.latitude=g[M],aa.Cartographic.equals(E,x)&&(P--,I[M]=1)}y[H]=P,F+=O}for(var U=0,B=0;B<k;B++)1!==I[B]&&(w[U]=w[B],g[U]=g[B],v[U]=v[B],U++);for(var R=c.length,T=0,i=0;i<R;i++)T+=c[i]-1;var o=new sa(T),V=function(a,e,t,r,f,c,h){for(var s=a.length,n=new Float64Array(3*s),i=0;i<s;++i){var o=a[i],d=e[i],l=t[i],o=ta.CesiumMath.lerp(r.west,r.east,o/ra),d=ta.CesiumMath.lerp(r.south,r.north,d/ra),l=ta.CesiumMath.lerp(f,c,l/ra),o=aa.Cartographic.fromRadians(o,d,l,la),d=h.cartographicToCartesian(o,fa);aa.Cartesian3.pack(d,n,3*i)}return n}(r,s,A,u,m,b,C),n=r.length,d=new Float32Array(3*n);for(i=0;i<n;++i)d[3*i]=V[3*i]-p.x,d[3*i+1]=V[3*i+1]-p.y,d[3*i+2]=V[3*i+2]-p.z;var l=0,W=0;for(i=0;i<R;i++){for(var z=c[i]-1,q=.5*f[i],L=h[i],_=l,G=0;G<z;G++){var Z,Y,j=aa.Cartesian3.unpack(d,l,ma),J=aa.Cartesian3.unpack(d,l+3,ba),K=A[W],Q=A[W+1],K=ta.CesiumMath.lerp(m,b,K/ra),Q=ta.CesiumMath.lerp(m,b,Q/ra),X=(W++,na),$=ia;0===G?(Y=aa.Cartesian3.unpack(d,Z=_+3*z,na),aa.Cartesian3.equals(Y,j)?aa.Cartesian3.unpack(d,Z-3,X):(Y=aa.Cartesian3.subtract(j,J,na),X=aa.Cartesian3.add(Y,j,na))):aa.Cartesian3.unpack(d,l-3,X),G===z-1?(Z=aa.Cartesian3.unpack(d,_,ia),aa.Cartesian3.equals(Z,J)?aa.Cartesian3.unpack(d,_+3,$):(Y=aa.Cartesian3.subtract(J,j,ia),$=aa.Cartesian3.add(Y,J,ia))):aa.Cartesian3.unpack(d,l+6,$),o.addVolume(X,j,J,$,K,Q,q,L,p,C),l+=3}l+=3,W++}return t=o.indices,e.push(o.startEllipsoidNormals.buffer),e.push(o.endEllipsoidNormals.buffer),e.push(o.startPositionAndHeights.buffer),e.push(o.startFaceNormalAndVertexCornerIds.buffer),e.push(o.endPositionAndHeights.buffer),e.push(o.endFaceNormalAndHalfWidths.buffer),e.push(o.vertexBatchIds.buffer),e.push(t.buffer),s={indexDatatype:2===t.BYTES_PER_ELEMENT?ea.IndexDatatype.UNSIGNED_SHORT:ea.IndexDatatype.UNSIGNED_INT,startEllipsoidNormals:o.startEllipsoidNormals.buffer,endEllipsoidNormals:o.endEllipsoidNormals.buffer,startPositionAndHeights:o.startPositionAndHeights.buffer,startFaceNormalAndVertexCornerIds:o.startFaceNormalAndVertexCornerIds.buffer,endPositionAndHeights:o.endPositionAndHeights.buffer,endFaceNormalAndHalfWidths:o.endFaceNormalAndHalfWidths.buffer,vertexBatchIds:o.vertexBatchIds.buffer,indices:t.buffer},a.keepDecodedPositions&&(u=function(a){for(var e=a.length,t=new Uint32Array(e+1),r=0,s=0;s<e;++s)t[s]=r,r+=a[s];return t[e]=r,t}(c),e.push(V.buffer,u.buffer),s=da.combine(s,{decodedPositions:V.buffer,decodedPositionOffsets:u.buffer})),s})});
