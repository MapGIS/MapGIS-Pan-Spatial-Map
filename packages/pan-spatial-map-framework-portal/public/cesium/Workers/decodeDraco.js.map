{"version":3,"file":"decodeDraco.js","sources":["../../../../Source/WorkersES6/decodeDraco.js"],"sourcesContent":["/* global require */\r\nimport ComponentDatatype from '../Core/ComponentDatatype.js';\r\nimport defined from '../Core/defined.js';\r\nimport IndexDatatype from '../Core/IndexDatatype.js';\r\nimport RuntimeError from '../Core/RuntimeError.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n\r\nvar draco;\r\n\r\nfunction decodeIndexArray(dracoGeometry, dracoDecoder) {\r\n    var numPoints = dracoGeometry.num_points();\r\n    var numFaces = dracoGeometry.num_faces();\r\n    var faceIndices = new draco.DracoInt32Array();\r\n    var numIndices = numFaces * 3;\r\n    var indexArray = IndexDatatype.createTypedArray(numPoints, numIndices);\r\n\r\n    var offset = 0;\r\n    for (var i = 0; i < numFaces; ++i) {\r\n        dracoDecoder.GetFaceFromMesh(dracoGeometry, i, faceIndices);\r\n\r\n        indexArray[offset + 0] = faceIndices.GetValue(0);\r\n        indexArray[offset + 1] = faceIndices.GetValue(1);\r\n        indexArray[offset + 2] = faceIndices.GetValue(2);\r\n        offset += 3;\r\n    }\r\n\r\n    draco.destroy(faceIndices);\r\n\r\n    return {\r\n        typedArray: indexArray,\r\n        numberOfIndices: numIndices\r\n    };\r\n}\r\n\r\nfunction decodeQuantizedDracoTypedArray(dracoGeometry, dracoDecoder, dracoAttribute, quantization, vertexArrayLength) {\r\n    var vertexArray;\r\n    var attributeData;\r\n    if (quantization.quantizationBits <= 8) {\r\n        attributeData = new draco.DracoUInt8Array();\r\n        vertexArray = new Uint8Array(vertexArrayLength);\r\n        dracoDecoder.GetAttributeUInt8ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n    } else {\r\n        attributeData = new draco.DracoUInt16Array();\r\n        vertexArray = new Uint16Array(vertexArrayLength);\r\n        dracoDecoder.GetAttributeUInt16ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n    }\r\n\r\n    for (var i = 0; i < vertexArrayLength; ++i) {\r\n        vertexArray[i] = attributeData.GetValue(i);\r\n    }\r\n\r\n    draco.destroy(attributeData);\r\n    return vertexArray;\r\n}\r\n\r\nfunction decodeDracoTypedArray(dracoGeometry, dracoDecoder, dracoAttribute, vertexArrayLength) {\r\n    var vertexArray;\r\n    var attributeData;\r\n\r\n    // Some attribute types are casted down to 32 bit since Draco only returns 32 bit values\r\n    switch (dracoAttribute.data_type()) {\r\n        case 1:\r\n        case 11: // DT_INT8 or DT_BOOL\r\n            attributeData = new draco.DracoInt8Array();\r\n            vertexArray = new Int8Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeInt8ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n        case 2: // DT_UINT8\r\n            attributeData = new draco.DracoUInt8Array();\r\n            vertexArray = new Uint8Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeUInt8ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n        case 3: // DT_INT16\r\n            attributeData = new draco.DracoInt16Array();\r\n            vertexArray = new Int16Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeInt16ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n        case 4: // DT_UINT16\r\n            attributeData = new draco.DracoUInt16Array();\r\n            vertexArray = new Uint16Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeUInt16ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n        case 5:\r\n        case 7: // DT_INT32 or DT_INT64\r\n            attributeData = new draco.DracoInt32Array();\r\n            vertexArray = new Int32Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeInt32ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n        case 6:\r\n        case 8: // DT_UINT32 or DT_UINT64\r\n            attributeData = new draco.DracoUInt32Array();\r\n            vertexArray = new Uint32Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeUInt32ForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n        case 9:\r\n        case 10: // DT_FLOAT32 or DT_FLOAT64\r\n            attributeData = new draco.DracoFloat32Array();\r\n            vertexArray = new Float32Array(vertexArrayLength);\r\n            dracoDecoder.GetAttributeFloatForAllPoints(dracoGeometry, dracoAttribute, attributeData);\r\n            break;\r\n    }\r\n\r\n    for (var i = 0; i < vertexArrayLength; ++i) {\r\n        vertexArray[i] = attributeData.GetValue(i);\r\n    }\r\n\r\n    draco.destroy(attributeData);\r\n    return vertexArray;\r\n}\r\n\r\nfunction decodeAttribute(dracoGeometry, dracoDecoder, dracoAttribute) {\r\n    var numPoints = dracoGeometry.num_points();\r\n    var numComponents = dracoAttribute.num_components();\r\n\r\n    var quantization;\r\n    var transform = new draco.AttributeQuantizationTransform();\r\n    if (transform.InitFromAttribute(dracoAttribute)) {\r\n        var minValues = new Array(numComponents);\r\n        for (var i = 0; i < numComponents; ++i) {\r\n            minValues[i] = transform.min_value(i);\r\n        }\r\n        quantization = {\r\n            quantizationBits: transform.quantization_bits(),\r\n            minValues: minValues,\r\n            range: transform.range(),\r\n            octEncoded: false\r\n        };\r\n    }\r\n    draco.destroy(transform);\r\n\r\n    transform = new draco.AttributeOctahedronTransform();\r\n    if (transform.InitFromAttribute(dracoAttribute)) {\r\n        quantization = {\r\n            quantizationBits: transform.quantization_bits(),\r\n            octEncoded: true\r\n        };\r\n    }\r\n    draco.destroy(transform);\r\n\r\n    var vertexArrayLength = numPoints * numComponents;\r\n    var vertexArray;\r\n    if (defined(quantization)) {\r\n        vertexArray = decodeQuantizedDracoTypedArray(dracoGeometry, dracoDecoder, dracoAttribute, quantization, vertexArrayLength);\r\n    } else {\r\n        vertexArray = decodeDracoTypedArray(dracoGeometry, dracoDecoder, dracoAttribute, vertexArrayLength);\r\n    }\r\n\r\n    var componentDatatype = ComponentDatatype.fromTypedArray(vertexArray);\r\n\r\n    return {\r\n        array: vertexArray,\r\n        data: {\r\n            componentsPerAttribute: numComponents,\r\n            componentDatatype: componentDatatype,\r\n            byteOffset: dracoAttribute.byte_offset(),\r\n            byteStride: ComponentDatatype.getSizeInBytes(componentDatatype) * numComponents,\r\n            normalized: dracoAttribute.normalized(),\r\n            quantization: quantization\r\n        }\r\n    };\r\n}\r\n\r\nfunction decodePointCloud(parameters) {\r\n    var dracoDecoder = new draco.Decoder();\r\n\r\n    if (parameters.dequantizeInShader) {\r\n        dracoDecoder.SkipAttributeTransform(draco.POSITION);\r\n        dracoDecoder.SkipAttributeTransform(draco.NORMAL);\r\n    }\r\n\r\n    var buffer = new draco.DecoderBuffer();\r\n    buffer.Init(parameters.buffer, parameters.buffer.length);\r\n\r\n    var geometryType = dracoDecoder.GetEncodedGeometryType(buffer);\r\n    if (geometryType !== draco.POINT_CLOUD) {\r\n        throw new RuntimeError('Draco geometry type must be POINT_CLOUD.');\r\n    }\r\n\r\n    var dracoPointCloud = new draco.PointCloud();\r\n    var decodingStatus = dracoDecoder.DecodeBufferToPointCloud(buffer, dracoPointCloud);\r\n    if (!decodingStatus.ok() || dracoPointCloud.ptr === 0) {\r\n        throw new RuntimeError('Error decoding draco point cloud: ' + decodingStatus.error_msg());\r\n    }\r\n\r\n    draco.destroy(buffer);\r\n\r\n    var result = {};\r\n\r\n    var properties = parameters.properties;\r\n    for (var propertyName in properties) {\r\n        if (properties.hasOwnProperty(propertyName)) {\r\n            var attributeId = properties[propertyName];\r\n            var dracoAttribute = dracoDecoder.GetAttributeByUniqueId(dracoPointCloud, attributeId);\r\n            result[propertyName] = decodeAttribute(dracoPointCloud, dracoDecoder, dracoAttribute);\r\n        }\r\n    }\r\n\r\n    draco.destroy(dracoPointCloud);\r\n    draco.destroy(dracoDecoder);\r\n\r\n    return result;\r\n}\r\n\r\nfunction decodePrimitive(parameters) {\r\n    var dracoDecoder = new draco.Decoder();\r\n\r\n    // Skip all parameter types except generic\r\n    var attributesToSkip = ['POSITION', 'NORMAL', 'COLOR', 'TEX_COORD'];\r\n    if (parameters.dequantizeInShader) {\r\n        for (var i = 0; i < attributesToSkip.length; ++i) {\r\n            dracoDecoder.SkipAttributeTransform(draco[attributesToSkip[i]]);\r\n        }\r\n    }\r\n\r\n    var bufferView = parameters.bufferView;\r\n    var buffer = new draco.DecoderBuffer();\r\n    buffer.Init(parameters.array, bufferView.byteLength);\r\n\r\n    var geometryType = dracoDecoder.GetEncodedGeometryType(buffer);\r\n    if (geometryType !== draco.TRIANGULAR_MESH) {\r\n        throw new RuntimeError('Unsupported draco mesh geometry type.');\r\n    }\r\n\r\n    var dracoGeometry = new draco.Mesh();\r\n    var decodingStatus = dracoDecoder.DecodeBufferToMesh(buffer, dracoGeometry);\r\n    if (!decodingStatus.ok() || dracoGeometry.ptr === 0) {\r\n        throw new RuntimeError('Error decoding draco mesh geometry: ' + decodingStatus.error_msg());\r\n    }\r\n\r\n    draco.destroy(buffer);\r\n\r\n    var attributeData = {};\r\n\r\n    var compressedAttributes = parameters.compressedAttributes;\r\n    for (var attributeName in compressedAttributes) {\r\n        if (compressedAttributes.hasOwnProperty(attributeName)) {\r\n            var compressedAttribute = compressedAttributes[attributeName];\r\n            var dracoAttribute = dracoDecoder.GetAttributeByUniqueId(dracoGeometry, compressedAttribute);\r\n            attributeData[attributeName] = decodeAttribute(dracoGeometry, dracoDecoder, dracoAttribute);\r\n        }\r\n    }\r\n\r\n    var result = {\r\n        indexArray: decodeIndexArray(dracoGeometry, dracoDecoder),\r\n        attributeData: attributeData\r\n    };\r\n\r\n    draco.destroy(dracoGeometry);\r\n    draco.destroy(dracoDecoder);\r\n\r\n    return result;\r\n}\r\n\r\nfunction decode(parameters) {\r\n    if (defined(parameters.bufferView)) {\r\n        return decodePrimitive(parameters);\r\n    }\r\n    return decodePointCloud(parameters);\r\n}\r\n\r\nfunction initWorker(dracoModule) {\r\n    draco = dracoModule;\r\n    self.onmessage = createTaskProcessorWorker(decode);\r\n    self.postMessage(true);\r\n}\r\n\r\nfunction decodeDraco(event) {\r\n    var data = event.data;\r\n\r\n    // Expect the first message to be to load a web assembly module\r\n    var wasmConfig = data.webAssemblyConfig;\r\n    if (defined(wasmConfig)) {\r\n        // Require and compile WebAssembly module, or use fallback if not supported\r\n        return require([wasmConfig.modulePath], function (dracoModule) {\r\n            if (defined(wasmConfig.wasmBinaryFile)) {\r\n                if (!defined(dracoModule)) {\r\n                    dracoModule = self.DracoDecoderModule;\r\n                }\r\n\r\n                dracoModule(wasmConfig).then(function (compiledModule) {\r\n                    initWorker(compiledModule);\r\n                });\r\n            } else {\r\n                initWorker(dracoModule());\r\n            }\r\n        });\r\n    }\r\n}\r\nexport default decodeDraco;\r\n"],"names":["IndexDatatype","defined","ComponentDatatype","RuntimeError"],"mappings":"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"}