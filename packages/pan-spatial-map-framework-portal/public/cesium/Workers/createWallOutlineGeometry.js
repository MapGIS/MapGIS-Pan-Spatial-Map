define(["./when-ae2e0b60","./Cartesian2-38b35910","./Transforms-07a9fab5","./ComponentDatatype-e44126e4","./Check-f996273c","./GeometryAttribute-586bf52c","./GeometryAttributes-5ce4955a","./IndexDatatype-516320ea","./Math-5bbcea10","./WallGeometryLibrary-cb91bdcd","./combine-276652d0","./RuntimeError-ac2797b4","./WebGLConstants-35626ea2","./arrayRemoveDuplicates-bdf50aa0","./PolylinePipeline-f47a23a0","./EllipsoidGeodesic-0207b202","./EllipsoidRhumbLine-af7b5ebe","./IntersectionTests-f49c7cd3","./Plane-45ad3143"],function(b,v,C,G,e,H,L,x,A,P,i,t,a,n,r,o,s,l,m){"use strict";var k=new v.Cartesian3,w=new v.Cartesian3;function d(e){var i=(e=b.defaultValue(e,b.defaultValue.EMPTY_OBJECT)).positions,t=e.maximumHeights,a=e.minimumHeights,n=b.defaultValue(e.granularity,A.CesiumMath.RADIANS_PER_DEGREE),e=b.defaultValue(e.ellipsoid,v.Ellipsoid.WGS84),n=(this._positions=i,this._minimumHeights=a,this._maximumHeights=t,this._granularity=n,this._ellipsoid=v.Ellipsoid.clone(e),this._workerName="createWallOutlineGeometry",1+i.length*v.Cartesian3.packedLength+2);b.defined(a)&&(n+=a.length),b.defined(t)&&(n+=t.length),this.packedLength=n+v.Ellipsoid.packedLength+1}d.pack=function(e,i,t){t=b.defaultValue(t,0);var a,n=e._positions,r=n.length;for(i[t++]=r,a=0;a<r;++a,t+=v.Cartesian3.packedLength)v.Cartesian3.pack(n[a],i,t);var o=e._minimumHeights,r=b.defined(o)?o.length:0;if(i[t++]=r,b.defined(o))for(a=0;a<r;++a)i[t++]=o[a];var s=e._maximumHeights;if(r=b.defined(s)?s.length:0,i[t++]=r,b.defined(s))for(a=0;a<r;++a)i[t++]=s[a];return v.Ellipsoid.pack(e._ellipsoid,i,t),i[t+=v.Ellipsoid.packedLength]=e._granularity,i};var u=v.Ellipsoid.clone(v.Ellipsoid.UNIT_SPHERE),p={positions:void 0,minimumHeights:void 0,maximumHeights:void 0,ellipsoid:u,granularity:void 0};return d.unpack=function(e,i,t){i=b.defaultValue(i,0);for(var a,n,r=e[i++],o=new Array(r),s=0;s<r;++s,i+=v.Cartesian3.packedLength)o[s]=v.Cartesian3.unpack(e,i);if(0<(r=e[i++]))for(a=new Array(r),s=0;s<r;++s)a[s]=e[i++];if(0<(r=e[i++]))for(n=new Array(r),s=0;s<r;++s)n[s]=e[i++];var l=v.Ellipsoid.unpack(e,i,u),m=e[i+=v.Ellipsoid.packedLength];return b.defined(t)?(t._positions=o,t._minimumHeights=a,t._maximumHeights=n,t._ellipsoid=v.Ellipsoid.clone(l,t._ellipsoid),t._granularity=m,t):(p.positions=o,p.minimumHeights=a,p.maximumHeights=n,p.granularity=m,new d(p))},d.fromConstantHeights=function(e){var i=(e=b.defaultValue(e,b.defaultValue.EMPTY_OBJECT)).positions,t=e.minimumHeight,a=e.maximumHeight,n=b.defined(t),r=b.defined(a);if(n||r)for(var o=i.length,s=n?new Array(o):void 0,l=r?new Array(o):void 0,m=0;m<o;++m)n&&(s[m]=t),r&&(l[m]=a);return new d({positions:i,maximumHeights:l,minimumHeights:s,ellipsoid:e.ellipsoid})},d.createGeometry=function(e){var i=e._positions,d=e._minimumHeights,u=e._maximumHeights,p=e._granularity,e=e._ellipsoid,e=P.WallGeometryLibrary.computePositions(e,i,u,d,p,!1);if(b.defined(e)){var f=e.bottomPositions,c=e.topPositions,t=c.length,i=2*t,a=new Float64Array(i),n=0;for(t/=3,m=0;m<t;++m){var r=3*m,h=v.Cartesian3.fromArray(c,r,k),r=v.Cartesian3.fromArray(f,r,w);a[n++]=r.x,a[n++]=r.y,a[n++]=r.z,a[n++]=h.x,a[n++]=h.y,a[n++]=h.z}for(var u=new L.GeometryAttributes({position:new H.GeometryAttribute({componentDatatype:G.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:a})}),o=i/3,s=x.IndexDatatype.createTypedArray(o,2*o-4+o),l=0,m=0;m<o-2;m+=2){var g=m,y=m+2,_=v.Cartesian3.fromArray(a,3*g,k),E=v.Cartesian3.fromArray(a,3*y,w);v.Cartesian3.equalsEpsilon(_,E,A.CesiumMath.EPSILON10)||(_=m+3,s[l++]=E=m+1,s[l++]=g,s[l++]=E,s[l++]=_,s[l++]=g,s[l++]=y)}return s[l++]=o-2,s[l++]=o-1,new H.Geometry({attributes:u,indices:s,primitiveType:H.PrimitiveType.LINES,boundingSphere:new C.BoundingSphere.fromVertices(a)})}},function(e,i){return(e=b.defined(i)?d.unpack(e,i):e)._ellipsoid=v.Ellipsoid.clone(e._ellipsoid),d.createGeometry(e)}});
