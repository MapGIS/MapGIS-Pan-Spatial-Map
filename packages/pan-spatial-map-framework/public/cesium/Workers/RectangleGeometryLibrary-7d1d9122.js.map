{"version":3,"file":"RectangleGeometryLibrary-7d1d9122.js","sources":["../../../../Source/Core/RectangleGeometryLibrary.js"],"sourcesContent":["import Cartesian3 from './Cartesian3.js';\r\nimport Cartographic from './Cartographic.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\nimport GeographicProjection from './GeographicProjection.js';\r\nimport CesiumMath from './Math.js';\r\nimport Matrix2 from './Matrix2.js';\r\nimport Rectangle from './Rectangle.js';\r\n\r\nvar cos = Math.cos;\r\nvar sin = Math.sin;\r\nvar sqrt = Math.sqrt;\r\n\r\n/**\r\n * @private\r\n */\r\nvar RectangleGeometryLibrary = {};\r\n\r\n/**\r\n * @private\r\n */\r\nRectangleGeometryLibrary.computePosition = function (computedOptions, ellipsoid, computeST, row, col, position, st) {\r\n    var radiiSquared = ellipsoid.radiiSquared;\r\n    var nwCorner = computedOptions.nwCorner;\r\n    var rectangle = computedOptions.boundingRectangle;\r\n\r\n    var stLatitude = nwCorner.latitude - computedOptions.granYCos * row + col * computedOptions.granXSin;\r\n    var cosLatitude = cos(stLatitude);\r\n    var nZ = sin(stLatitude);\r\n    var kZ = radiiSquared.z * nZ;\r\n\r\n    var stLongitude = nwCorner.longitude + row * computedOptions.granYSin + col * computedOptions.granXCos;\r\n    var nX = cosLatitude * cos(stLongitude);\r\n    var nY = cosLatitude * sin(stLongitude);\r\n\r\n    var kX = radiiSquared.x * nX;\r\n    var kY = radiiSquared.y * nY;\r\n\r\n    var gamma = sqrt(kX * nX + kY * nY + kZ * nZ);\r\n\r\n    position.x = kX / gamma;\r\n    position.y = kY / gamma;\r\n    position.z = kZ / gamma;\r\n\r\n    if (computeST) {\r\n        var stNwCorner = computedOptions.stNwCorner;\r\n        if (defined(stNwCorner)) {\r\n            stLatitude = stNwCorner.latitude - computedOptions.stGranYCos * row + col * computedOptions.stGranXSin;\r\n            stLongitude = stNwCorner.longitude + row * computedOptions.stGranYSin + col * computedOptions.stGranXCos;\r\n\r\n            st.x = (stLongitude - computedOptions.stWest) * computedOptions.lonScalar;\r\n            st.y = (stLatitude - computedOptions.stSouth) * computedOptions.latScalar;\r\n        } else {\r\n            st.x = (stLongitude - rectangle.west) * computedOptions.lonScalar;\r\n            st.y = (stLatitude - rectangle.south) * computedOptions.latScalar;\r\n        }\r\n    }\r\n};\r\n\r\nvar rotationMatrixScratch = new Matrix2();\r\nvar nwCartesian = new Cartesian3();\r\nvar centerScratch = new Cartographic();\r\nvar centerCartesian = new Cartesian3();\r\nvar proj = new GeographicProjection();\r\n\r\nfunction getRotationOptions(nwCorner, rotation, granularityX, granularityY, center, width, height) {\r\n    var cosRotation = Math.cos(rotation);\r\n    var granYCos = granularityY * cosRotation;\r\n    var granXCos = granularityX * cosRotation;\r\n\r\n    var sinRotation = Math.sin(rotation);\r\n    var granYSin = granularityY * sinRotation;\r\n    var granXSin = granularityX * sinRotation;\r\n\r\n    nwCartesian = proj.project(nwCorner, nwCartesian);\r\n\r\n    nwCartesian = Cartesian3.subtract(nwCartesian, centerCartesian, nwCartesian);\r\n    var rotationMatrix = Matrix2.fromRotation(rotation, rotationMatrixScratch);\r\n    nwCartesian = Matrix2.multiplyByVector(rotationMatrix, nwCartesian, nwCartesian);\r\n    nwCartesian = Cartesian3.add(nwCartesian, centerCartesian, nwCartesian);\r\n    nwCorner = proj.unproject(nwCartesian, nwCorner);\r\n\r\n    width -= 1;\r\n    height -= 1;\r\n\r\n    var latitude = nwCorner.latitude;\r\n    var latitude0 = latitude + width * granXSin;\r\n    var latitude1 = latitude - granYCos * height;\r\n    var latitude2 = latitude - granYCos * height + width * granXSin;\r\n\r\n    var north = Math.max(latitude, latitude0, latitude1, latitude2);\r\n    var south = Math.min(latitude, latitude0, latitude1, latitude2);\r\n\r\n    var longitude = nwCorner.longitude;\r\n    var longitude0 = longitude + width * granXCos;\r\n    var longitude1 = longitude + height * granYSin;\r\n    var longitude2 = longitude + height * granYSin + width * granXCos;\r\n\r\n    var east = Math.max(longitude, longitude0, longitude1, longitude2);\r\n    var west = Math.min(longitude, longitude0, longitude1, longitude2);\r\n\r\n    return {\r\n        north: north,\r\n        south: south,\r\n        east: east,\r\n        west: west,\r\n        granYCos: granYCos,\r\n        granYSin: granYSin,\r\n        granXCos: granXCos,\r\n        granXSin: granXSin,\r\n        nwCorner: nwCorner\r\n    };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nRectangleGeometryLibrary.computeOptions = function (rectangle, granularity, rotation, stRotation, boundingRectangleScratch, nwCornerResult, stNwCornerResult) {\r\n    var east = rectangle.east;\r\n    var west = rectangle.west;\r\n    var north = rectangle.north;\r\n    var south = rectangle.south;\r\n\r\n    var northCap = false;\r\n    var southCap = false;\r\n\r\n    if (north === CesiumMath.PI_OVER_TWO) {\r\n        northCap = true;\r\n    }\r\n    if (south === -CesiumMath.PI_OVER_TWO) {\r\n        southCap = true;\r\n    }\r\n\r\n    var width;\r\n    var height;\r\n    var granularityX;\r\n    var granularityY;\r\n    var dx;\r\n    var dy = north - south;\r\n    if (west > east) {\r\n        dx = CesiumMath.TWO_PI - west + east;\r\n    } else {\r\n        dx = east - west;\r\n    }\r\n\r\n    width = Math.ceil(dx / granularity) + 1;\r\n    height = Math.ceil(dy / granularity) + 1;\r\n    granularityX = dx / (width - 1);\r\n    granularityY = dy / (height - 1);\r\n\r\n    var nwCorner = Rectangle.northwest(rectangle, nwCornerResult);\r\n    var center = Rectangle.center(rectangle, centerScratch);\r\n    if (rotation !== 0 || stRotation !== 0) {\r\n        if (center.longitude < nwCorner.longitude) {\r\n            center.longitude += CesiumMath.TWO_PI;\r\n        }\r\n        centerCartesian = proj.project(center, centerCartesian);\r\n    }\r\n\r\n    var granYCos = granularityY;\r\n    var granXCos = granularityX;\r\n    var granYSin = 0.0;\r\n    var granXSin = 0.0;\r\n\r\n    var boundingRectangle = Rectangle.clone(rectangle, boundingRectangleScratch);\r\n\r\n    var computedOptions = {\r\n        granYCos: granYCos,\r\n        granYSin: granYSin,\r\n        granXCos: granXCos,\r\n        granXSin: granXSin,\r\n        nwCorner: nwCorner,\r\n        boundingRectangle: boundingRectangle,\r\n        width: width,\r\n        height: height,\r\n        northCap: northCap,\r\n        southCap: southCap\r\n    };\r\n\r\n    if (rotation !== 0) {\r\n        var rotationOptions = getRotationOptions(nwCorner, rotation, granularityX, granularityY, center, width, height);\r\n        north = rotationOptions.north;\r\n        south = rotationOptions.south;\r\n        east = rotationOptions.east;\r\n        west = rotationOptions.west;\r\n\r\n        //>>includeStart('debug', pragmas.debug);\r\n        if (north < -CesiumMath.PI_OVER_TWO || north > CesiumMath.PI_OVER_TWO || south < -CesiumMath.PI_OVER_TWO || south > CesiumMath.PI_OVER_TWO) {\r\n            throw new DeveloperError('Rotated rectangle is invalid.  It crosses over either the north or south pole.');\r\n        }\r\n        //>>includeEnd('debug')\r\n\r\n        computedOptions.granYCos = rotationOptions.granYCos;\r\n        computedOptions.granYSin = rotationOptions.granYSin;\r\n        computedOptions.granXCos = rotationOptions.granXCos;\r\n        computedOptions.granXSin = rotationOptions.granXSin;\r\n\r\n        boundingRectangle.north = north;\r\n        boundingRectangle.south = south;\r\n        boundingRectangle.east = east;\r\n        boundingRectangle.west = west;\r\n    }\r\n\r\n    if (stRotation !== 0) {\r\n        rotation = rotation - stRotation;\r\n        var stNwCorner = Rectangle.northwest(boundingRectangle, stNwCornerResult);\r\n\r\n        var stRotationOptions = getRotationOptions(stNwCorner, rotation, granularityX, granularityY, center, width, height);\r\n\r\n        computedOptions.stGranYCos = stRotationOptions.granYCos;\r\n        computedOptions.stGranXCos = stRotationOptions.granXCos;\r\n        computedOptions.stGranYSin = stRotationOptions.granYSin;\r\n        computedOptions.stGranXSin = stRotationOptions.granXSin;\r\n        computedOptions.stNwCorner = stNwCorner;\r\n        computedOptions.stWest = stRotationOptions.west;\r\n        computedOptions.stSouth = stRotationOptions.south;\r\n    }\r\n\r\n    return computedOptions;\r\n};\r\nexport default RectangleGeometryLibrary;\r\n"],"names":["defined","Matrix2","Cartesian3","Cartographic","GeographicProjection","CesiumMath","Rectangle","DeveloperError"],"mappings":"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"}