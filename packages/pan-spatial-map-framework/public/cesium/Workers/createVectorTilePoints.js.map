{"version":3,"file":"createVectorTilePoints.js","sources":["../../../../Source/WorkersES6/createVectorTilePoints.js"],"sourcesContent":["import AttributeCompression from '../Core/AttributeCompression.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport Cartographic from '../Core/Cartographic.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport CesiumMath from '../Core/Math.js';\r\nimport Rectangle from '../Core/Rectangle.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n\r\nvar maxShort = 32767;\r\n\r\nvar scratchBVCartographic = new Cartographic();\r\nvar scratchEncodedPosition = new Cartesian3();\r\n\r\nvar scratchRectangle = new Rectangle();\r\nvar scratchEllipsoid = new Ellipsoid();\r\nvar scratchMinMaxHeights = {\r\n    min: undefined,\r\n    max: undefined\r\n};\r\n\r\nfunction unpackBuffer(packedBuffer) {\r\n    packedBuffer = new Float64Array(packedBuffer);\r\n\r\n    var offset = 0;\r\n    scratchMinMaxHeights.min = packedBuffer[offset++];\r\n    scratchMinMaxHeights.max = packedBuffer[offset++];\r\n\r\n    Rectangle.unpack(packedBuffer, offset, scratchRectangle);\r\n    offset += Rectangle.packedLength;\r\n\r\n    Ellipsoid.unpack(packedBuffer, offset, scratchEllipsoid);\r\n}\r\n\r\nfunction createVectorTilePoints(parameters, transferableObjects) {\r\n    var positions = new Uint16Array(parameters.positions);\r\n\r\n    unpackBuffer(parameters.packedBuffer);\r\n    var rectangle = scratchRectangle;\r\n    var ellipsoid = scratchEllipsoid;\r\n    var minimumHeight = scratchMinMaxHeights.min;\r\n    var maximumHeight = scratchMinMaxHeights.max;\r\n\r\n    var positionsLength = positions.length / 3;\r\n    var uBuffer = positions.subarray(0, positionsLength);\r\n    var vBuffer = positions.subarray(positionsLength, 2 * positionsLength);\r\n    var heightBuffer = positions.subarray(2 * positionsLength, 3 * positionsLength);\r\n    AttributeCompression.zigZagDeltaDecode(uBuffer, vBuffer, heightBuffer);\r\n\r\n    var decoded = new Float64Array(positions.length);\r\n    for (var i = 0; i < positionsLength; ++i) {\r\n        var u = uBuffer[i];\r\n        var v = vBuffer[i];\r\n        var h = heightBuffer[i];\r\n\r\n        var lon = CesiumMath.lerp(rectangle.west, rectangle.east, u / maxShort);\r\n        var lat = CesiumMath.lerp(rectangle.south, rectangle.north, v / maxShort);\r\n        var alt = CesiumMath.lerp(minimumHeight, maximumHeight, h / maxShort);\r\n\r\n        var cartographic = Cartographic.fromRadians(lon, lat, alt, scratchBVCartographic);\r\n        var decodedPosition = ellipsoid.cartographicToCartesian(cartographic, scratchEncodedPosition);\r\n        Cartesian3.pack(decodedPosition, decoded, i * 3);\r\n    }\r\n\r\n    transferableObjects.push(decoded.buffer);\r\n\r\n    return {\r\n        positions: decoded.buffer\r\n    };\r\n}\r\nexport default createTaskProcessorWorker(createVectorTilePoints);\r\n"],"names":["Cartographic","Cartesian3","Rectangle","Ellipsoid","AttributeCompression","CesiumMath"],"mappings":"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"}