{"version":3,"file":"GeometryOffsetAttribute-eee8557f.js","sources":["../../../../Source/Core/arrayFill.js","../../../../Source/Core/GeometryOffsetAttribute.js"],"sourcesContent":["import Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\n\r\n/**\r\n * Fill an array or a portion of an array with a given value.\r\n *\r\n * @param {Array} array The array to fill.\r\n * @param {*} value The value to fill the array with.\r\n * @param {Number} [start=0] The index to start filling at.\r\n * @param {Number} [end=array.length] The index to end stop at.\r\n *\r\n * @returns {Array} The resulting array.\r\n * @private\r\n */\r\nfunction arrayFill(array, value, start, end) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    Check.defined('value', value);\r\n    if (defined(start)) {\r\n        Check.typeOf.number('start', start);\r\n    }\r\n    if (defined(end)) {\r\n        Check.typeOf.number('end', end);\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    if (typeof array.fill === 'function') {\r\n        return array.fill(value, start, end);\r\n    }\r\n\r\n    var length = array.length >>> 0;\r\n    var relativeStart = defaultValue(start, 0);\r\n    // If negative, find wrap around position\r\n    var k = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\r\n    var relativeEnd = defaultValue(end, length);\r\n    // If negative, find wrap around position\r\n    var last = relativeEnd < 0 ? Math.max(length + relativeEnd, 0) : Math.min(relativeEnd, length);\r\n\r\n    // Fill array accordingly\r\n    while (k < last) {\r\n        array[k] = value;\r\n        k++;\r\n    }\r\n    return array;\r\n}\r\nexport default arrayFill;\r\n","/**\r\n * Represents which vertices should have a value of `true` for the `applyOffset` attribute\r\n * @private\r\n */\r\nvar GeometryOffsetAttribute = {\r\n    NONE: 0,\r\n    TOP: 1,\r\n    ALL: 2\r\n};\r\nexport default Object.freeze(GeometryOffsetAttribute);\r\n"],"names":["Check","defined","defaultValue"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAIA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,SAAS,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C;IACA,IAAIA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC,IAAIA,WAAK,CAAC,OAAO,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAClC,IAAI,IAAIC,YAAO,CAAC,KAAK,CAAC,EAAE;IACxB,QAAQD,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC5C,KAAK;IACL,IAAI,IAAIC,YAAO,CAAC,GAAG,CAAC,EAAE;IACtB,QAAQD,WAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACxC,KAAK;IACL;AACA;IACA,IAAI,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;IAC1C,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IAC7C,KAAK;AACL;IACA,IAAI,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;IACpC,IAAI,IAAI,aAAa,GAAGE,iBAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC/C;IACA,IAAI,IAAI,CAAC,GAAG,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,aAAa,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACtG,IAAI,IAAI,WAAW,GAAGA,iBAAY,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAChD;IACA,IAAI,IAAI,IAAI,GAAG,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,WAAW,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACnG;IACA;IACA,IAAI,OAAO,CAAC,GAAG,IAAI,EAAE;IACrB,QAAQ,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;IACzB,QAAQ,CAAC,EAAE,CAAC;IACZ,KAAK;IACL,IAAI,OAAO,KAAK,CAAC;IACjB;;IC7CA;IACA;IACA;IACA;IACA,IAAI,uBAAuB,GAAG;IAC9B,IAAI,IAAI,EAAE,CAAC;IACX,IAAI,GAAG,EAAE,CAAC;IACV,IAAI,GAAG,EAAE,CAAC;IACV,CAAC,CAAC;AACF,oCAAe,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC;;;;;;;;;"}