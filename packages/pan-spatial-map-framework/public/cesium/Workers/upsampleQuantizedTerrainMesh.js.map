{"version":3,"file":"upsampleQuantizedTerrainMesh.js","sources":["../../../../Source/Core/Intersections2D.js","../../../../Source/WorkersES6/upsampleQuantizedTerrainMesh.js"],"sourcesContent":["import Cartesian2 from './Cartesian2.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport defined from './defined.js';\r\nimport DeveloperError from './DeveloperError.js';\r\n\r\n/**\r\n * Contains functions for operating on 2D triangles.\r\n *\r\n * @namespace Intersections2D\r\n */\r\nvar Intersections2D = {};\r\n\r\n/**\r\n * Splits a 2D triangle at given axis-aligned threshold value and returns the resulting\r\n * polygon on a given side of the threshold.  The resulting polygon may have 0, 1, 2,\r\n * 3, or 4 vertices.\r\n *\r\n * @param {Number} threshold The threshold coordinate value at which to clip the triangle.\r\n * @param {Boolean} keepAbove true to keep the portion of the triangle above the threshold, or false\r\n *                            to keep the portion below.\r\n * @param {Number} u0 The coordinate of the first vertex in the triangle, in counter-clockwise order.\r\n * @param {Number} u1 The coordinate of the second vertex in the triangle, in counter-clockwise order.\r\n * @param {Number} u2 The coordinate of the third vertex in the triangle, in counter-clockwise order.\r\n * @param {Number[]} [result] The array into which to copy the result.  If this parameter is not supplied,\r\n *                            a new array is constructed and returned.\r\n * @returns {Number[]} The polygon that results after the clip, specified as a list of\r\n *                     vertices.  The vertices are specified in counter-clockwise order.\r\n *                     Each vertex is either an index from the existing list (identified as\r\n *                     a 0, 1, or 2) or -1 indicating a new vertex not in the original triangle.\r\n *                     For new vertices, the -1 is followed by three additional numbers: the\r\n *                     index of each of the two original vertices forming the line segment that\r\n *                     the new vertex lies on, and the fraction of the distance from the first\r\n *                     vertex to the second one.\r\n *\r\n * @example\r\n * var result = Cesium.Intersections2D.clipTriangleAtAxisAlignedThreshold(0.5, false, 0.2, 0.6, 0.4);\r\n * // result === [2, 0, -1, 1, 0, 0.25, -1, 1, 2, 0.5]\r\n */\r\nIntersections2D.clipTriangleAtAxisAlignedThreshold = function (threshold, keepAbove, u0, u1, u2, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (!defined(threshold)) {\r\n        throw new DeveloperError('threshold is required.');\r\n    }\r\n    if (!defined(keepAbove)) {\r\n        throw new DeveloperError('keepAbove is required.');\r\n    }\r\n    if (!defined(u0)) {\r\n        throw new DeveloperError('u0 is required.');\r\n    }\r\n    if (!defined(u1)) {\r\n        throw new DeveloperError('u1 is required.');\r\n    }\r\n    if (!defined(u2)) {\r\n        throw new DeveloperError('u2 is required.');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        result = [];\r\n    } else {\r\n        result.length = 0;\r\n    }\r\n\r\n    var u0Behind;\r\n    var u1Behind;\r\n    var u2Behind;\r\n    if (keepAbove) {\r\n        u0Behind = u0 < threshold;\r\n        u1Behind = u1 < threshold;\r\n        u2Behind = u2 < threshold;\r\n    } else {\r\n        u0Behind = u0 > threshold;\r\n        u1Behind = u1 > threshold;\r\n        u2Behind = u2 > threshold;\r\n    }\r\n\r\n    var numBehind = u0Behind + u1Behind + u2Behind;\r\n\r\n    var u01Ratio;\r\n    var u02Ratio;\r\n    var u12Ratio;\r\n    var u10Ratio;\r\n    var u20Ratio;\r\n    var u21Ratio;\r\n\r\n    if (numBehind === 1) {\r\n        if (u0Behind) {\r\n            u01Ratio = (threshold - u0) / (u1 - u0);\r\n            u02Ratio = (threshold - u0) / (u2 - u0);\r\n\r\n            result.push(1);\r\n\r\n            result.push(2);\r\n\r\n            if (u02Ratio !== 1.0) {\r\n                result.push(-1);\r\n                result.push(0);\r\n                result.push(2);\r\n                result.push(u02Ratio);\r\n            }\r\n\r\n            if (u01Ratio !== 1.0) {\r\n                result.push(-1);\r\n                result.push(0);\r\n                result.push(1);\r\n                result.push(u01Ratio);\r\n            }\r\n        } else if (u1Behind) {\r\n            u12Ratio = (threshold - u1) / (u2 - u1);\r\n            u10Ratio = (threshold - u1) / (u0 - u1);\r\n\r\n            result.push(2);\r\n\r\n            result.push(0);\r\n\r\n            if (u10Ratio !== 1.0) {\r\n                result.push(-1);\r\n                result.push(1);\r\n                result.push(0);\r\n                result.push(u10Ratio);\r\n            }\r\n\r\n            if (u12Ratio !== 1.0) {\r\n                result.push(-1);\r\n                result.push(1);\r\n                result.push(2);\r\n                result.push(u12Ratio);\r\n            }\r\n        } else if (u2Behind) {\r\n            u20Ratio = (threshold - u2) / (u0 - u2);\r\n            u21Ratio = (threshold - u2) / (u1 - u2);\r\n\r\n            result.push(0);\r\n\r\n            result.push(1);\r\n\r\n            if (u21Ratio !== 1.0) {\r\n                result.push(-1);\r\n                result.push(2);\r\n                result.push(1);\r\n                result.push(u21Ratio);\r\n            }\r\n\r\n            if (u20Ratio !== 1.0) {\r\n                result.push(-1);\r\n                result.push(2);\r\n                result.push(0);\r\n                result.push(u20Ratio);\r\n            }\r\n        }\r\n    } else if (numBehind === 2) {\r\n        if (!u0Behind && u0 !== threshold) {\r\n            u10Ratio = (threshold - u1) / (u0 - u1);\r\n            u20Ratio = (threshold - u2) / (u0 - u2);\r\n\r\n            result.push(0);\r\n\r\n            result.push(-1);\r\n            result.push(1);\r\n            result.push(0);\r\n            result.push(u10Ratio);\r\n\r\n            result.push(-1);\r\n            result.push(2);\r\n            result.push(0);\r\n            result.push(u20Ratio);\r\n        } else if (!u1Behind && u1 !== threshold) {\r\n            u21Ratio = (threshold - u2) / (u1 - u2);\r\n            u01Ratio = (threshold - u0) / (u1 - u0);\r\n\r\n            result.push(1);\r\n\r\n            result.push(-1);\r\n            result.push(2);\r\n            result.push(1);\r\n            result.push(u21Ratio);\r\n\r\n            result.push(-1);\r\n            result.push(0);\r\n            result.push(1);\r\n            result.push(u01Ratio);\r\n        } else if (!u2Behind && u2 !== threshold) {\r\n            u02Ratio = (threshold - u0) / (u2 - u0);\r\n            u12Ratio = (threshold - u1) / (u2 - u1);\r\n\r\n            result.push(2);\r\n\r\n            result.push(-1);\r\n            result.push(0);\r\n            result.push(2);\r\n            result.push(u02Ratio);\r\n\r\n            result.push(-1);\r\n            result.push(1);\r\n            result.push(2);\r\n            result.push(u12Ratio);\r\n        }\r\n    } else if (numBehind !== 3) {\r\n        // Completely in front of threshold\r\n        result.push(0);\r\n        result.push(1);\r\n        result.push(2);\r\n    }\r\n    // else Completely behind threshold\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Compute the barycentric coordinates of a 2D position within a 2D triangle.\r\n *\r\n * @param {Number} x The x coordinate of the position for which to find the barycentric coordinates.\r\n * @param {Number} y The y coordinate of the position for which to find the barycentric coordinates.\r\n * @param {Number} x1 The x coordinate of the triangle's first vertex.\r\n * @param {Number} y1 The y coordinate of the triangle's first vertex.\r\n * @param {Number} x2 The x coordinate of the triangle's second vertex.\r\n * @param {Number} y2 The y coordinate of the triangle's second vertex.\r\n * @param {Number} x3 The x coordinate of the triangle's third vertex.\r\n * @param {Number} y3 The y coordinate of the triangle's third vertex.\r\n * @param {Cartesian3} [result] The instance into to which to copy the result.  If this parameter\r\n *                     is undefined, a new instance is created and returned.\r\n * @returns {Cartesian3} The barycentric coordinates of the position within the triangle.\r\n *\r\n * @example\r\n * var result = Cesium.Intersections2D.computeBarycentricCoordinates(0.0, 0.0, 0.0, 1.0, -1, -0.5, 1, -0.5);\r\n * // result === new Cesium.Cartesian3(1.0 / 3.0, 1.0 / 3.0, 1.0 / 3.0);\r\n */\r\nIntersections2D.computeBarycentricCoordinates = function (x, y, x1, y1, x2, y2, x3, y3, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    if (!defined(x)) {\r\n        throw new DeveloperError('x is required.');\r\n    }\r\n    if (!defined(y)) {\r\n        throw new DeveloperError('y is required.');\r\n    }\r\n    if (!defined(x1)) {\r\n        throw new DeveloperError('x1 is required.');\r\n    }\r\n    if (!defined(y1)) {\r\n        throw new DeveloperError('y1 is required.');\r\n    }\r\n    if (!defined(x2)) {\r\n        throw new DeveloperError('x2 is required.');\r\n    }\r\n    if (!defined(y2)) {\r\n        throw new DeveloperError('y2 is required.');\r\n    }\r\n    if (!defined(x3)) {\r\n        throw new DeveloperError('x3 is required.');\r\n    }\r\n    if (!defined(y3)) {\r\n        throw new DeveloperError('y3 is required.');\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    var x1mx3 = x1 - x3;\r\n    var x3mx2 = x3 - x2;\r\n    var y2my3 = y2 - y3;\r\n    var y1my3 = y1 - y3;\r\n    var inverseDeterminant = 1.0 / (y2my3 * x1mx3 + x3mx2 * y1my3);\r\n    var ymy3 = y - y3;\r\n    var xmx3 = x - x3;\r\n    var l1 = (y2my3 * xmx3 + x3mx2 * ymy3) * inverseDeterminant;\r\n    var l2 = (-y1my3 * xmx3 + x1mx3 * ymy3) * inverseDeterminant;\r\n    var l3 = 1.0 - l1 - l2;\r\n\r\n    if (defined(result)) {\r\n        result.x = l1;\r\n        result.y = l2;\r\n        result.z = l3;\r\n        return result;\r\n    }\r\n    return new Cartesian3(l1, l2, l3);\r\n};\r\n\r\n/**\r\n * Compute the intersection between 2 line segments\r\n *\r\n * @param {Number} x00 The x coordinate of the first line's first vertex.\r\n * @param {Number} y00 The y coordinate of the first line's first vertex.\r\n * @param {Number} x01 The x coordinate of the first line's second vertex.\r\n * @param {Number} y01 The y coordinate of the first line's second vertex.\r\n * @param {Number} x10 The x coordinate of the second line's first vertex.\r\n * @param {Number} y10 The y coordinate of the second line's first vertex.\r\n * @param {Number} x11 The x coordinate of the second line's second vertex.\r\n * @param {Number} y11 The y coordinate of the second line's second vertex.\r\n * @param {Cartesian2} [result] The instance into to which to copy the result. If this parameter\r\n *                     is undefined, a new instance is created and returned.\r\n * @returns {Cartesian2} The intersection point, undefined if there is no intersection point or lines are coincident.\r\n *\r\n * @example\r\n * var result = Cesium.Intersections2D.computeLineSegmentLineSegmentIntersection(0.0, 0.0, 0.0, 2.0, -1, 1, 1, 1);\r\n * // result === new Cesium.Cartesian2(0.0, 1.0);\r\n */\r\nIntersections2D.computeLineSegmentLineSegmentIntersection = function (x00, y00, x01, y01, x10, y10, x11, y11, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.number('x00', x00);\r\n    Check.typeOf.number('y00', y00);\r\n    Check.typeOf.number('x01', x01);\r\n    Check.typeOf.number('y01', y01);\r\n    Check.typeOf.number('x10', x10);\r\n    Check.typeOf.number('y10', y10);\r\n    Check.typeOf.number('x11', x11);\r\n    Check.typeOf.number('y11', y11);\r\n    //>>includeEnd('debug');\r\n\r\n    var numerator1A = (x11 - x10) * (y00 - y10) - (y11 - y10) * (x00 - x10);\r\n    var numerator1B = (x01 - x00) * (y00 - y10) - (y01 - y00) * (x00 - x10);\r\n    var denominator1 = (y11 - y10) * (x01 - x00) - (x11 - x10) * (y01 - y00);\r\n\r\n    // If denominator = 0, then lines are parallel. If denominator = 0 and both numerators are 0, then coincident\r\n    if (denominator1 === 0) {\r\n        return;\r\n    }\r\n\r\n    var ua1 = numerator1A / denominator1;\r\n    var ub1 = numerator1B / denominator1;\r\n\r\n    if (ua1 >= 0 && ua1 <= 1 && ub1 >= 0 && ub1 <= 1) {\r\n        if (!defined(result)) {\r\n            result = new Cartesian2();\r\n        }\r\n\r\n        result.x = x00 + ua1 * (x01 - x00);\r\n        result.y = y00 + ua1 * (y01 - y00);\r\n\r\n        return result;\r\n    }\r\n};\r\nexport default Intersections2D;\r\n","import AttributeCompression from '../Core/AttributeCompression.js';\r\nimport BoundingSphere from '../Core/BoundingSphere.js';\r\nimport Cartesian2 from '../Core/Cartesian2.js';\r\nimport Cartesian3 from '../Core/Cartesian3.js';\r\nimport Cartographic from '../Core/Cartographic.js';\r\nimport defined from '../Core/defined.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport EllipsoidalOccluder from '../Core/EllipsoidalOccluder.js';\r\nimport IndexDatatype from '../Core/IndexDatatype.js';\r\nimport Intersections2D from '../Core/Intersections2D.js';\r\nimport CesiumMath from '../Core/Math.js';\r\nimport OrientedBoundingBox from '../Core/OrientedBoundingBox.js';\r\nimport Rectangle from '../Core/Rectangle.js';\r\nimport TerrainEncoding from '../Core/TerrainEncoding.js';\r\nimport createTaskProcessorWorker from './createTaskProcessorWorker.js';\r\n\r\nvar maxShort = 32767;\r\nvar halfMaxShort = (maxShort / 2) | 0;\r\n\r\nvar clipScratch = [];\r\nvar clipScratch2 = [];\r\nvar verticesScratch = [];\r\nvar cartographicScratch = new Cartographic();\r\nvar cartesian3Scratch = new Cartesian3();\r\nvar uScratch = [];\r\nvar vScratch = [];\r\nvar heightScratch = [];\r\nvar indicesScratch = [];\r\nvar normalsScratch = [];\r\nvar horizonOcclusionPointScratch = new Cartesian3();\r\nvar boundingSphereScratch = new BoundingSphere();\r\nvar orientedBoundingBoxScratch = new OrientedBoundingBox();\r\nvar decodeTexCoordsScratch = new Cartesian2();\r\nvar octEncodedNormalScratch = new Cartesian3();\r\n\r\nfunction upsampleQuantizedTerrainMesh(parameters, transferableObjects) {\r\n    var isEastChild = parameters.isEastChild;\r\n    var isNorthChild = parameters.isNorthChild;\r\n\r\n    var minU = isEastChild ? halfMaxShort : 0;\r\n    var maxU = isEastChild ? maxShort : halfMaxShort;\r\n    var minV = isNorthChild ? halfMaxShort : 0;\r\n    var maxV = isNorthChild ? maxShort : halfMaxShort;\r\n\r\n    var uBuffer = uScratch;\r\n    var vBuffer = vScratch;\r\n    var heightBuffer = heightScratch;\r\n    var normalBuffer = normalsScratch;\r\n\r\n    uBuffer.length = 0;\r\n    vBuffer.length = 0;\r\n    heightBuffer.length = 0;\r\n    normalBuffer.length = 0;\r\n\r\n    var indices = indicesScratch;\r\n    indices.length = 0;\r\n\r\n    var vertexMap = {};\r\n\r\n    var parentVertices = parameters.vertices;\r\n    var parentIndices = parameters.indices;\r\n    parentIndices = parentIndices.subarray(0, parameters.indexCountWithoutSkirts);\r\n\r\n    var encoding = TerrainEncoding.clone(parameters.encoding);\r\n    var hasVertexNormals = encoding.hasVertexNormals;\r\n\r\n    var vertexCount = 0;\r\n    var quantizedVertexCount = parameters.vertexCountWithoutSkirts;\r\n\r\n    var parentMinimumHeight = parameters.minimumHeight;\r\n    var parentMaximumHeight = parameters.maximumHeight;\r\n\r\n    var parentUBuffer = new Array(quantizedVertexCount);\r\n    var parentVBuffer = new Array(quantizedVertexCount);\r\n    var parentHeightBuffer = new Array(quantizedVertexCount);\r\n    var parentNormalBuffer = hasVertexNormals ? new Array(quantizedVertexCount * 2) : undefined;\r\n\r\n    var threshold = 20;\r\n    var height;\r\n\r\n    var i, n;\r\n    var u, v;\r\n    for (i = 0, n = 0; i < quantizedVertexCount; ++i, n += 2) {\r\n        var texCoords = encoding.decodeTextureCoordinates(parentVertices, i, decodeTexCoordsScratch);\r\n        height = encoding.decodeHeight(parentVertices, i);\r\n\r\n        u = CesiumMath.clamp((texCoords.x * maxShort) | 0, 0, maxShort);\r\n        v = CesiumMath.clamp((texCoords.y * maxShort) | 0, 0, maxShort);\r\n        parentHeightBuffer[i] = CesiumMath.clamp((((height - parentMinimumHeight) / (parentMaximumHeight - parentMinimumHeight)) * maxShort) | 0, 0, maxShort);\r\n\r\n        if (u < threshold) {\r\n            u = 0;\r\n        }\r\n\r\n        if (v < threshold) {\r\n            v = 0;\r\n        }\r\n\r\n        if (maxShort - u < threshold) {\r\n            u = maxShort;\r\n        }\r\n\r\n        if (maxShort - v < threshold) {\r\n            v = maxShort;\r\n        }\r\n\r\n        parentUBuffer[i] = u;\r\n        parentVBuffer[i] = v;\r\n\r\n        if (hasVertexNormals) {\r\n            var encodedNormal = encoding.getOctEncodedNormal(parentVertices, i, octEncodedNormalScratch);\r\n            parentNormalBuffer[n] = encodedNormal.x;\r\n            parentNormalBuffer[n + 1] = encodedNormal.y;\r\n        }\r\n\r\n        if (((isEastChild && u >= halfMaxShort) || (!isEastChild && u <= halfMaxShort)) && ((isNorthChild && v >= halfMaxShort) || (!isNorthChild && v <= halfMaxShort))) {\r\n            vertexMap[i] = vertexCount;\r\n            uBuffer.push(u);\r\n            vBuffer.push(v);\r\n            heightBuffer.push(parentHeightBuffer[i]);\r\n            if (hasVertexNormals) {\r\n                normalBuffer.push(parentNormalBuffer[n]);\r\n                normalBuffer.push(parentNormalBuffer[n + 1]);\r\n            }\r\n\r\n            ++vertexCount;\r\n        }\r\n    }\r\n\r\n    var triangleVertices = [];\r\n    triangleVertices.push(new Vertex());\r\n    triangleVertices.push(new Vertex());\r\n    triangleVertices.push(new Vertex());\r\n\r\n    var clippedTriangleVertices = [];\r\n    clippedTriangleVertices.push(new Vertex());\r\n    clippedTriangleVertices.push(new Vertex());\r\n    clippedTriangleVertices.push(new Vertex());\r\n\r\n    var clippedIndex;\r\n    var clipped2;\r\n\r\n    for (i = 0; i < parentIndices.length; i += 3) {\r\n        var i0 = parentIndices[i];\r\n        var i1 = parentIndices[i + 1];\r\n        var i2 = parentIndices[i + 2];\r\n\r\n        var u0 = parentUBuffer[i0];\r\n        var u1 = parentUBuffer[i1];\r\n        var u2 = parentUBuffer[i2];\r\n\r\n        triangleVertices[0].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i0);\r\n        triangleVertices[1].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i1);\r\n        triangleVertices[2].initializeIndexed(parentUBuffer, parentVBuffer, parentHeightBuffer, parentNormalBuffer, i2);\r\n\r\n        // Clip triangle on the east-west boundary.\r\n        var clipped = Intersections2D.clipTriangleAtAxisAlignedThreshold(halfMaxShort, isEastChild, u0, u1, u2, clipScratch);\r\n\r\n        // Get the first clipped triangle, if any.\r\n        clippedIndex = 0;\r\n\r\n        if (clippedIndex >= clipped.length) {\r\n            continue;\r\n        }\r\n        clippedIndex = clippedTriangleVertices[0].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n        if (clippedIndex >= clipped.length) {\r\n            continue;\r\n        }\r\n        clippedIndex = clippedTriangleVertices[1].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n        if (clippedIndex >= clipped.length) {\r\n            continue;\r\n        }\r\n        clippedIndex = clippedTriangleVertices[2].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n        // Clip the triangle against the North-south boundary.\r\n        clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(\r\n            halfMaxShort,\r\n            isNorthChild,\r\n            clippedTriangleVertices[0].getV(),\r\n            clippedTriangleVertices[1].getV(),\r\n            clippedTriangleVertices[2].getV(),\r\n            clipScratch2\r\n        );\r\n        addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped2, clippedTriangleVertices, hasVertexNormals);\r\n\r\n        // If there's another vertex in the original clipped result,\r\n        // it forms a second triangle.  Clip it as well.\r\n        if (clippedIndex < clipped.length) {\r\n            clippedTriangleVertices[2].clone(clippedTriangleVertices[1]);\r\n            clippedTriangleVertices[2].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n\r\n            clipped2 = Intersections2D.clipTriangleAtAxisAlignedThreshold(\r\n                halfMaxShort,\r\n                isNorthChild,\r\n                clippedTriangleVertices[0].getV(),\r\n                clippedTriangleVertices[1].getV(),\r\n                clippedTriangleVertices[2].getV(),\r\n                clipScratch2\r\n            );\r\n            addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped2, clippedTriangleVertices, hasVertexNormals);\r\n        }\r\n    }\r\n\r\n    var uOffset = isEastChild ? -maxShort : 0;\r\n    var vOffset = isNorthChild ? -maxShort : 0;\r\n\r\n    var westIndices = [];\r\n    var southIndices = [];\r\n    var eastIndices = [];\r\n    var northIndices = [];\r\n\r\n    var minimumHeight = Number.MAX_VALUE;\r\n    var maximumHeight = -minimumHeight;\r\n\r\n    var cartesianVertices = verticesScratch;\r\n    cartesianVertices.length = 0;\r\n\r\n    var ellipsoid = Ellipsoid.clone(parameters.ellipsoid);\r\n    var rectangle = Rectangle.clone(parameters.childRectangle);\r\n\r\n    var north = rectangle.north;\r\n    var south = rectangle.south;\r\n    var east = rectangle.east;\r\n    var west = rectangle.west;\r\n\r\n    if (east < west) {\r\n        east += CesiumMath.TWO_PI;\r\n    }\r\n\r\n    for (i = 0; i < uBuffer.length; ++i) {\r\n        u = Math.round(uBuffer[i]);\r\n        if (u <= minU) {\r\n            westIndices.push(i);\r\n            u = 0;\r\n        } else if (u >= maxU) {\r\n            eastIndices.push(i);\r\n            u = maxShort;\r\n        } else {\r\n            u = u * 2 + uOffset;\r\n        }\r\n\r\n        uBuffer[i] = u;\r\n\r\n        v = Math.round(vBuffer[i]);\r\n        if (v <= minV) {\r\n            southIndices.push(i);\r\n            v = 0;\r\n        } else if (v >= maxV) {\r\n            northIndices.push(i);\r\n            v = maxShort;\r\n        } else {\r\n            v = v * 2 + vOffset;\r\n        }\r\n\r\n        vBuffer[i] = v;\r\n\r\n        height = CesiumMath.lerp(parentMinimumHeight, parentMaximumHeight, heightBuffer[i] / maxShort);\r\n        if (height < minimumHeight) {\r\n            minimumHeight = height;\r\n        }\r\n        if (height > maximumHeight) {\r\n            maximumHeight = height;\r\n        }\r\n\r\n        heightBuffer[i] = height;\r\n\r\n        cartographicScratch.longitude = CesiumMath.lerp(west, east, u / maxShort);\r\n        cartographicScratch.latitude = CesiumMath.lerp(south, north, v / maxShort);\r\n        cartographicScratch.height = height;\r\n\r\n        ellipsoid.cartographicToCartesian(cartographicScratch, cartesian3Scratch);\r\n\r\n        cartesianVertices.push(cartesian3Scratch.x);\r\n        cartesianVertices.push(cartesian3Scratch.y);\r\n        cartesianVertices.push(cartesian3Scratch.z);\r\n    }\r\n\r\n    var boundingSphere = BoundingSphere.fromVertices(cartesianVertices, Cartesian3.ZERO, 3, boundingSphereScratch);\r\n    var orientedBoundingBox = OrientedBoundingBox.fromRectangle(rectangle, minimumHeight, maximumHeight, ellipsoid, orientedBoundingBoxScratch);\r\n\r\n    var occluder = new EllipsoidalOccluder(ellipsoid);\r\n    var horizonOcclusionPoint = occluder.computeHorizonCullingPointFromVerticesPossiblyUnderEllipsoid(\r\n        boundingSphere.center,\r\n        cartesianVertices,\r\n        3,\r\n        boundingSphere.center,\r\n        minimumHeight,\r\n        horizonOcclusionPointScratch\r\n    );\r\n\r\n    var heightRange = maximumHeight - minimumHeight;\r\n\r\n    var vertices = new Uint16Array(uBuffer.length + vBuffer.length + heightBuffer.length);\r\n\r\n    for (i = 0; i < uBuffer.length; ++i) {\r\n        vertices[i] = uBuffer[i];\r\n    }\r\n\r\n    var start = uBuffer.length;\r\n\r\n    for (i = 0; i < vBuffer.length; ++i) {\r\n        vertices[start + i] = vBuffer[i];\r\n    }\r\n\r\n    start += vBuffer.length;\r\n\r\n    for (i = 0; i < heightBuffer.length; ++i) {\r\n        vertices[start + i] = (maxShort * (heightBuffer[i] - minimumHeight)) / heightRange;\r\n    }\r\n\r\n    var indicesTypedArray = IndexDatatype.createTypedArray(uBuffer.length, indices);\r\n\r\n    var encodedNormals;\r\n    if (hasVertexNormals) {\r\n        var normalArray = new Uint8Array(normalBuffer);\r\n        transferableObjects.push(vertices.buffer, indicesTypedArray.buffer, normalArray.buffer);\r\n        encodedNormals = normalArray.buffer;\r\n    } else {\r\n        transferableObjects.push(vertices.buffer, indicesTypedArray.buffer);\r\n    }\r\n\r\n    return {\r\n        vertices: vertices.buffer,\r\n        encodedNormals: encodedNormals,\r\n        indices: indicesTypedArray.buffer,\r\n        minimumHeight: minimumHeight,\r\n        maximumHeight: maximumHeight,\r\n        westIndices: westIndices,\r\n        southIndices: southIndices,\r\n        eastIndices: eastIndices,\r\n        northIndices: northIndices,\r\n        boundingSphere: boundingSphere,\r\n        orientedBoundingBox: orientedBoundingBox,\r\n        horizonOcclusionPoint: horizonOcclusionPoint\r\n    };\r\n}\r\n\r\nfunction Vertex() {\r\n    this.vertexBuffer = undefined;\r\n    this.index = undefined;\r\n    this.first = undefined;\r\n    this.second = undefined;\r\n    this.ratio = undefined;\r\n}\r\n\r\nVertex.prototype.clone = function (result) {\r\n    if (!defined(result)) {\r\n        result = new Vertex();\r\n    }\r\n\r\n    result.uBuffer = this.uBuffer;\r\n    result.vBuffer = this.vBuffer;\r\n    result.heightBuffer = this.heightBuffer;\r\n    result.normalBuffer = this.normalBuffer;\r\n    result.index = this.index;\r\n    result.first = this.first;\r\n    result.second = this.second;\r\n    result.ratio = this.ratio;\r\n\r\n    return result;\r\n};\r\n\r\nVertex.prototype.initializeIndexed = function (uBuffer, vBuffer, heightBuffer, normalBuffer, index) {\r\n    this.uBuffer = uBuffer;\r\n    this.vBuffer = vBuffer;\r\n    this.heightBuffer = heightBuffer;\r\n    this.normalBuffer = normalBuffer;\r\n    this.index = index;\r\n    this.first = undefined;\r\n    this.second = undefined;\r\n    this.ratio = undefined;\r\n};\r\n\r\nVertex.prototype.initializeFromClipResult = function (clipResult, index, vertices) {\r\n    var nextIndex = index + 1;\r\n\r\n    if (clipResult[index] !== -1) {\r\n        vertices[clipResult[index]].clone(this);\r\n    } else {\r\n        this.vertexBuffer = undefined;\r\n        this.index = undefined;\r\n        this.first = vertices[clipResult[nextIndex]];\r\n        ++nextIndex;\r\n        this.second = vertices[clipResult[nextIndex]];\r\n        ++nextIndex;\r\n        this.ratio = clipResult[nextIndex];\r\n        ++nextIndex;\r\n    }\r\n\r\n    return nextIndex;\r\n};\r\n\r\nVertex.prototype.getKey = function () {\r\n    if (this.isIndexed()) {\r\n        return this.index;\r\n    }\r\n    return JSON.stringify({\r\n        first: this.first.getKey(),\r\n        second: this.second.getKey(),\r\n        ratio: this.ratio\r\n    });\r\n};\r\n\r\nVertex.prototype.isIndexed = function () {\r\n    return defined(this.index);\r\n};\r\n\r\nVertex.prototype.getH = function () {\r\n    if (defined(this.index)) {\r\n        return this.heightBuffer[this.index];\r\n    }\r\n    return CesiumMath.lerp(this.first.getH(), this.second.getH(), this.ratio);\r\n};\r\n\r\nVertex.prototype.getU = function () {\r\n    if (defined(this.index)) {\r\n        return this.uBuffer[this.index];\r\n    }\r\n    return CesiumMath.lerp(this.first.getU(), this.second.getU(), this.ratio);\r\n};\r\n\r\nVertex.prototype.getV = function () {\r\n    if (defined(this.index)) {\r\n        return this.vBuffer[this.index];\r\n    }\r\n    return CesiumMath.lerp(this.first.getV(), this.second.getV(), this.ratio);\r\n};\r\n\r\nvar encodedScratch = new Cartesian2();\r\n// An upsampled triangle may be clipped twice before it is assigned an index\r\n// In this case, we need a buffer to handle the recursion of getNormalX() and getNormalY().\r\nvar depth = -1;\r\nvar cartesianScratch1 = [new Cartesian3(), new Cartesian3()];\r\nvar cartesianScratch2 = [new Cartesian3(), new Cartesian3()];\r\nfunction lerpOctEncodedNormal(vertex, result) {\r\n    ++depth;\r\n\r\n    var first = cartesianScratch1[depth];\r\n    var second = cartesianScratch2[depth];\r\n\r\n    first = AttributeCompression.octDecode(vertex.first.getNormalX(), vertex.first.getNormalY(), first);\r\n    second = AttributeCompression.octDecode(vertex.second.getNormalX(), vertex.second.getNormalY(), second);\r\n    cartesian3Scratch = Cartesian3.lerp(first, second, vertex.ratio, cartesian3Scratch);\r\n    Cartesian3.normalize(cartesian3Scratch, cartesian3Scratch);\r\n\r\n    AttributeCompression.octEncode(cartesian3Scratch, result);\r\n\r\n    --depth;\r\n\r\n    return result;\r\n}\r\n\r\nVertex.prototype.getNormalX = function () {\r\n    if (defined(this.index)) {\r\n        return this.normalBuffer[this.index * 2];\r\n    }\r\n\r\n    encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\r\n    return encodedScratch.x;\r\n};\r\n\r\nVertex.prototype.getNormalY = function () {\r\n    if (defined(this.index)) {\r\n        return this.normalBuffer[this.index * 2 + 1];\r\n    }\r\n\r\n    encodedScratch = lerpOctEncodedNormal(this, encodedScratch);\r\n    return encodedScratch.y;\r\n};\r\n\r\nvar polygonVertices = [];\r\npolygonVertices.push(new Vertex());\r\npolygonVertices.push(new Vertex());\r\npolygonVertices.push(new Vertex());\r\npolygonVertices.push(new Vertex());\r\n\r\nfunction addClippedPolygon(uBuffer, vBuffer, heightBuffer, normalBuffer, indices, vertexMap, clipped, triangleVertices, hasVertexNormals) {\r\n    if (clipped.length === 0) {\r\n        return;\r\n    }\r\n\r\n    var numVertices = 0;\r\n    var clippedIndex = 0;\r\n    while (clippedIndex < clipped.length) {\r\n        clippedIndex = polygonVertices[numVertices++].initializeFromClipResult(clipped, clippedIndex, triangleVertices);\r\n    }\r\n\r\n    for (var i = 0; i < numVertices; ++i) {\r\n        var polygonVertex = polygonVertices[i];\r\n        if (!polygonVertex.isIndexed()) {\r\n            var key = polygonVertex.getKey();\r\n            if (defined(vertexMap[key])) {\r\n                polygonVertex.newIndex = vertexMap[key];\r\n            } else {\r\n                var newIndex = uBuffer.length;\r\n                uBuffer.push(polygonVertex.getU());\r\n                vBuffer.push(polygonVertex.getV());\r\n                heightBuffer.push(polygonVertex.getH());\r\n                if (hasVertexNormals) {\r\n                    normalBuffer.push(polygonVertex.getNormalX());\r\n                    normalBuffer.push(polygonVertex.getNormalY());\r\n                }\r\n                polygonVertex.newIndex = newIndex;\r\n                vertexMap[key] = newIndex;\r\n            }\r\n        } else {\r\n            polygonVertex.newIndex = vertexMap[polygonVertex.index];\r\n            polygonVertex.uBuffer = uBuffer;\r\n            polygonVertex.vBuffer = vBuffer;\r\n            polygonVertex.heightBuffer = heightBuffer;\r\n            if (hasVertexNormals) {\r\n                polygonVertex.normalBuffer = normalBuffer;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (numVertices === 3) {\r\n        // A triangle.\r\n        indices.push(polygonVertices[0].newIndex);\r\n        indices.push(polygonVertices[1].newIndex);\r\n        indices.push(polygonVertices[2].newIndex);\r\n    } else if (numVertices === 4) {\r\n        // A quad - two triangles.\r\n        indices.push(polygonVertices[0].newIndex);\r\n        indices.push(polygonVertices[1].newIndex);\r\n        indices.push(polygonVertices[2].newIndex);\r\n\r\n        indices.push(polygonVertices[0].newIndex);\r\n        indices.push(polygonVertices[2].newIndex);\r\n        indices.push(polygonVertices[3].newIndex);\r\n    }\r\n}\r\nexport default createTaskProcessorWorker(upsampleQuantizedTerrainMesh);\r\n"],"names":["defined","DeveloperError","Cartesian3","Check","Cartesian2","Cartographic","BoundingSphere","OrientedBoundingBox","TerrainEncoding","CesiumMath","Ellipsoid","Rectangle","EllipsoidalOccluder","IndexDatatype","AttributeCompression"],"mappings":"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"}