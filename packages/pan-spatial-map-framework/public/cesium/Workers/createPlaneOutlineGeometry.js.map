{"version":3,"file":"createPlaneOutlineGeometry.js","sources":["../../../../Source/Core/PlaneOutlineGeometry.js","../../../../Source/WorkersES6/createPlaneOutlineGeometry.js"],"sourcesContent":["import BoundingSphere from './BoundingSphere.js';\r\nimport Cartesian3 from './Cartesian3.js';\r\nimport Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defined from './defined.js';\r\nimport Geometry from './Geometry.js';\r\nimport GeometryAttribute from './GeometryAttribute.js';\r\nimport GeometryAttributes from './GeometryAttributes.js';\r\nimport PrimitiveType from './PrimitiveType.js';\r\n\r\n/**\r\n * Describes geometry representing the outline of a plane centered at the origin, with a unit width and length.\r\n *\r\n * @alias PlaneOutlineGeometry\r\n * @constructor\r\n *\r\n */\r\nfunction PlaneOutlineGeometry() {\r\n    this._workerName = 'createPlaneOutlineGeometry';\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nPlaneOutlineGeometry.packedLength = 0;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {PlaneOutlineGeometry} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nPlaneOutlineGeometry.pack = function (value, array) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('value', value);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    return array;\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {PlaneOutlineGeometry} [result] The object into which to store the result.\r\n * @returns {PlaneOutlineGeometry} The modified result parameter or a new PlaneOutlineGeometry instance if one was not provided.\r\n */\r\nPlaneOutlineGeometry.unpack = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        return new PlaneOutlineGeometry();\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nvar min = new Cartesian3(-0.5, -0.5, 0.0);\r\nvar max = new Cartesian3(0.5, 0.5, 0.0);\r\n\r\n/**\r\n * Computes the geometric representation of an outline of a plane, including its vertices, indices, and a bounding sphere.\r\n *\r\n * @returns {Geometry|undefined} The computed vertices and indices.\r\n */\r\nPlaneOutlineGeometry.createGeometry = function () {\r\n    var attributes = new GeometryAttributes();\r\n    var indices = new Uint16Array(4 * 2);\r\n    var positions = new Float64Array(4 * 3);\r\n\r\n    positions[0] = min.x;\r\n    positions[1] = min.y;\r\n    positions[2] = min.z;\r\n    positions[3] = max.x;\r\n    positions[4] = min.y;\r\n    positions[5] = min.z;\r\n    positions[6] = max.x;\r\n    positions[7] = max.y;\r\n    positions[8] = min.z;\r\n    positions[9] = min.x;\r\n    positions[10] = max.y;\r\n    positions[11] = min.z;\r\n\r\n    attributes.position = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.DOUBLE,\r\n        componentsPerAttribute: 3,\r\n        values: positions\r\n    });\r\n\r\n    indices[0] = 0;\r\n    indices[1] = 1;\r\n    indices[2] = 1;\r\n    indices[3] = 2;\r\n    indices[4] = 2;\r\n    indices[5] = 3;\r\n    indices[6] = 3;\r\n    indices[7] = 0;\r\n\r\n    return new Geometry({\r\n        attributes: attributes,\r\n        indices: indices,\r\n        primitiveType: PrimitiveType.LINES,\r\n        boundingSphere: new BoundingSphere(Cartesian3.ZERO, Math.sqrt(2.0))\r\n    });\r\n};\r\nexport default PlaneOutlineGeometry;\r\n","import defined from '../Core/defined.js';\r\nimport PlaneOutlineGeometry from '../Core/PlaneOutlineGeometry.js';\r\n\r\nfunction createPlaneOutlineGeometry(planeGeometry, offset) {\r\n    if (defined(offset)) {\r\n        planeGeometry = PlaneOutlineGeometry.unpack(planeGeometry, offset);\r\n    }\r\n    return PlaneOutlineGeometry.createGeometry(planeGeometry);\r\n}\r\nexport default createPlaneOutlineGeometry;\r\n"],"names":["Check","defined","Cartesian3","GeometryAttributes","GeometryAttribute","ComponentDatatype","Geometry","PrimitiveType","BoundingSphere"],"mappings":"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"}