{"version":3,"file":"PrimitivePipeline-9b20c328.js","sources":["../../../../Source/Core/OffsetGeometryInstanceAttribute.js","../../../../Source/Scene/PrimitivePipeline.js"],"sourcesContent":["import Check from './Check.js';\r\nimport ComponentDatatype from './ComponentDatatype.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\n\r\n/**\r\n * Value and type information for per-instance geometry attribute that determines the geometry instance offset\r\n *\r\n * @alias OffsetGeometryInstanceAttribute\r\n * @constructor\r\n *\r\n * @param {Number} [x=0] The x translation\r\n * @param {Number} [y=0] The y translation\r\n * @param {Number} [z=0] The z translation\r\n *\r\n * @private\r\n *\r\n * @see GeometryInstance\r\n * @see GeometryInstanceAttribute\r\n */\r\nfunction OffsetGeometryInstanceAttribute(x, y, z) {\r\n    x = defaultValue(x, 0);\r\n    y = defaultValue(y, 0);\r\n    z = defaultValue(z, 0);\r\n\r\n    /**\r\n     * The values for the attributes stored in a typed array.\r\n     *\r\n     * @type Float32Array\r\n     */\r\n    this.value = new Float32Array([x, y, z]);\r\n}\r\n\r\nObject.defineProperties(OffsetGeometryInstanceAttribute.prototype, {\r\n    /**\r\n     * The datatype of each component in the attribute, e.g., individual elements in\r\n     * {@link OffsetGeometryInstanceAttribute#value}.\r\n     *\r\n     * @memberof OffsetGeometryInstanceAttribute.prototype\r\n     *\r\n     * @type {ComponentDatatype}\r\n     * @readonly\r\n     *\r\n     * @default {@link ComponentDatatype.FLOAT}\r\n     */\r\n    componentDatatype: {\r\n        get: function () {\r\n            return ComponentDatatype.FLOAT;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * The number of components in the attributes, i.e., {@link OffsetGeometryInstanceAttribute#value}.\r\n     *\r\n     * @memberof OffsetGeometryInstanceAttribute.prototype\r\n     *\r\n     * @type {Number}\r\n     * @readonly\r\n     *\r\n     * @default 3\r\n     */\r\n    componentsPerAttribute: {\r\n        get: function () {\r\n            return 3;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * When <code>true</code> and <code>componentDatatype</code> is an integer format,\r\n     * indicate that the components should be mapped to the range [0, 1] (unsigned)\r\n     * or [-1, 1] (signed) when they are accessed as floating-point for rendering.\r\n     *\r\n     * @memberof OffsetGeometryInstanceAttribute.prototype\r\n     *\r\n     * @type {Boolean}\r\n     * @readonly\r\n     *\r\n     * @default false\r\n     */\r\n    normalize: {\r\n        get: function () {\r\n            return false;\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Creates a new {@link OffsetGeometryInstanceAttribute} instance given the provided an enabled flag and {@link DistanceDisplayCondition}.\r\n *\r\n * @param {Cartesian3} offset The cartesian offset\r\n * @returns {OffsetGeometryInstanceAttribute} The new {@link OffsetGeometryInstanceAttribute} instance.\r\n */\r\nOffsetGeometryInstanceAttribute.fromCartesian3 = function (offset) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('offset', offset);\r\n    //>>includeEnd('debug');\r\n\r\n    return new OffsetGeometryInstanceAttribute(offset.x, offset.y, offset.z);\r\n};\r\n\r\n/**\r\n * Converts a distance display condition to a typed array that can be used to assign a distance display condition attribute.\r\n *\r\n * @param {Cartesian3} offset The cartesian offset\r\n * @param {Float32Array} [result] The array to store the result in, if undefined a new instance will be created.\r\n * @returns {Float32Array} The modified result parameter or a new instance if result was undefined.\r\n *\r\n * @example\r\n * var attributes = primitive.getGeometryInstanceAttributes('an id');\r\n * attributes.modelMatrix = Cesium.OffsetGeometryInstanceAttribute.toValue(modelMatrix, attributes.modelMatrix);\r\n */\r\nOffsetGeometryInstanceAttribute.toValue = function (offset, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('offset', offset);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        result = new Float32Array([offset.x, offset.y, offset.z]);\r\n    }\r\n\r\n    result[0] = offset.x;\r\n    result[1] = offset.y;\r\n    result[2] = offset.z;\r\n    return result;\r\n};\r\nexport default OffsetGeometryInstanceAttribute;\r\n","import BoundingSphere from '../Core/BoundingSphere.js';\r\nimport ComponentDatatype from '../Core/ComponentDatatype.js';\r\nimport defaultValue from '../Core/defaultValue.js';\r\nimport defined from '../Core/defined.js';\r\nimport DeveloperError from '../Core/DeveloperError.js';\r\nimport Ellipsoid from '../Core/Ellipsoid.js';\r\nimport GeographicProjection from '../Core/GeographicProjection.js';\r\nimport Geometry from '../Core/Geometry.js';\r\nimport GeometryAttribute from '../Core/GeometryAttribute.js';\r\nimport GeometryAttributes from '../Core/GeometryAttributes.js';\r\nimport GeometryPipeline from '../Core/GeometryPipeline.js';\r\nimport IndexDatatype from '../Core/IndexDatatype.js';\r\nimport Matrix4 from '../Core/Matrix4.js';\r\nimport OffsetGeometryInstanceAttribute from '../Core/OffsetGeometryInstanceAttribute.js';\r\nimport WebMercatorProjection from '../Core/WebMercatorProjection.js';\r\n\r\nfunction transformToWorldCoordinates(instances, primitiveModelMatrix, scene3DOnly) {\r\n    var toWorld = !scene3DOnly;\r\n    var length = instances.length;\r\n    var i;\r\n\r\n    if (!toWorld && length > 1) {\r\n        var modelMatrix = instances[0].modelMatrix;\r\n\r\n        for (i = 1; i < length; ++i) {\r\n            if (!Matrix4.equals(modelMatrix, instances[i].modelMatrix)) {\r\n                toWorld = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (toWorld) {\r\n        for (i = 0; i < length; ++i) {\r\n            if (defined(instances[i].geometry)) {\r\n                GeometryPipeline.transformToWorldCoordinates(instances[i]);\r\n            }\r\n        }\r\n    } else {\r\n        // Leave geometry in local coordinate system; auto update model-matrix.\r\n        Matrix4.multiplyTransformation(primitiveModelMatrix, instances[0].modelMatrix, primitiveModelMatrix);\r\n    }\r\n}\r\n\r\nfunction addGeometryBatchId(geometry, batchId) {\r\n    var attributes = geometry.attributes;\r\n    var positionAttr = attributes.position;\r\n    var numberOfComponents = positionAttr.values.length / positionAttr.componentsPerAttribute;\r\n\r\n    attributes.batchId = new GeometryAttribute({\r\n        componentDatatype: ComponentDatatype.FLOAT,\r\n        componentsPerAttribute: 1,\r\n        values: new Float32Array(numberOfComponents)\r\n    });\r\n\r\n    var values = attributes.batchId.values;\r\n    for (var j = 0; j < numberOfComponents; ++j) {\r\n        values[j] = batchId;\r\n    }\r\n}\r\n\r\nfunction addBatchIds(instances) {\r\n    var length = instances.length;\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n        var instance = instances[i];\r\n        if (defined(instance.geometry)) {\r\n            addGeometryBatchId(instance.geometry, i);\r\n        } else if (defined(instance.westHemisphereGeometry) && defined(instance.eastHemisphereGeometry)) {\r\n            addGeometryBatchId(instance.westHemisphereGeometry, i);\r\n            addGeometryBatchId(instance.eastHemisphereGeometry, i);\r\n        }\r\n    }\r\n}\r\n\r\nfunction geometryPipeline(parameters) {\r\n    var instances = parameters.instances;\r\n    var projection = parameters.projection;\r\n    var uintIndexSupport = parameters.elementIndexUintSupported;\r\n    var scene3DOnly = parameters.scene3DOnly;\r\n    var vertexCacheOptimize = parameters.vertexCacheOptimize;\r\n    var compressVertices = parameters.compressVertices;\r\n    var modelMatrix = parameters.modelMatrix;\r\n\r\n    var i;\r\n    var geometry;\r\n    var primitiveType;\r\n    var length = instances.length;\r\n\r\n    for (i = 0; i < length; ++i) {\r\n        if (defined(instances[i].geometry)) {\r\n            primitiveType = instances[i].geometry.primitiveType;\r\n            break;\r\n        }\r\n    }\r\n\r\n    //>>includeStart('debug', pragmas.debug);\r\n    for (i = 1; i < length; ++i) {\r\n        if (defined(instances[i].geometry) && instances[i].geometry.primitiveType !== primitiveType) {\r\n            throw new DeveloperError('All instance geometries must have the same primitiveType.');\r\n        }\r\n    }\r\n    //>>includeEnd('debug');\r\n\r\n    // Unify to world coordinates before combining.\r\n    transformToWorldCoordinates(instances, modelMatrix, scene3DOnly);\r\n\r\n    // Clip to IDL\r\n    if (!scene3DOnly) {\r\n        for (i = 0; i < length; ++i) {\r\n            if (defined(instances[i].geometry)) {\r\n                GeometryPipeline.splitLongitude(instances[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    addBatchIds(instances);\r\n\r\n    // Optimize for vertex shader caches\r\n    if (vertexCacheOptimize) {\r\n        for (i = 0; i < length; ++i) {\r\n            var instance = instances[i];\r\n            if (defined(instance.geometry)) {\r\n                GeometryPipeline.reorderForPostVertexCache(instance.geometry);\r\n                GeometryPipeline.reorderForPreVertexCache(instance.geometry);\r\n            } else if (defined(instance.westHemisphereGeometry) && defined(instance.eastHemisphereGeometry)) {\r\n                GeometryPipeline.reorderForPostVertexCache(instance.westHemisphereGeometry);\r\n                GeometryPipeline.reorderForPreVertexCache(instance.westHemisphereGeometry);\r\n\r\n                GeometryPipeline.reorderForPostVertexCache(instance.eastHemisphereGeometry);\r\n                GeometryPipeline.reorderForPreVertexCache(instance.eastHemisphereGeometry);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Combine into single geometry for better rendering performance.\r\n    var geometries = GeometryPipeline.combineInstances(instances);\r\n\r\n    length = geometries.length;\r\n    for (i = 0; i < length; ++i) {\r\n        geometry = geometries[i];\r\n\r\n        // Split positions for GPU RTE\r\n        var attributes = geometry.attributes;\r\n        var name;\r\n        if (!scene3DOnly) {\r\n            for (name in attributes) {\r\n                if (attributes.hasOwnProperty(name) && attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\r\n                    var name3D = name + '3D';\r\n                    var name2D = name + '2D';\r\n\r\n                    // Compute 2D positions\r\n                    GeometryPipeline.projectTo2D(geometry, name, name3D, name2D, projection);\r\n                    if (defined(geometry.boundingSphere) && name === 'position') {\r\n                        geometry.boundingSphereCV = BoundingSphere.fromVertices(geometry.attributes.position2D.values);\r\n                    }\r\n\r\n                    GeometryPipeline.encodeAttribute(geometry, name3D, name3D + 'High', name3D + 'Low');\r\n                    GeometryPipeline.encodeAttribute(geometry, name2D, name2D + 'High', name2D + 'Low');\r\n                }\r\n            }\r\n        } else {\r\n            for (name in attributes) {\r\n                if (attributes.hasOwnProperty(name) && attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\r\n                    GeometryPipeline.encodeAttribute(geometry, name, name + '3DHigh', name + '3DLow');\r\n                }\r\n            }\r\n        }\r\n\r\n        // oct encode and pack normals, compress texture coordinates\r\n        if (compressVertices) {\r\n            GeometryPipeline.compressVertices(geometry);\r\n        }\r\n    }\r\n\r\n    if (!uintIndexSupport) {\r\n        // Break into multiple geometries to fit within unsigned short indices if needed\r\n        var splitGeometries = [];\r\n        length = geometries.length;\r\n        for (i = 0; i < length; ++i) {\r\n            geometry = geometries[i];\r\n            splitGeometries = splitGeometries.concat(GeometryPipeline.fitToUnsignedShortIndices(geometry));\r\n        }\r\n\r\n        geometries = splitGeometries;\r\n    }\r\n\r\n    return geometries;\r\n}\r\n\r\nfunction createPickOffsets(instances, geometryName, geometries, pickOffsets) {\r\n    var offset;\r\n    var indexCount;\r\n    var geometryIndex;\r\n\r\n    var offsetIndex = pickOffsets.length - 1;\r\n    if (offsetIndex >= 0) {\r\n        var pickOffset = pickOffsets[offsetIndex];\r\n        offset = pickOffset.offset + pickOffset.count;\r\n        geometryIndex = pickOffset.index;\r\n        indexCount = geometries[geometryIndex].indices.length;\r\n    } else {\r\n        offset = 0;\r\n        geometryIndex = 0;\r\n        indexCount = geometries[geometryIndex].indices.length;\r\n    }\r\n\r\n    var length = instances.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        var instance = instances[i];\r\n        var geometry = instance[geometryName];\r\n        if (!defined(geometry)) {\r\n            continue;\r\n        }\r\n\r\n        var count = geometry.indices.length;\r\n\r\n        if (offset + count > indexCount) {\r\n            offset = 0;\r\n            indexCount = geometries[++geometryIndex].indices.length;\r\n        }\r\n\r\n        pickOffsets.push({\r\n            index: geometryIndex,\r\n            offset: offset,\r\n            count: count\r\n        });\r\n        offset += count;\r\n    }\r\n}\r\n\r\nfunction createInstancePickOffsets(instances, geometries) {\r\n    var pickOffsets = [];\r\n    createPickOffsets(instances, 'geometry', geometries, pickOffsets);\r\n    createPickOffsets(instances, 'westHemisphereGeometry', geometries, pickOffsets);\r\n    createPickOffsets(instances, 'eastHemisphereGeometry', geometries, pickOffsets);\r\n    return pickOffsets;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nvar PrimitivePipeline = {};\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.combineGeometry = function (parameters) {\r\n    var geometries;\r\n    var attributeLocations;\r\n    var instances = parameters.instances;\r\n    var length = instances.length;\r\n    var pickOffsets;\r\n\r\n    var offsetInstanceExtend;\r\n    var hasOffset = false;\r\n    if (length > 0) {\r\n        geometries = geometryPipeline(parameters);\r\n        if (geometries.length > 0) {\r\n            attributeLocations = GeometryPipeline.createAttributeLocations(geometries[0]);\r\n            if (parameters.createPickOffsets) {\r\n                pickOffsets = createInstancePickOffsets(instances, geometries);\r\n            }\r\n        }\r\n        if (defined(instances[0].attributes) && defined(instances[0].attributes.offset)) {\r\n            offsetInstanceExtend = new Array(length);\r\n            hasOffset = true;\r\n        }\r\n    }\r\n\r\n    var boundingSpheres = new Array(length);\r\n    var boundingSpheresCV = new Array(length);\r\n    for (var i = 0; i < length; ++i) {\r\n        var instance = instances[i];\r\n        var geometry = instance.geometry;\r\n        if (defined(geometry)) {\r\n            boundingSpheres[i] = geometry.boundingSphere;\r\n            boundingSpheresCV[i] = geometry.boundingSphereCV;\r\n            if (hasOffset) {\r\n                offsetInstanceExtend[i] = instance.geometry.offsetAttribute;\r\n            }\r\n        }\r\n\r\n        var eastHemisphereGeometry = instance.eastHemisphereGeometry;\r\n        var westHemisphereGeometry = instance.westHemisphereGeometry;\r\n        if (defined(eastHemisphereGeometry) && defined(westHemisphereGeometry)) {\r\n            if (defined(eastHemisphereGeometry.boundingSphere) && defined(westHemisphereGeometry.boundingSphere)) {\r\n                boundingSpheres[i] = BoundingSphere.union(eastHemisphereGeometry.boundingSphere, westHemisphereGeometry.boundingSphere);\r\n            }\r\n            if (defined(eastHemisphereGeometry.boundingSphereCV) && defined(westHemisphereGeometry.boundingSphereCV)) {\r\n                boundingSpheresCV[i] = BoundingSphere.union(eastHemisphereGeometry.boundingSphereCV, westHemisphereGeometry.boundingSphereCV);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        geometries: geometries,\r\n        modelMatrix: parameters.modelMatrix,\r\n        attributeLocations: attributeLocations,\r\n        pickOffsets: pickOffsets,\r\n        offsetInstanceExtend: offsetInstanceExtend,\r\n        boundingSpheres: boundingSpheres,\r\n        boundingSpheresCV: boundingSpheresCV\r\n    };\r\n};\r\n\r\nfunction transferGeometry(geometry, transferableObjects) {\r\n    var attributes = geometry.attributes;\r\n    for (var name in attributes) {\r\n        if (attributes.hasOwnProperty(name)) {\r\n            var attribute = attributes[name];\r\n\r\n            if (defined(attribute) && defined(attribute.values)) {\r\n                transferableObjects.push(attribute.values.buffer);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (defined(geometry.indices)) {\r\n        transferableObjects.push(geometry.indices.buffer);\r\n    }\r\n}\r\n\r\nfunction transferGeometries(geometries, transferableObjects) {\r\n    var length = geometries.length;\r\n    for (var i = 0; i < length; ++i) {\r\n        transferGeometry(geometries[i], transferableObjects);\r\n    }\r\n}\r\n\r\n// This function was created by simplifying packCreateGeometryResults into a count-only operation.\r\nfunction countCreateGeometryResults(items) {\r\n    var count = 1;\r\n    var length = items.length;\r\n    for (var i = 0; i < length; i++) {\r\n        var geometry = items[i];\r\n        ++count;\r\n\r\n        if (!defined(geometry)) {\r\n            continue;\r\n        }\r\n\r\n        var attributes = geometry.attributes;\r\n\r\n        count += 7 + 2 * BoundingSphere.packedLength + (defined(geometry.indices) ? geometry.indices.length : 0);\r\n\r\n        for (var property in attributes) {\r\n            if (attributes.hasOwnProperty(property) && defined(attributes[property])) {\r\n                var attribute = attributes[property];\r\n                count += 5 + attribute.values.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    return count;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.packCreateGeometryResults = function (items, transferableObjects) {\r\n    var packedData = new Float64Array(countCreateGeometryResults(items));\r\n    var stringTable = [];\r\n    var stringHash = {};\r\n\r\n    var length = items.length;\r\n    var count = 0;\r\n    packedData[count++] = length;\r\n    for (var i = 0; i < length; i++) {\r\n        var geometry = items[i];\r\n\r\n        var validGeometry = defined(geometry);\r\n        packedData[count++] = validGeometry ? 1.0 : 0.0;\r\n\r\n        if (!validGeometry) {\r\n            continue;\r\n        }\r\n\r\n        packedData[count++] = geometry.primitiveType;\r\n        packedData[count++] = geometry.geometryType;\r\n        packedData[count++] = defaultValue(geometry.offsetAttribute, -1);\r\n\r\n        var validBoundingSphere = defined(geometry.boundingSphere) ? 1.0 : 0.0;\r\n        packedData[count++] = validBoundingSphere;\r\n        if (validBoundingSphere) {\r\n            BoundingSphere.pack(geometry.boundingSphere, packedData, count);\r\n        }\r\n\r\n        count += BoundingSphere.packedLength;\r\n\r\n        var validBoundingSphereCV = defined(geometry.boundingSphereCV) ? 1.0 : 0.0;\r\n        packedData[count++] = validBoundingSphereCV;\r\n        if (validBoundingSphereCV) {\r\n            BoundingSphere.pack(geometry.boundingSphereCV, packedData, count);\r\n        }\r\n\r\n        count += BoundingSphere.packedLength;\r\n\r\n        var attributes = geometry.attributes;\r\n        var attributesToWrite = [];\r\n        for (var property in attributes) {\r\n            if (attributes.hasOwnProperty(property) && defined(attributes[property])) {\r\n                attributesToWrite.push(property);\r\n                if (!defined(stringHash[property])) {\r\n                    stringHash[property] = stringTable.length;\r\n                    stringTable.push(property);\r\n                }\r\n            }\r\n        }\r\n\r\n        packedData[count++] = attributesToWrite.length;\r\n        for (var q = 0; q < attributesToWrite.length; q++) {\r\n            var name = attributesToWrite[q];\r\n            var attribute = attributes[name];\r\n            packedData[count++] = stringHash[name];\r\n            packedData[count++] = attribute.componentDatatype;\r\n            packedData[count++] = attribute.componentsPerAttribute;\r\n            packedData[count++] = attribute.normalize ? 1 : 0;\r\n            packedData[count++] = attribute.values.length;\r\n            packedData.set(attribute.values, count);\r\n            count += attribute.values.length;\r\n        }\r\n\r\n        var indicesLength = defined(geometry.indices) ? geometry.indices.length : 0;\r\n        packedData[count++] = indicesLength;\r\n\r\n        if (indicesLength > 0) {\r\n            packedData.set(geometry.indices, count);\r\n            count += indicesLength;\r\n        }\r\n    }\r\n\r\n    transferableObjects.push(packedData.buffer);\r\n\r\n    return {\r\n        stringTable: stringTable,\r\n        packedData: packedData\r\n    };\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.unpackCreateGeometryResults = function (createGeometryResult) {\r\n    var stringTable = createGeometryResult.stringTable;\r\n    var packedGeometry = createGeometryResult.packedData;\r\n\r\n    var i;\r\n    var result = new Array(packedGeometry[0]);\r\n    var resultIndex = 0;\r\n\r\n    var packedGeometryIndex = 1;\r\n    while (packedGeometryIndex < packedGeometry.length) {\r\n        var valid = packedGeometry[packedGeometryIndex++] === 1.0;\r\n        if (!valid) {\r\n            result[resultIndex++] = undefined;\r\n            continue;\r\n        }\r\n\r\n        var primitiveType = packedGeometry[packedGeometryIndex++];\r\n        var geometryType = packedGeometry[packedGeometryIndex++];\r\n        var offsetAttribute = packedGeometry[packedGeometryIndex++];\r\n        if (offsetAttribute === -1) {\r\n            offsetAttribute = undefined;\r\n        }\r\n\r\n        var boundingSphere;\r\n        var boundingSphereCV;\r\n\r\n        var validBoundingSphere = packedGeometry[packedGeometryIndex++] === 1.0;\r\n        if (validBoundingSphere) {\r\n            boundingSphere = BoundingSphere.unpack(packedGeometry, packedGeometryIndex);\r\n        }\r\n\r\n        packedGeometryIndex += BoundingSphere.packedLength;\r\n\r\n        var validBoundingSphereCV = packedGeometry[packedGeometryIndex++] === 1.0;\r\n        if (validBoundingSphereCV) {\r\n            boundingSphereCV = BoundingSphere.unpack(packedGeometry, packedGeometryIndex);\r\n        }\r\n\r\n        packedGeometryIndex += BoundingSphere.packedLength;\r\n\r\n        var length;\r\n        var values;\r\n        var componentsPerAttribute;\r\n        var attributes = new GeometryAttributes();\r\n        var numAttributes = packedGeometry[packedGeometryIndex++];\r\n        for (i = 0; i < numAttributes; i++) {\r\n            var name = stringTable[packedGeometry[packedGeometryIndex++]];\r\n            var componentDatatype = packedGeometry[packedGeometryIndex++];\r\n            componentsPerAttribute = packedGeometry[packedGeometryIndex++];\r\n            var normalize = packedGeometry[packedGeometryIndex++] !== 0;\r\n\r\n            length = packedGeometry[packedGeometryIndex++];\r\n            values = ComponentDatatype.createTypedArray(componentDatatype, length);\r\n            for (var valuesIndex = 0; valuesIndex < length; valuesIndex++) {\r\n                values[valuesIndex] = packedGeometry[packedGeometryIndex++];\r\n            }\r\n\r\n            attributes[name] = new GeometryAttribute({\r\n                componentDatatype: componentDatatype,\r\n                componentsPerAttribute: componentsPerAttribute,\r\n                normalize: normalize,\r\n                values: values\r\n            });\r\n        }\r\n\r\n        var indices;\r\n        length = packedGeometry[packedGeometryIndex++];\r\n\r\n        if (length > 0) {\r\n            var numberOfVertices = values.length / componentsPerAttribute;\r\n            indices = IndexDatatype.createTypedArray(numberOfVertices, length);\r\n            for (i = 0; i < length; i++) {\r\n                indices[i] = packedGeometry[packedGeometryIndex++];\r\n            }\r\n        }\r\n\r\n        result[resultIndex++] = new Geometry({\r\n            primitiveType: primitiveType,\r\n            geometryType: geometryType,\r\n            boundingSphere: boundingSphere,\r\n            boundingSphereCV: boundingSphereCV,\r\n            indices: indices,\r\n            attributes: attributes,\r\n            offsetAttribute: offsetAttribute\r\n        });\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nfunction packInstancesForCombine(instances, transferableObjects) {\r\n    var length = instances.length;\r\n    var packedData = new Float64Array(1 + length * 19);\r\n    var count = 0;\r\n    packedData[count++] = length;\r\n    for (var i = 0; i < length; i++) {\r\n        var instance = instances[i];\r\n        Matrix4.pack(instance.modelMatrix, packedData, count);\r\n        count += Matrix4.packedLength;\r\n        if (defined(instance.attributes) && defined(instance.attributes.offset)) {\r\n            var values = instance.attributes.offset.value;\r\n            packedData[count] = values[0];\r\n            packedData[count + 1] = values[1];\r\n            packedData[count + 2] = values[2];\r\n        }\r\n        count += 3;\r\n    }\r\n    transferableObjects.push(packedData.buffer);\r\n\r\n    return packedData;\r\n}\r\n\r\nfunction unpackInstancesForCombine(data) {\r\n    var packedInstances = data;\r\n    var result = new Array(packedInstances[0]);\r\n    var count = 0;\r\n\r\n    var i = 1;\r\n    while (i < packedInstances.length) {\r\n        var modelMatrix = Matrix4.unpack(packedInstances, i);\r\n        var attributes;\r\n        i += Matrix4.packedLength;\r\n        if (defined(packedInstances[i])) {\r\n            attributes = {\r\n                offset: new OffsetGeometryInstanceAttribute(packedInstances[i], packedInstances[i + 1], packedInstances[i + 2])\r\n            };\r\n        }\r\n        i += 3;\r\n\r\n        result[count++] = {\r\n            modelMatrix: modelMatrix,\r\n            attributes: attributes\r\n        };\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.packCombineGeometryParameters = function (parameters, transferableObjects) {\r\n    var createGeometryResults = parameters.createGeometryResults;\r\n    var length = createGeometryResults.length;\r\n\r\n    for (var i = 0; i < length; i++) {\r\n        transferableObjects.push(createGeometryResults[i].packedData.buffer);\r\n    }\r\n\r\n    return {\r\n        createGeometryResults: parameters.createGeometryResults,\r\n        packedInstances: packInstancesForCombine(parameters.instances, transferableObjects),\r\n        ellipsoid: parameters.ellipsoid,\r\n        isGeographic: parameters.projection instanceof GeographicProjection,\r\n        elementIndexUintSupported: parameters.elementIndexUintSupported,\r\n        scene3DOnly: parameters.scene3DOnly,\r\n        vertexCacheOptimize: parameters.vertexCacheOptimize,\r\n        compressVertices: parameters.compressVertices,\r\n        modelMatrix: parameters.modelMatrix,\r\n        createPickOffsets: parameters.createPickOffsets\r\n    };\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.unpackCombineGeometryParameters = function (packedParameters) {\r\n    var instances = unpackInstancesForCombine(packedParameters.packedInstances);\r\n    var createGeometryResults = packedParameters.createGeometryResults;\r\n    var length = createGeometryResults.length;\r\n    var instanceIndex = 0;\r\n\r\n    for (var resultIndex = 0; resultIndex < length; resultIndex++) {\r\n        var geometries = PrimitivePipeline.unpackCreateGeometryResults(createGeometryResults[resultIndex]);\r\n        var geometriesLength = geometries.length;\r\n        for (var geometryIndex = 0; geometryIndex < geometriesLength; geometryIndex++) {\r\n            var geometry = geometries[geometryIndex];\r\n            var instance = instances[instanceIndex];\r\n            instance.geometry = geometry;\r\n            ++instanceIndex;\r\n        }\r\n    }\r\n\r\n    var ellipsoid = Ellipsoid.clone(packedParameters.ellipsoid);\r\n    var projection = packedParameters.isGeographic ? new GeographicProjection(ellipsoid) : new WebMercatorProjection(ellipsoid);\r\n\r\n    return {\r\n        instances: instances,\r\n        ellipsoid: ellipsoid,\r\n        projection: projection,\r\n        elementIndexUintSupported: packedParameters.elementIndexUintSupported,\r\n        scene3DOnly: packedParameters.scene3DOnly,\r\n        vertexCacheOptimize: packedParameters.vertexCacheOptimize,\r\n        compressVertices: packedParameters.compressVertices,\r\n        modelMatrix: Matrix4.clone(packedParameters.modelMatrix),\r\n        createPickOffsets: packedParameters.createPickOffsets\r\n    };\r\n};\r\n\r\nfunction packBoundingSpheres(boundingSpheres) {\r\n    var length = boundingSpheres.length;\r\n    var bufferLength = 1 + (BoundingSphere.packedLength + 1) * length;\r\n    var buffer = new Float32Array(bufferLength);\r\n\r\n    var bufferIndex = 0;\r\n    buffer[bufferIndex++] = length;\r\n\r\n    for (var i = 0; i < length; ++i) {\r\n        var bs = boundingSpheres[i];\r\n        if (!defined(bs)) {\r\n            buffer[bufferIndex++] = 0.0;\r\n        } else {\r\n            buffer[bufferIndex++] = 1.0;\r\n            BoundingSphere.pack(boundingSpheres[i], buffer, bufferIndex);\r\n        }\r\n        bufferIndex += BoundingSphere.packedLength;\r\n    }\r\n\r\n    return buffer;\r\n}\r\n\r\nfunction unpackBoundingSpheres(buffer) {\r\n    var result = new Array(buffer[0]);\r\n    var count = 0;\r\n\r\n    var i = 1;\r\n    while (i < buffer.length) {\r\n        if (buffer[i++] === 1.0) {\r\n            result[count] = BoundingSphere.unpack(buffer, i);\r\n        }\r\n        ++count;\r\n        i += BoundingSphere.packedLength;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.packCombineGeometryResults = function (results, transferableObjects) {\r\n    if (defined(results.geometries)) {\r\n        transferGeometries(results.geometries, transferableObjects);\r\n    }\r\n\r\n    var packedBoundingSpheres = packBoundingSpheres(results.boundingSpheres);\r\n    var packedBoundingSpheresCV = packBoundingSpheres(results.boundingSpheresCV);\r\n    transferableObjects.push(packedBoundingSpheres.buffer, packedBoundingSpheresCV.buffer);\r\n\r\n    return {\r\n        geometries: results.geometries,\r\n        attributeLocations: results.attributeLocations,\r\n        modelMatrix: results.modelMatrix,\r\n        pickOffsets: results.pickOffsets,\r\n        offsetInstanceExtend: results.offsetInstanceExtend,\r\n        boundingSpheres: packedBoundingSpheres,\r\n        boundingSpheresCV: packedBoundingSpheresCV\r\n    };\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nPrimitivePipeline.unpackCombineGeometryResults = function (packedResult) {\r\n    return {\r\n        geometries: packedResult.geometries,\r\n        attributeLocations: packedResult.attributeLocations,\r\n        modelMatrix: packedResult.modelMatrix,\r\n        pickOffsets: packedResult.pickOffsets,\r\n        offsetInstanceExtend: packedResult.offsetInstanceExtend,\r\n        boundingSpheres: unpackBoundingSpheres(packedResult.boundingSpheres),\r\n        boundingSpheresCV: unpackBoundingSpheres(packedResult.boundingSpheresCV)\r\n    };\r\n};\r\nexport default PrimitivePipeline;\r\n"],"names":["defaultValue","ComponentDatatype","Check","defined","Matrix4","GeometryPipeline","GeometryAttribute","DeveloperError","BoundingSphere","GeometryAttributes","IndexDatatype","Geometry","GeographicProjection","Ellipsoid","WebMercatorProjection"],"mappings":"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"}