{"version":3,"file":"BoundingRectangle-29061d9d.js","sources":["../../../../Source/Core/BoundingRectangle.js"],"sourcesContent":["import Cartesian2 from './Cartesian2.js';\r\nimport Cartographic from './Cartographic.js';\r\nimport Check from './Check.js';\r\nimport defaultValue from './defaultValue.js';\r\nimport defined from './defined.js';\r\nimport GeographicProjection from './GeographicProjection.js';\r\nimport Intersect from './Intersect.js';\r\nimport Rectangle from './Rectangle.js';\r\n\r\n/**\r\n * A bounding rectangle given by a corner, width and height.\r\n * @alias BoundingRectangle\r\n * @constructor\r\n *\r\n * @param {Number} [x=0.0] The x coordinate of the rectangle.\r\n * @param {Number} [y=0.0] The y coordinate of the rectangle.\r\n * @param {Number} [width=0.0] The width of the rectangle.\r\n * @param {Number} [height=0.0] The height of the rectangle.\r\n *\r\n * @see BoundingSphere\r\n * @see Packable\r\n */\r\nfunction BoundingRectangle(x, y, width, height) {\r\n    /**\r\n     * The x coordinate of the rectangle.\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.x = defaultValue(x, 0.0);\r\n\r\n    /**\r\n     * The y coordinate of the rectangle.\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.y = defaultValue(y, 0.0);\r\n\r\n    /**\r\n     * The width of the rectangle.\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.width = defaultValue(width, 0.0);\r\n\r\n    /**\r\n     * The height of the rectangle.\r\n     * @type {Number}\r\n     * @default 0.0\r\n     */\r\n    this.height = defaultValue(height, 0.0);\r\n}\r\n\r\n/**\r\n * The number of elements used to pack the object into an array.\r\n * @type {Number}\r\n */\r\nBoundingRectangle.packedLength = 4;\r\n\r\n/**\r\n * Stores the provided instance into the provided array.\r\n *\r\n * @param {BoundingRectangle} value The value to pack.\r\n * @param {Number[]} array The array to pack into.\r\n * @param {Number} [startingIndex=0] The index into the array at which to start packing the elements.\r\n *\r\n * @returns {Number[]} The array that was packed into\r\n */\r\nBoundingRectangle.pack = function (value, array, startingIndex) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('value', value);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    array[startingIndex++] = value.x;\r\n    array[startingIndex++] = value.y;\r\n    array[startingIndex++] = value.width;\r\n    array[startingIndex] = value.height;\r\n\r\n    return array;\r\n};\r\n\r\n/**\r\n * Retrieves an instance from a packed array.\r\n *\r\n * @param {Number[]} array The packed array.\r\n * @param {Number} [startingIndex=0] The starting index of the element to be unpacked.\r\n * @param {BoundingRectangle} [result] The object into which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\r\n */\r\nBoundingRectangle.unpack = function (array, startingIndex, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.defined('array', array);\r\n    //>>includeEnd('debug');\r\n\r\n    startingIndex = defaultValue(startingIndex, 0);\r\n\r\n    if (!defined(result)) {\r\n        result = new BoundingRectangle();\r\n    }\r\n    result.x = array[startingIndex++];\r\n    result.y = array[startingIndex++];\r\n    result.width = array[startingIndex++];\r\n    result.height = array[startingIndex];\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a bounding rectangle enclosing the list of 2D points.\r\n * The rectangle is oriented with the corner at the bottom left.\r\n *\r\n * @param {Cartesian2[]} positions List of points that the bounding rectangle will enclose.  Each point must have <code>x</code> and <code>y</code> properties.\r\n * @param {BoundingRectangle} [result] The object onto which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\r\n */\r\nBoundingRectangle.fromPoints = function (positions, result) {\r\n    if (!defined(result)) {\r\n        result = new BoundingRectangle();\r\n    }\r\n\r\n    if (!defined(positions) || positions.length === 0) {\r\n        result.x = 0;\r\n        result.y = 0;\r\n        result.width = 0;\r\n        result.height = 0;\r\n        return result;\r\n    }\r\n\r\n    var length = positions.length;\r\n\r\n    var minimumX = positions[0].x;\r\n    var minimumY = positions[0].y;\r\n\r\n    var maximumX = positions[0].x;\r\n    var maximumY = positions[0].y;\r\n\r\n    for (var i = 1; i < length; i++) {\r\n        var p = positions[i];\r\n        var x = p.x;\r\n        var y = p.y;\r\n\r\n        minimumX = Math.min(x, minimumX);\r\n        maximumX = Math.max(x, maximumX);\r\n        minimumY = Math.min(y, minimumY);\r\n        maximumY = Math.max(y, maximumY);\r\n    }\r\n\r\n    result.x = minimumX;\r\n    result.y = minimumY;\r\n    result.width = maximumX - minimumX;\r\n    result.height = maximumY - minimumY;\r\n    return result;\r\n};\r\n\r\nvar defaultProjection = new GeographicProjection();\r\nvar fromRectangleLowerLeft = new Cartographic();\r\nvar fromRectangleUpperRight = new Cartographic();\r\n/**\r\n * Computes a bounding rectangle from a rectangle.\r\n *\r\n * @param {Rectangle} rectangle The valid rectangle used to create a bounding rectangle.\r\n * @param {Object} [projection=GeographicProjection] The projection used to project the rectangle into 2D.\r\n * @param {BoundingRectangle} [result] The object onto which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\r\n */\r\nBoundingRectangle.fromRectangle = function (rectangle, projection, result) {\r\n    if (!defined(result)) {\r\n        result = new BoundingRectangle();\r\n    }\r\n\r\n    if (!defined(rectangle)) {\r\n        result.x = 0;\r\n        result.y = 0;\r\n        result.width = 0;\r\n        result.height = 0;\r\n        return result;\r\n    }\r\n\r\n    projection = defaultValue(projection, defaultProjection);\r\n\r\n    var lowerLeft = projection.project(Rectangle.southwest(rectangle, fromRectangleLowerLeft));\r\n    var upperRight = projection.project(Rectangle.northeast(rectangle, fromRectangleUpperRight));\r\n\r\n    Cartesian2.subtract(upperRight, lowerLeft, upperRight);\r\n\r\n    result.x = lowerLeft.x;\r\n    result.y = lowerLeft.y;\r\n    result.width = upperRight.x;\r\n    result.height = upperRight.y;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Duplicates a BoundingRectangle instance.\r\n *\r\n * @param {BoundingRectangle} rectangle The bounding rectangle to duplicate.\r\n * @param {BoundingRectangle} [result] The object onto which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided. (Returns undefined if rectangle is undefined)\r\n */\r\nBoundingRectangle.clone = function (rectangle, result) {\r\n    if (!defined(rectangle)) {\r\n        return undefined;\r\n    }\r\n\r\n    if (!defined(result)) {\r\n        return new BoundingRectangle(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\r\n    }\r\n\r\n    result.x = rectangle.x;\r\n    result.y = rectangle.y;\r\n    result.width = rectangle.width;\r\n    result.height = rectangle.height;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a bounding rectangle that is the union of the left and right bounding rectangles.\r\n *\r\n * @param {BoundingRectangle} left A rectangle to enclose in bounding rectangle.\r\n * @param {BoundingRectangle} right A rectangle to enclose in a bounding rectangle.\r\n * @param {BoundingRectangle} [result] The object onto which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\r\n */\r\nBoundingRectangle.union = function (left, right, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('left', left);\r\n    Check.typeOf.object('right', right);\r\n    //>>includeEnd('debug');\r\n\r\n    if (!defined(result)) {\r\n        result = new BoundingRectangle();\r\n    }\r\n\r\n    var lowerLeftX = Math.min(left.x, right.x);\r\n    var lowerLeftY = Math.min(left.y, right.y);\r\n    var upperRightX = Math.max(left.x + left.width, right.x + right.width);\r\n    var upperRightY = Math.max(left.y + left.height, right.y + right.height);\r\n\r\n    result.x = lowerLeftX;\r\n    result.y = lowerLeftY;\r\n    result.width = upperRightX - lowerLeftX;\r\n    result.height = upperRightY - lowerLeftY;\r\n    return result;\r\n};\r\n\r\n/**\r\n * Computes a bounding rectangle by enlarging the provided rectangle until it contains the provided point.\r\n *\r\n * @param {BoundingRectangle} rectangle A rectangle to expand.\r\n * @param {Cartesian2} point A point to enclose in a bounding rectangle.\r\n * @param {BoundingRectangle} [result] The object onto which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\r\n */\r\nBoundingRectangle.expand = function (rectangle, point, result) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('rectangle', rectangle);\r\n    Check.typeOf.object('point', point);\r\n    //>>includeEnd('debug');\r\n\r\n    result = BoundingRectangle.clone(rectangle, result);\r\n\r\n    var width = point.x - result.x;\r\n    var height = point.y - result.y;\r\n\r\n    if (width > result.width) {\r\n        result.width = width;\r\n    } else if (width < 0) {\r\n        result.width -= width;\r\n        result.x = point.x;\r\n    }\r\n\r\n    if (height > result.height) {\r\n        result.height = height;\r\n    } else if (height < 0) {\r\n        result.height -= height;\r\n        result.y = point.y;\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\n/**\r\n * Determines if two rectangles intersect.\r\n *\r\n * @param {BoundingRectangle} left A rectangle to check for intersection.\r\n * @param {BoundingRectangle} right The other rectangle to check for intersection.\r\n * @returns {Intersect} <code>Intersect.INTERSECTING</code> if the rectangles intersect, <code>Intersect.OUTSIDE</code> otherwise.\r\n */\r\nBoundingRectangle.intersect = function (left, right) {\r\n    //>>includeStart('debug', pragmas.debug);\r\n    Check.typeOf.object('left', left);\r\n    Check.typeOf.object('right', right);\r\n    //>>includeEnd('debug');\r\n\r\n    var leftX = left.x;\r\n    var leftY = left.y;\r\n    var rightX = right.x;\r\n    var rightY = right.y;\r\n    if (!(leftX > rightX + right.width || leftX + left.width < rightX || leftY + left.height < rightY || leftY > rightY + right.height)) {\r\n        return Intersect.INTERSECTING;\r\n    }\r\n\r\n    return Intersect.OUTSIDE;\r\n};\r\n\r\n/**\r\n * Compares the provided BoundingRectangles componentwise and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {BoundingRectangle} [left] The first BoundingRectangle.\r\n * @param {BoundingRectangle} [right] The second BoundingRectangle.\r\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\r\n */\r\nBoundingRectangle.equals = function (left, right) {\r\n    return left === right || (defined(left) && defined(right) && left.x === right.x && left.y === right.y && left.width === right.width && left.height === right.height);\r\n};\r\n\r\n/**\r\n * Duplicates this BoundingRectangle instance.\r\n *\r\n * @param {BoundingRectangle} [result] The object onto which to store the result.\r\n * @returns {BoundingRectangle} The modified result parameter or a new BoundingRectangle instance if one was not provided.\r\n */\r\nBoundingRectangle.prototype.clone = function (result) {\r\n    return BoundingRectangle.clone(this, result);\r\n};\r\n\r\n/**\r\n * Determines if this rectangle intersects with another.\r\n *\r\n * @param {BoundingRectangle} right A rectangle to check for intersection.\r\n * @returns {Intersect} <code>Intersect.INTERSECTING</code> if the rectangles intersect, <code>Intersect.OUTSIDE</code> otherwise.\r\n */\r\nBoundingRectangle.prototype.intersect = function (right) {\r\n    return BoundingRectangle.intersect(this, right);\r\n};\r\n\r\n/**\r\n * Compares this BoundingRectangle against the provided BoundingRectangle componentwise and returns\r\n * <code>true</code> if they are equal, <code>false</code> otherwise.\r\n *\r\n * @param {BoundingRectangle} [right] The right hand side BoundingRectangle.\r\n * @returns {Boolean} <code>true</code> if they are equal, <code>false</code> otherwise.\r\n */\r\nBoundingRectangle.prototype.equals = function (right) {\r\n    return BoundingRectangle.equals(this, right);\r\n};\r\nexport default BoundingRectangle;\r\n"],"names":["defaultValue","Check","defined","GeographicProjection","Cartographic","Rectangle","Cartesian2","Intersect"],"mappings":"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"}